{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\OutterOsSdk.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport OsSdk from './OsSdk.js';\n\nfunction OtterSkd(drizzle, drizzleState) {\n  _s();\n\n  const _useState = useState(0),\n        count = _useState[0],\n        setCount = _useState[1];\n\n  const _useState2 = useState([]),\n        projectTokenIds = _useState2[0],\n        setprojectTokenIds = _useState2[1];\n\n  useEffect(() => {\n    const fetchStats = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var proxyUrl, targetUrl, collectionSlug, collection, i, tokenIdArray, callsPerProject;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.opensea.io/api/v1/collection/';\n              collectionSlug = 'doodles-official/';\n              collection = 'stats';\n              tokenIdArray = [];\n              console.log(tokenIdArray);\n              callsPerProject = 2; //console.log(offset)\n\n              fetch(targetUrl + collectionSlug + collection, {\n                header: 'x-api-key:2f2a0900458f4bdfbb489680a58e7526'\n              }).then(res => res.json()).then(res => {\n                console.log(res.stats.count);\n                setCount(res.stats.count);\n              }, error => {\n                //setLoading(true),\n                error;\n              }).then(res => {\n                //console.log(res.stats.count);\n                //setCount(res.stats.count)\n                for (i = 0; i < count; i++) {\n                  //const tokenIdObject = result.data.projects[0].tokens[j];\n                  tokenIdArray.push(i);\n                }\n              }, error => {\n                //setLoading(true),\n                error;\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchStats() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchStats();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"jjjjj\", __jsx(OsSdk, {\n    drizzleState: drizzleState,\n    drizzle: drizzle,\n    count: count,\n    projectTokenIds: projectTokenIds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(OtterSkd, \"9U8h+B18bWIHubtO3iayUnFHBtg=\");\n\n_c = OtterSkd;\nexport default OtterSkd;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtterSkd\");","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/OutterOsSdk.js"],"names":["React","useState","useEffect","OsSdk","OtterSkd","drizzle","drizzleState","count","setCount","projectTokenIds","setprojectTokenIds","fetchStats","proxyUrl","targetUrl","collectionSlug","collection","tokenIdArray","console","log","callsPerProject","fetch","header","then","res","json","stats","error","i","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAGA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,YAA3B,EAAyC;AAAA;;AAAA,oBACXL,QAAQ,CAAC,CAAD,CADG;AAAA,QAC9BM,KAD8B;AAAA,QACvBC,QADuB;;AAAA,qBAESP,QAAQ,CAAC,EAAD,CAFjB;AAAA,QAE9BQ,eAF8B;AAAA,QAEbC,kBAFa;;AAIrCR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAEXC,cAAAA,QAFW,GAEA,sCAFA,EAGfC,SAHe,GAGH,2CAHG;AAITC,cAAAA,cAJS,GAIO,mBAJP;AAKTC,cAAAA,UALS,GAKE,OALF;AASXC,cAAAA,YATW,GASG,EATH;AAUfC,cAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACMG,cAAAA,eAXS,GAWS,CAXT,EAYf;;AAGAC,cAAAA,KAAK,CAACP,SAAS,GAAGC,cAAZ,GAA6BC,UAA9B,EAAyC;AAACM,gBAAAA,MAAM,EAAC;AAAR,eAAzC,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKC,GAAD,IAAS;AACNN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACE,KAAJ,CAAUlB,KAAtB;AACAC,gBAAAA,QAAQ,CAACe,GAAG,CAACE,KAAJ,CAAUlB,KAAX,CAAR;AACF,eANL,EAOKmB,KAAD,IAAW;AACT;AACAA,gBAAAA,KAAK;AACN,eAVL,EAYGJ,IAZH,CAaKC,GAAD,IAAS;AACN;AACA;AACA,qBAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,KAAhB,EAAuBoB,CAAC,EAAxB,EAA4B;AAC3B;AACAX,kBAAAA,YAAY,CAACY,IAAb,CAAkBD,CAAlB;AACD;AACF,eApBL,EAqBKD,KAAD,IAAW;AACT;AACAA,gBAAAA,KAAK;AACN,eAxBL;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVf,UAAU;AAAA;AAAA;AAAA,OAAhB;;AA4CAA,IAAAA,UAAU;AACX,GA9CM,EA8CJ,EA9CI,CAAT;AAiDA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE,MAAC,KAAD;AAAQ,IAAA,YAAY,EAAEL,YAAtB;AAAoC,IAAA,OAAO,EAAED,OAA7C;AAAsD,IAAA,KAAK,EAAEE,KAA7D;AAAoE,IAAA,eAAe,EAAEE,eAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;GA3DML,Q;;KAAAA,Q;AA6DP,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport OsSdk from './OsSdk.js';\r\n\r\n\r\nfunction OtterSkd(drizzle, drizzleState) {\r\n    const [count, setCount] = useState(0);\r\n    const [projectTokenIds, setprojectTokenIds] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchStats = async () => { \r\n   \r\n            var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n            targetUrl = 'https://api.opensea.io/api/v1/collection/';\r\n            const collectionSlug= 'doodles-official/';\r\n            const collection='stats';\r\n           \r\n        \r\n            let i;\r\n            let tokenIdArray= [];\r\n            console.log(tokenIdArray)\r\n            const callsPerProject = 2;\r\n            //console.log(offset)\r\n\r\n        \r\n            fetch(targetUrl + collectionSlug + collection,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\r\n              .then(res => res.json())\r\n              .then(\r\n                (res) => {\r\n                   console.log(res.stats.count);\r\n                   setCount(res.stats.count)\r\n                },\r\n                (error) => {\r\n                  //setLoading(true),\r\n                  error;\r\n                }\r\n              )\r\n              .then(\r\n                (res) => {\r\n                   //console.log(res.stats.count);\r\n                   //setCount(res.stats.count)\r\n                   for (i = 0; i < count; i++) {\r\n                    //const tokenIdObject = result.data.projects[0].tokens[j];\r\n                    tokenIdArray.push(i)\r\n                  }           \r\n                },\r\n                (error) => {\r\n                  //setLoading(true),\r\n                  error;\r\n                }\r\n              )\r\n\r\n     \r\n        }\r\n        fetchStats();\r\n      }, []);\r\n    \r\n  \r\n    return (\r\n      <div>\r\n          jjjjj\r\n        <OsSdk  drizzleState={drizzleState} drizzle={drizzle} count={count} projectTokenIds={projectTokenIds}   />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default OtterSkd;"]},"metadata":{},"sourceType":"module"}