{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\component-overview\\\\ProposalCountdown.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment'; //import Moment from 'react-moment';\n//import 'moment-timezone';\n\nexport default class ProposalEndDate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined\n    });\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const {\n        timeTillDate,\n        timeFormat\n      } = this.props;\n      const then = moment(timeTillDate, timeFormat);\n      const now = moment.utc();\n      const npw = now.format('MM DD YYYY, HH:mm a');\n      const countdown = moment(then - npw);\n      const days = countdown.format('D');\n      const hours = countdown.format('HH');\n      const minutes = countdown.format('mm');\n      const seconds = countdown.format('ss');\n      this.setState({\n        days,\n        hours,\n        minutes,\n        seconds\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state; // Mapping the date values to radius values\n\n    const daysRadius = mapNumber(days, 2, 0, 0, 360);\n    const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n    const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n    const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n    if (!seconds) {\n      return null;\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"countdown-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, days && __jsx(\"div\", {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(SVGCircle, {\n      radius: daysRadius,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), days, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"days\")), hours && __jsx(\"div\", {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(SVGCircle, {\n      radius: hoursRadius,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), hours, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"hours\")), minutes && __jsx(\"div\", {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(SVGCircle, {\n      radius: minutesRadius,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), minutes, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"minutes\")), seconds && __jsx(\"div\", {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(SVGCircle, {\n      radius: secondsRadius,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), seconds, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"seconds\"))));\n  }\n\n}\n\nconst SVGCircle = ({\n  radius\n}) => __jsx(\"svg\", {\n  className: \"countdown-svg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, __jsx(\"path\", {\n  fill: \"none\",\n  stroke: \"#007bff\",\n  strokeWidth: \"2\",\n  d: describeArc(25, 25, 24, 0, radius),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n})); // From StackOverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\n\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n  var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n  var d = ['M', start.x, start.y, 'A', radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(' ');\n  return d;\n} // From StackOverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\n\n\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/component-overview/ProposalCountdown.js"],"names":["React","moment","ProposalEndDate","Component","days","undefined","hours","minutes","seconds","componentDidMount","interval","setInterval","timeTillDate","timeFormat","props","then","now","utc","npw","format","countdown","setState","componentWillUnmount","clearInterval","render","state","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","SVGCircle","radius","describeArc","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","d","join","number","in_min","in_max","out_min","out_max"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n//import Moment from 'react-moment';\r\n//import 'moment-timezone';\r\n\r\nexport default class ProposalEndDate extends React.Component {\r\n    state = {\r\n        days: undefined,\r\n        hours: undefined,\r\n        minutes: undefined,\r\n        seconds: undefined\r\n    };\r\n    \r\n    componentDidMount() {\r\n      this.interval = setInterval(() => {\r\n          const { timeTillDate, timeFormat } = this.props;\r\n          const then = moment(timeTillDate, timeFormat);\r\n          const now = moment.utc();\r\n          const npw = now.format('MM DD YYYY, HH:mm a');\r\n          const countdown = moment(then - npw);\r\n          const days = countdown.format('D');\r\n          const hours = countdown.format('HH');\r\n          const minutes = countdown.format('mm');\r\n          const seconds = countdown.format('ss');\r\n          this.setState({ days, hours, minutes, seconds });\r\n      });\r\n  }\r\n    \r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { days, hours, minutes, seconds } = this.state;\r\n        \r\n        // Mapping the date values to radius values\r\n        const daysRadius = mapNumber(days, 2, 0, 0, 360);\r\n        const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\r\n        const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\r\n        const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\r\n        \r\n        if (!seconds) {\r\n            return null;\r\n        }\r\n        \r\n        return (\r\n          <div>\r\n          <div className=\"countdown-wrapper\">\r\n              {days && (\r\n                  <div className=\"countdown-item\">\r\n                      <SVGCircle radius={daysRadius} />\r\n                      {days}\r\n                      <span>days</span>\r\n                  </div>\r\n              )}\r\n              {hours && (\r\n                  <div className=\"countdown-item\">\r\n                      <SVGCircle radius={hoursRadius} />\r\n                      {hours}\r\n                      <span>hours</span>\r\n                  </div>\r\n              )}\r\n              {minutes && (\r\n                  <div className=\"countdown-item\">\r\n                      <SVGCircle radius={minutesRadius} />\r\n                      {minutes}\r\n                      <span>minutes</span>\r\n                  </div>\r\n              )}\r\n              {seconds && (\r\n                  <div className=\"countdown-item\">\r\n                      <SVGCircle radius={secondsRadius} />\r\n                      {seconds}\r\n                      <span>seconds</span>\r\n                  </div>\r\n              )}\r\n          </div>\r\n      </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SVGCircle = ({ radius }) => (\r\n    <svg className=\"countdown-svg\">\r\n        <path\r\n            fill=\"none\"\r\n            stroke=\"#007bff\"\r\n            strokeWidth=\"2\"\r\n            d={describeArc(25, 25, 24, 0, radius)}\r\n        />\r\n    </svg>\r\n);\r\n\r\n// From StackOverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\r\n\r\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n    var angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n    \r\n    return {\r\n        x: centerX + radius * Math.cos(angleInRadians),\r\n        y: centerY + radius * Math.sin(angleInRadians)\r\n    };\r\n}\r\n\r\nfunction describeArc(x, y, radius, startAngle, endAngle) {\r\n    var start = polarToCartesian(x, y, radius, endAngle);\r\n    var end = polarToCartesian(x, y, radius, startAngle);\r\n    var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\r\n    var d = [\r\n        'M',\r\n        start.x,\r\n        start.y,\r\n        'A',\r\n        radius,\r\n        radius,\r\n        0,\r\n        largeArcFlag,\r\n        0,\r\n        end.x,\r\n        end.y\r\n    ].join(' ');\r\n    \r\n    return d;\r\n}\r\n\r\n// From StackOverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\r\n\r\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\r\n    return (\r\n        ((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}