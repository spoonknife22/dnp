{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";\nimport { generateStore, generateContractsInitialState } from \"@drizzle/store\";\nimport drizzleOptions from \"../EthComponents/drizzleOptions\"; //CREATE STORE\n\nimport root from './sagas/root';\nimport reducer from './reducers/reducer.js'; //GENERATE STORE\n//import appRootSaga from './sagas/appSagas';\n\nimport { appReducer, appRootSaga } from './reducers/appReducers.js';\nimport rootSagas from './sagas/rootSaga'; //APPMIDDLEWARES\n\nimport { contractEventSaga, joinTransactionSaga } from './capMiddleWare';\nconst contractEventNotifier = contractEventSaga;\nconst joinTransactionComplete = joinTransactionSaga;\nconst appMiddlewares = [contractEventNotifier(), joinTransactionComplete]; //GENERATE STORE\n\nconst appReducers = {\n  appReducers: appReducer\n};\nconst appSagas = [appRootSaga]; //CREATE STORE\n// const initialState = {\n//   contracts: generateContractsInitialState(drizzleOptions)\n// };\n// const sagaMiddleware = createSagaMiddleware();\n// const allMiddlewares = [...appMiddlewares, sagaMiddleware];\n// const store = createStore(\n//       reducer,\n//       initialState,\n//     composeWithDevTools(\n//       applyMiddleware(\n//         ...allMiddlewares\n//       )\n//     )\n// );\n// sagaMiddleware.run(root);\n\nconst store = generateStore(_objectSpread(_objectSpread({\n  drizzleOptions,\n  appReducers\n}, appRootSaga), {}, {\n  appMiddlewares,\n  disableReduxDevTools: false\n}));\nexport default store;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/index.js"],"names":["React","composeWithDevTools","createSagaMiddleware","createStore","applyMiddleware","compose","DrizzleContext","DrizzleProvider","generateStore","generateContractsInitialState","drizzleOptions","root","reducer","appReducer","appRootSaga","rootSagas","contractEventSaga","joinTransactionSaga","contractEventNotifier","joinTransactionComplete","appMiddlewares","appReducers","appSagas","store","disableReduxDevTools"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,uBAAhD;AACA,SAASC,aAAT,EAAwBC,6BAAxB,QAA6D,gBAA7D;AACA,OAAOC,cAAP,MAA2B,iCAA3B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;AACA;;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,2BAAxC;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAIA;;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,iBAAvD;AACA,MAAMC,qBAAqB,GAAGF,iBAA9B;AACA,MAAMG,uBAAuB,GAAGF,mBAAhC;AACA,MAAMG,cAAc,GAAG,CAAEF,qBAAqB,EAAvB,EAA2BC,uBAA3B,CAAvB,C,CAEA;;AACA,MAAME,WAAW,GAAG;AAACA,EAAAA,WAAW,EAAER;AAAd,CAApB;AACA,MAAMS,QAAQ,GAAG,CAACR,WAAD,CAAjB,C,CAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMS,KAAK,GAAGf,aAAa;AACzBE,EAAAA,cADyB;AAEzBW,EAAAA;AAFyB,GAGtBP,WAHsB;AAIzBM,EAAAA,cAJyB;AAKzBI,EAAAA,oBAAoB,EAAE;AALG,GAA3B;AASA,eAAeD,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";  \r\nimport { generateStore, generateContractsInitialState } from \"@drizzle/store\";\r\nimport drizzleOptions from \"../EthComponents/drizzleOptions\";\r\n\r\n//CREATE STORE\r\nimport root from './sagas/root';\r\nimport reducer from './reducers/reducer.js'\r\n\r\n//GENERATE STORE\r\n//import appRootSaga from './sagas/appSagas';\r\nimport { appReducer, appRootSaga } from './reducers/appReducers.js'\r\nimport rootSagas from './sagas/rootSaga';\r\n\r\n\r\n\r\n//APPMIDDLEWARES\r\nimport { contractEventSaga, joinTransactionSaga } from './capMiddleWare';\r\nconst contractEventNotifier = contractEventSaga;\r\nconst joinTransactionComplete = joinTransactionSaga;\r\nconst appMiddlewares = [ contractEventNotifier(), joinTransactionComplete ];\r\n\r\n//GENERATE STORE\r\nconst appReducers = {appReducers: appReducer};\r\nconst appSagas = [appRootSaga];\r\n\r\n\r\n//CREATE STORE\r\n// const initialState = {\r\n//   contracts: generateContractsInitialState(drizzleOptions)\r\n// };\r\n\r\n// const sagaMiddleware = createSagaMiddleware();\r\n\r\n// const allMiddlewares = [...appMiddlewares, sagaMiddleware];\r\n\r\n// const store = createStore(\r\n//       reducer,\r\n//       initialState,\r\n//     composeWithDevTools(\r\n//       applyMiddleware(\r\n//         ...allMiddlewares\r\n//       )\r\n//     )\r\n// );\r\n\r\n// sagaMiddleware.run(root);\r\n\r\n\r\nconst store = generateStore({\r\n  drizzleOptions,\r\n  appReducers,\r\n  ...appRootSaga,\r\n  appMiddlewares,\r\n  disableReduxDevTools: false  \r\n})\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}