{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\EthAccounts.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nclass EthAccounts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.UserStorage;\n    const account = drizzleState.accounts[0];\n    const dataKey = await contract.methods[\"addresses\"].cacheCall(account);\n    this.setState({\n      dataKey\n    });\n    console.log({\n      dataKey\n    });\n  }\n\n  render() {\n    const {\n      UserStorage\n    } = this.props.drizzleState.contracts;\n    const displayData = UserStorage.profiles[this.state.dataKey]; // if displayData (an object) exists, then we can display the value \n\n    const user = displayData && displayData.value[1];\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, \"Hi: \", user, \" \");\n  }\n\n}\n\nexport default EthAccounts; //  <ContractData contract=\"Storage\" method=\"getData\" toUtf8 toAscii />","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/EthAccounts.js"],"names":["React","EthAccounts","Component","dataKey","componentDidMount","drizzle","drizzleState","props","contract","contracts","UserStorage","account","accounts","methods","cacheCall","setState","console","log","render","displayData","profiles","state","user","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCACjC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADiC;AAAA;;AAG1C,QAAMC,iBAAN,GAA0B;AACvB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4B,KAAKC,KAAvC;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,SAAR,CAAkBC,WAAnC;AACA,UAAMC,OAAO,GAAGL,YAAY,CAACM,QAAb,CAAsB,CAAtB,CAAhB;AAKD,UAAMT,OAAO,GAAG,MAAMK,QAAQ,CAACK,OAAT,CAAiB,WAAjB,EAA8BC,SAA9B,CAAwCH,OAAxC,CAAtB;AACA,SAAKI,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACd,MAAAA;AAAD,KAAZ;AACA;;AAGDe,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAER,MAAAA;AAAF,QAAkB,KAAKH,KAAL,CAAWD,YAAX,CAAwBG,SAAhD;AACA,UAAMU,WAAW,GAAGT,WAAW,CAACU,QAAZ,CAAqB,KAAKC,KAAL,CAAWlB,OAAhC,CAApB,CAHO,CAGuD;;AAC9D,UAAMmB,IAAI,GAAIH,WAAW,IAAIA,WAAW,CAACI,KAAZ,CAAkB,CAAlB,CAA7B;AAGA,WAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQD,IAAR,MAFD;AAID;;AA5BwC;;AA+B1C,eAAerB,WAAf,C,CAEA","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass EthAccounts extends React.Component {\r\n state = { dataKey: null };\r\n\r\nasync componentDidMount() {\r\n   const { drizzle, drizzleState } = this.props;\r\n   const contract = drizzle.contracts.UserStorage;\r\n   const account = drizzleState.accounts[0];\r\n  \r\n                                                        \r\n \r\n \r\n  const dataKey = await contract.methods[\"addresses\"].cacheCall(account);\r\n  this.setState({ dataKey });\r\n  console.log({dataKey})\r\n }\r\n\r\n\r\n render() {\r\n  \r\n   const { UserStorage } = this.props.drizzleState.contracts;\r\n   const displayData = UserStorage.profiles[this.state.dataKey]; // if displayData (an object) exists, then we can display the value \r\n   const user =  displayData && displayData.value[1];\r\n  \r\n\r\n   return (\r\n\r\n    <p>Hi: {user} </p>\r\n   )\r\n }\r\n}\r\n\r\nexport default EthAccounts\r\n\r\n//  <ContractData contract=\"Storage\" method=\"getData\" toUtf8 toAscii />\r\n"]},"metadata":{},"sourceType":"module"}