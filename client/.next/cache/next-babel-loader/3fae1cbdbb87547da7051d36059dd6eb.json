{"ast":null,"code":"import { generateStore, EventActions, drizzleReducers, TX_BROADCASTED } from '@drizzle/store';\nimport drizzleOptions from '../drizzleOptions';\nimport { toast } from 'react-toastify';\n\nconst contractEventNotifier = store => next => action => {\n  if (action.type === EventActions.EVENT_FIRED) {\n    const contract = action.name;\n    const contractEvent = action.event.event;\n    const message = action.event.returnValues._message;\n    const display = `${message}`;\n    toast.success(display, {\n      position: toast.POSITION.BOTTOM_RIGHT\n    });\n  }\n\n  return next(action);\n};\n\nconst joinTransactionNotifier = store => next => action => {\n  if (action.type === TX_BROADCASTED) {\n    const broadcast = action.txHash; //const txStatus = action.event.event\n\n    const message = action.txHash;\n    console.log({\n      message\n    });\n    const display = `${message}`;\n    toast.success(display, {\n      position: toast.POSITION.BOTTOM_LEFT\n    });\n  }\n\n  return next(action);\n};\n\nconst appMiddlewares = [contractEventNotifier, joinTransactionNotifier];\nexport default generateStore({\n  drizzleOptions,\n  appMiddlewares,\n  disableReduxDevTools: false // enable ReduxDevTools!\n\n});","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/middleware/index.js"],"names":["generateStore","EventActions","drizzleReducers","TX_BROADCASTED","drizzleOptions","toast","contractEventNotifier","store","next","action","type","EVENT_FIRED","contract","name","contractEvent","event","message","returnValues","_message","display","success","position","POSITION","BOTTOM_RIGHT","joinTransactionNotifier","broadcast","txHash","console","log","BOTTOM_LEFT","appMiddlewares","disableReduxDevTools"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,eAAtC,EAAuDC,cAAvD,QAA8E,gBAA9E;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,qBAAqB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgBT,YAAY,CAACU,WAAjC,EAA8C;AAC5C,UAAMC,QAAQ,GAAGH,MAAM,CAACI,IAAxB;AACA,UAAMC,aAAa,GAAGL,MAAM,CAACM,KAAP,CAAaA,KAAnC;AACA,UAAMC,OAAO,GAAGP,MAAM,CAACM,KAAP,CAAaE,YAAb,CAA0BC,QAA1C;AACA,UAAMC,OAAO,GAAI,GAAEH,OAAQ,EAA3B;AAEAX,IAAAA,KAAK,CAACe,OAAN,CAAcD,OAAd,EAAuB;AAAEE,MAAAA,QAAQ,EAAEhB,KAAK,CAACiB,QAAN,CAAeC;AAA3B,KAAvB;AACD;;AACD,SAAOf,IAAI,CAACC,MAAD,CAAX;AACD,CAVD;;AAYA,MAAMe,uBAAuB,GAAGjB,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgBP,cAApB,EAAoC;AAClC,UAAMsB,SAAS,GAAGhB,MAAM,CAACiB,MAAzB,CADkC,CAElC;;AACA,UAAMV,OAAO,GAAGP,MAAM,CAACiB,MAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACZ,MAAAA;AAAD,KAAZ;AACA,UAAMG,OAAO,GAAI,GAAEH,OAAQ,EAA3B;AAEAX,IAAAA,KAAK,CAACe,OAAN,CAAcD,OAAd,EAAuB;AAAEE,MAAAA,QAAQ,EAAEhB,KAAK,CAACiB,QAAN,CAAeO;AAA3B,KAAvB;AACD;;AACD,SAAOrB,IAAI,CAACC,MAAD,CAAX;AACD,CAXD;;AAaA,MAAMqB,cAAc,GAAG,CAAExB,qBAAF,EAAyBkB,uBAAzB,CAAvB;AAEA,eAAexB,aAAa,CAAC;AAC3BI,EAAAA,cAD2B;AAE3B0B,EAAAA,cAF2B;AAG3BC,EAAAA,oBAAoB,EAAE,KAHK,CAGE;;AAHF,CAAD,CAA5B","sourcesContent":["import { generateStore, EventActions, drizzleReducers, TX_BROADCASTED  } from '@drizzle/store'\r\nimport drizzleOptions from '../drizzleOptions'\r\nimport { toast } from 'react-toastify'\r\n \r\nconst contractEventNotifier = store => next => action => {\r\n  if (action.type === EventActions.EVENT_FIRED) {\r\n    const contract = action.name\r\n    const contractEvent = action.event.event\r\n    const message = action.event.returnValues._message\r\n    const display = `${message}`\r\n \r\n    toast.success(display, { position: toast.POSITION.BOTTOM_RIGHT })\r\n  }\r\n  return next(action)\r\n}\r\n\r\nconst joinTransactionNotifier = store => next => action => {\r\n  if (action.type === TX_BROADCASTED) {\r\n    const broadcast = action.txHash\r\n    //const txStatus = action.event.event\r\n    const message = action.txHash\r\n    console.log({message})\r\n    const display = `${message}`\r\n \r\n    toast.success(display, { position: toast.POSITION.BOTTOM_LEFT })\r\n  }\r\n  return next(action)\r\n}\r\n\r\nconst appMiddlewares = [ contractEventNotifier, joinTransactionNotifier ]\r\n\r\nexport default generateStore({\r\n  drizzleOptions,\r\n  appMiddlewares,\r\n  disableReduxDevTools: false  // enable ReduxDevTools!\r\n})"]},"metadata":{},"sourceType":"module"}