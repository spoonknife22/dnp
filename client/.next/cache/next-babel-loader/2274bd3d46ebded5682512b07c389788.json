{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\pages\\\\testpage.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Navbar from '../components/layout/Navbar.js';\nimport HeadOne from '../components/layout/Head.js';\nimport Footer from '../components/layout/Footer.js';\nimport { connect, Provider } from 'react-redux';\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";\nimport { ToastContainer } from 'react-toastify';\nimport { generateStore } from \"@drizzle/store\";\nimport drizzleOptions from \"../EthComponents/drizzleOptions\";\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\nimport rootSaga from '../middleware/sagas/fetchSaga';\nimport appSagas from '../middleware/sagas/rootSaga';\nimport reducer from '../middleware/reducers/appReducers.js';\nconst contractEventNotifier = contractEventSaga;\nconst joinTransactionComplete = joinTransactionSaga;\nconst appMiddlewares = [contractEventNotifier(), joinTransactionComplete];\nconst appReducers = {\n  appReducers: reducer\n};\nconst store = generateStore(_objectSpread(_objectSpread({\n  drizzleOptions,\n  appReducers\n}, appSagas), {}, {\n  appMiddlewares,\n  disableReduxDevTools: false\n}));\n\nclass TestPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      manaBalance: null\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }\n    }, __jsx(Provider, {\n      store: store,\n      options: drizzleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, \"Hello\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  propAddress: state.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //onSetDrizzleState: (drizzleStateSet) => dispatch({ type: \"SET_DRIZZLE_STATE\", drizzle: drizzleStateSet }),\n  // getTokenId: (result) =>  dispatch({ type: \"TOKEN_ID_FETCH\", tokenId:result }),\n  getCurrentProp: () => dispatch({\n    type: \"GET_PROP_ADDRESS\",\n    propAddress: 3\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPage);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/pages/testpage.js"],"names":["React","Navbar","HeadOne","Footer","connect","Provider","DrizzleContext","DrizzleProvider","ToastContainer","generateStore","drizzleOptions","contractEventSaga","joinTransactionSaga","rootSaga","appSagas","reducer","contractEventNotifier","joinTransactionComplete","appMiddlewares","appReducers","store","disableReduxDevTools","TestPage","Component","constructor","props","state","manaBalance","render","mapStateToProps","propAddress","mapDispatchToProps","dispatch","getCurrentProp","type"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,uBAAhD;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,cAAP,MAA4B,iCAA5B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,6BAAvD;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AAEA,MAAMC,qBAAqB,GAAGL,iBAA9B;AACA,MAAMM,uBAAuB,GAAGL,mBAAhC;AACA,MAAMM,cAAc,GAAG,CAAEF,qBAAqB,EAAvB,EAA2BC,uBAA3B,CAAvB;AACA,MAAME,WAAW,GAAG;AAACA,EAAAA,WAAW,EAAEJ;AAAd,CAApB;AAEA,MAAMK,KAAK,GAAGX,aAAa;AACvBC,EAAAA,cADuB;AAEvBS,EAAAA;AAFuB,GAGpBL,QAHoB;AAIvBI,EAAAA,cAJuB;AAKvBG,EAAAA,oBAAoB,EAAC;AALE,GAA3B;;AASA,MAAMC,QAAN,SAAuBtB,KAAK,CAACuB,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAC;AADD,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAER,KAAjB;AAAwB,MAAA,OAAO,EAAEV,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,CADF,CAFE;AAUD;;AAnBoC;;AAsBvC,MAAMmB,eAAe,GAAIH,KAAD,KAAY;AAClCI,EAAAA,WAAW,EAAEJ,KAAK,CAACI;AADe,CAAZ,CAAxB;;AAIC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC;AACA;AACCC,EAAAA,cAAc,EAAE,MAAOD,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,kBAAR;AAA2BJ,IAAAA,WAAW,EAAC;AAAvC,GAAD;AAHQ,CAAf,CAA3B;;AAMA,eAAe1B,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport Navbar from '../components/layout/Navbar.js';\r\nimport HeadOne from '../components/layout/Head.js';\r\nimport Footer from '../components/layout/Footer.js'\r\nimport { connect, Provider } from 'react-redux';\r\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\"; \r\nimport { ToastContainer } from 'react-toastify';   \r\nimport { generateStore } from \"@drizzle/store\";\r\nimport drizzleOptions  from \"../EthComponents/drizzleOptions\";\r\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\r\nimport rootSaga from '../middleware/sagas/fetchSaga';\r\nimport appSagas from '../middleware/sagas/rootSaga';\r\nimport reducer from '../middleware/reducers/appReducers.js'\r\n\r\nconst contractEventNotifier = contractEventSaga;\r\nconst joinTransactionComplete = joinTransactionSaga;\r\nconst appMiddlewares = [ contractEventNotifier(), joinTransactionComplete ];\r\nconst appReducers = {appReducers: reducer};\r\n\r\nconst store = generateStore({\r\n    drizzleOptions,\r\n    appReducers,\r\n    ...appSagas,\r\n    appMiddlewares,\r\n    disableReduxDevTools:false\r\n})\r\n\r\n\r\nclass TestPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      manaBalance:null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n  <div>\r\n    <Provider store={store} options={drizzleOptions} >\r\n \r\n    <div>Hello</div>\r\n \r\n    </Provider>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  propAddress: state.propAddress\r\n })\r\n \r\n const mapDispatchToProps = (dispatch) => ({\r\n   //onSetDrizzleState: (drizzleStateSet) => dispatch({ type: \"SET_DRIZZLE_STATE\", drizzle: drizzleStateSet }),\r\n   // getTokenId: (result) =>  dispatch({ type: \"TOKEN_ID_FETCH\", tokenId:result }),\r\n    getCurrentProp: () =>  dispatch({ type: \"GET_PROP_ADDRESS\",propAddress:3 })\r\n });\r\n \r\n export default connect(mapStateToProps, mapDispatchToProps)(TestPage);"]},"metadata":{},"sourceType":"module"}