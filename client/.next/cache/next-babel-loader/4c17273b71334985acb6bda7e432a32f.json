{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\";\n\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useEffect, useState } from 'react';\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = ({\n  drizzleState,\n  drizzle,\n  state,\n  handleSlide,\n  propAddress,\n  tokenId,\n  assetPrice,\n  newAbi\n}) => {\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var web3, proposalAddress, contractConfig, propBalance, proposalBalance;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            web3 = new Web3(\"HTTP://127.0.0.1:7545\");\n\n            if (!(propAddress === null)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 4;\n            return drizzle.contracts.ProposalController.methods.getPropTokenIdMap(\"\".concat(tokenId)).call();\n\n          case 4:\n            proposalAddress = _context.sent;\n            contractConfig = {\n              contractName: \"ProposalStorage\",\n              web3Contract: new web3.eth.Contract(newAbi, \"\".concat(proposalAddress))\n            };\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              drizzle.addContract(contractConfig);\n            }\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 10;\n            return drizzle.contracts.ProposalStorage.methods.proposals(\"\".concat(tokenId)).call();\n\n          case 10:\n            propBalance = _context.sent;\n            _context.next = 13;\n            return propBalance.balance;\n\n          case 13:\n            proposalBalance = _context.sent;\n            drizzle.store.dispatch({\n              type: 'PROPOSAL_BALANCE',\n              balance: \"\".concat(proposalBalance)\n            });\n\n          case 15:\n            if (!(propAddress !== undefined && propAddress !== null)) {\n              _context.next = 29;\n              break;\n            }\n\n            proposalAddress = \"\".concat(propAddress);\n            contractConfig = {\n              contractName: \"ProposalStorage\",\n              web3Contract: new web3.eth.Contract(newAbi, proposalAddress)\n            };\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              drizzle.addContract(contractConfig);\n            }\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              _context.next = 27;\n              break;\n            }\n\n            _context.next = 22;\n            return drizzle.contracts.ProposalStorage.methods.proposals(\"\".concat(tokenId)).call();\n\n          case 22:\n            propBalance = _context.sent;\n            _context.next = 25;\n            return propBalance.balance;\n\n          case 25:\n            proposalBalance = _context.sent;\n            drizzle.store.dispatch({\n              type: 'PROPOSAL_BALANCE',\n              balance: \"\".concat(proposalBalance)\n            });\n\n          case 27:\n            _context.next = 30;\n            break;\n\n          case 29:\n            __jsx(\"div\", {\n              className: \"mx-auto\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 5\n              }\n            }, __jsx(Loader, {\n              color: \"#007bff\",\n              size: \"40px\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 7\n              }\n            }));\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (tokenId !== null && newAbi !== null) {\n    useEffect(() => {\n      fetchProposalAddress();\n    }, [propAddress]);\n  } else {\n    __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ContributeForm, {\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    assetPrice: assetPrice,\n    propAddress: propAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default ContributeInnnerModal;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","Web3","ContributeForm","Loader","ContributeInnnerModal","drizzleState","drizzle","state","handleSlide","propAddress","tokenId","assetPrice","newAbi","fetchProposalAddress","web3","contracts","ProposalController","methods","getPropTokenIdMap","call","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","addContract","ProposalStorage","proposals","propBalance","balance","proposalBalance","store","dispatch","type","undefined"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,qBAAqB,GAAI,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA,WAAhC;AAA6CC,EAAAA,WAA7C;AAA0DC,EAAAA,OAA1D;AAAmEC,EAAAA,UAAnE;AAA+EC,EAAAA;AAA/E,CAAD,KAA6F;AAE1H,QAAMC,oBAAoB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAEzBC,YAAAA,IAFyB,GAElB,IAAIb,IAAJ,CAAS,uBAAT,CAFkB;;AAAA,kBAG1BQ,WAAW,KAAK,IAHU;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAICH,OAAO,CAACS,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6CC,iBAA7C,WAAkER,OAAlE,GAA6ES,IAA7E,EAJD;;AAAA;AAIvBC,YAAAA,eAJuB;AAKvBC,YAAAA,cALuB,GAKN;AACrBC,cAAAA,YAAY,EAAE,iBADO;AAErBC,cAAAA,YAAY,EAAE,IAAIT,IAAI,CAACU,GAAL,CAASC,QAAb,CAAsBb,MAAtB,YAAiCQ,eAAjC;AAFO,aALM;;AAS7B,gBAAI,CAACd,OAAO,CAACS,SAAR,CAAkB,iBAAlB,CAAL,EAA2C;AACzCT,cAAAA,OAAO,CAACoB,WAAR,CAAoBL,cAApB;AACC;;AAX0B,iBAYxBf,OAAO,CAACS,SAAR,CAAkB,iBAAlB,CAZwB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAaCT,OAAO,CAACS,SAAR,CAAkBY,eAAlB,CAAkCV,OAAlC,CAA0CW,SAA1C,WAAuDlB,OAAvD,GAAkES,IAAlE,EAbD;;AAAA;AAanBU,YAAAA,WAbmB;AAAA;AAAA,mBAcKA,WAAW,CAACC,OAdjB;;AAAA;AAcnBC,YAAAA,eAdmB;AAezBzB,YAAAA,OAAO,CAAC0B,KAAR,CAAcC,QAAd,CAAuB;AAAEC,cAAAA,IAAI,EAAC,kBAAP;AAA2BJ,cAAAA,OAAO,YAAIC,eAAJ;AAAlC,aAAvB;;AAfyB;AAAA,kBAmB1BtB,WAAW,KAAK0B,SAAhB,IAA6B1B,WAAW,KAAK,IAnBnB;AAAA;AAAA;AAAA;;AAoBvBW,YAAAA,eApBuB,aAoBFX,WApBE;AAqBrBY,YAAAA,cArBqB,GAqBJ;AACrBC,cAAAA,YAAY,EAAE,iBADO;AAErBC,cAAAA,YAAY,EAAE,IAAIT,IAAI,CAACU,GAAL,CAASC,QAAb,CAAsBb,MAAtB,EAA8BQ,eAA9B;AAFO,aArBI;;AAyB3B,gBAAI,CAACd,OAAO,CAACS,SAAR,CAAkB,iBAAlB,CAAL,EAA2C;AACzCT,cAAAA,OAAO,CAACoB,WAAR,CAAoBL,cAApB;AACD;;AA3B0B,iBA4BxBf,OAAO,CAACS,SAAR,CAAkB,iBAAlB,CA5BwB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA6BCT,OAAO,CAACS,SAAR,CAAkBY,eAAlB,CAAkCV,OAAlC,CAA0CW,SAA1C,WAAuDlB,OAAvD,GAAkES,IAAlE,EA7BD;;AAAA;AA6BnBU,YAAAA,WA7BmB;AAAA;AAAA,mBA8BKA,WAAW,CAACC,OA9BjB;;AAAA;AA8BnBC,YAAAA,eA9BmB;AA+BzBzB,YAAAA,OAAO,CAAC0B,KAAR,CAAcC,QAAd,CAAuB;AAAEC,cAAAA,IAAI,EAAC,kBAAP;AAA2BJ,cAAAA,OAAO,YAAIC,eAAJ;AAAlC,aAAvB;;AA/ByB;AAAA;AAAA;;AAAA;AAoC3B;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,IAAI,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AApC2B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApBlB,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AA0CA,MAAGH,OAAO,KAAK,IAAZ,IAAoBE,MAAM,KAAK,IAAlC,EAAwC;AACxCb,IAAAA,SAAS,CAAC,MAAM;AACdc,MAAAA,oBAAoB;AACrB,KAFQ,EAEN,CAACJ,WAAD,CAFM,CAAT;AAGC,GAJD,MAKI;AACF;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAED,SACM,4BACE,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEH,OAAzB;AAAkC,IAAA,YAAY,EAAED,YAAhD;AAA8D,IAAA,UAAU,EAAEM,UAA1E;AAAsF,IAAA,WAAW,EAAEF,WAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADN;AAKG,CA5DL;;AA8DA,eAAeL,qBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal =  ({ drizzleState, drizzle, state, handleSlide, propAddress, tokenId, assetPrice, newAbi }) => {\r\n\r\n  const fetchProposalAddress = async () => {\r\n  \r\n  let web3 = new Web3(\"HTTP://127.0.0.1:7545\");\r\n  if(propAddress === null) {\r\n  const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenId}`).call(); \r\n  const contractConfig = {\r\n    contractName: \"ProposalStorage\",\r\n    web3Contract: new web3.eth.Contract(newAbi, `${proposalAddress}`)\r\n    }\r\n  if (!drizzle.contracts['ProposalStorage']) {\r\n    drizzle.addContract(contractConfig);\r\n    } \r\n    if(drizzle.contracts['ProposalStorage']){\r\n      const propBalance = await drizzle.contracts.ProposalStorage.methods.proposals(`${tokenId}`).call();\r\n      const proposalBalance = await propBalance.balance;\r\n      drizzle.store.dispatch({ type:'PROPOSAL_BALANCE', balance:`${proposalBalance}` });\r\n    }\r\n\r\n  }\r\n  if(propAddress !== undefined && propAddress !== null){\r\n    let proposalAddress = `${propAddress}`;\r\n    const contractConfig = {\r\n      contractName: \"ProposalStorage\",\r\n      web3Contract: new web3.eth.Contract(newAbi, proposalAddress)\r\n    };\r\n    if (!drizzle.contracts['ProposalStorage']) {\r\n      drizzle.addContract(contractConfig);\r\n    }\r\n    if(drizzle.contracts['ProposalStorage']){\r\n      const propBalance = await drizzle.contracts.ProposalStorage.methods.proposals(`${tokenId}`).call();\r\n      const proposalBalance = await propBalance.balance;\r\n      drizzle.store.dispatch({ type:'PROPOSAL_BALANCE', balance:`${proposalBalance}` });\r\n    }\r\n  }\r\n \r\n  else {\r\n    <div className=\"mx-auto\">   \r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n    }  \r\n  }\r\n  \r\n  if(tokenId !== null && newAbi !== null) {\r\n  useEffect(() => {\r\n    fetchProposalAddress();\r\n  }, [propAddress]);\r\n  }\r\n  else{\r\n    <div className=\"mx-auto\">   \r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\n  \r\n  return ( \r\n        <>\r\n          <ContributeForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} propAddress={propAddress} />\r\n        </>\r\n          );    \r\n    } \r\n\r\nexport default ContributeInnnerModal;"]},"metadata":{},"sourceType":"module"}