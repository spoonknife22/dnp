{"ast":null,"code":"import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\nconst GOT_TOKEN_ID = 'GOT_TOKEN_ID';\n\nfunction* txSuccessful() {\n  console.log('hi');\n  yield put({\n    type: TX_PROCESSING_DONE\n  });\n}\n\nfunction* fetchTokenId() {\n  //toast.info('hi', { position: toast.POSITION.TOP_RIGHT })\n  console.log('hello'); //yield put({ type: GOT_TOKEN_ID,tokenId:33 })\n} // function* appRootSaga() {\n//   //yield takeEvery('TX_SUCCESSFUL', txSuccessful);\n//   yield takeEvery(GOT_TOKEN_ID, fetchTokenId)\n// }\n\n\nexport default fetchTokenId;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/aapSagas.js"],"names":["all","fork","takeLatest","put","call","take","race","select","takeEvery","toast","TX_PROCESSING_DONE","GOT_TOKEN_ID","txSuccessful","console","log","type","fetchTokenId"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+DC,SAA/D,QAAgF,oBAAhF;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,YAAY,GAAG,cAArB;;AAGA,UAAUC,YAAV,GAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,QAAMX,GAAG,CAAC;AAAEY,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAT;AACD;;AAGD,UAAUM,YAAV,GAAyB;AACvB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAFuB,CAGvB;AACA,C,CAGF;AACA;AACA;AACA;;;AAEA,eAAeE,YAAf","sourcesContent":["import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\r\nconst GOT_TOKEN_ID = 'GOT_TOKEN_ID';\r\n \r\n\r\nfunction* txSuccessful() {\r\n  console.log('hi')\r\n  yield put({ type: TX_PROCESSING_DONE});\r\n}\r\n\r\n\r\nfunction* fetchTokenId() {\r\n  //toast.info('hi', { position: toast.POSITION.TOP_RIGHT })\r\n  console.log('hello')\r\n  //yield put({ type: GOT_TOKEN_ID,tokenId:33 })\r\n }\r\n\r\n\r\n// function* appRootSaga() {\r\n//   //yield takeEvery('TX_SUCCESSFUL', txSuccessful);\r\n//   yield takeEvery(GOT_TOKEN_ID, fetchTokenId)\r\n// }\r\n\r\nexport default fetchTokenId;\r\n\r\n"]},"metadata":{},"sourceType":"module"}