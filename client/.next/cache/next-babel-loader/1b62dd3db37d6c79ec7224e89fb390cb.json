{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport InterMediateForm from '../forms/InterMediateForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = ({\n  props,\n  gotContractBalance,\n  gotPropContract,\n  proposalStorageAbi\n}) => {\n  const drizzleState = props.drizzleState,\n        drizzle = props.drizzle,\n        propAddress = props.propAddress,\n        tokenId = props.tokenId,\n        assetPrice = props.assetPrice; //const [status, setProposalSatus] = useState(null);\n\n  let web3 = new Web3(Web3.givenProvider);\n\n  if (tokenId === null) {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, \"TokenId\", console.log(tokenId), __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  {\n    propAddress && proposalStorageAbi ? useEffect(() => {\n      fetchProposalAddress();\n    }, [propAddress]) : __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, propAddress, \" ContributeInnerModal 27\", __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var proposalAddress, contractConfig, events, proposalContract, contractData, listPrice, balance, depositAmount;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            proposalAddress = \"\".concat(propAddress);\n            contractConfig = {\n              contractName: \"\".concat(propAddress),\n              web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\n            };\n\n            if (!drizzle.contracts[\"\".concat(propAddress)]) {\n              events = ['ContributionSuccess', 'ProposalEvent', 'LogNewProvableQuery', 'RandomFailure'];\n              drizzle.addContract(contractConfig, events);\n            }\n\n            if (!drizzle.contracts[\"\".concat(propAddress)]) {\n              _context.next = 14;\n              break;\n            }\n\n            proposalContract = drizzle.contracts[\"\".concat(propAddress)];\n            _context.next = 7;\n            return proposalContract.methods.proposals(\"\".concat(tokenId)).call();\n\n          case 7:\n            contractData = _context.sent;\n            listPrice = contractData.listPrice, balance = contractData.balance; //const propBalance = await proposalContract.methods.getSummary(`${tokenId}`).call();\n\n            _context.next = 11;\n            return proposalContract.methods.depositedAmount(drizzleState.accounts[0]).call();\n\n          case 11:\n            depositAmount = _context.sent;\n            gotContractBalance(balance, depositAmount, listPrice);\n            gotPropContract(proposalContract);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // if(propAddress === null || propAddress === 'undefined') {\n  //   return (\n  //     <div className=\"mx-auto\">   \n  //       {propAddress} ContributeInnerModal 52\n  //       <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n  //     </div>\n  //   )\n  // }  \n\n\n  if (drizzle.contracts[\"\".concat(propAddress)]) {\n    return __jsx(React.Fragment, null, __jsx(InterMediateForm, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      assetPrice: assetPrice,\n      propAddress: propAddress,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, propAddress, \" ContributeInnerModal 52\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => ({\n  proposalStorageAbi: state.appReducers.proposalStorageAbi\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gotContractBalance: (balance, depositAmount, listPrice) => dispatch({\n    type: 'PROPOSAL_BALANCE',\n    balance: \"\".concat(balance),\n    depositAmount: depositAmount,\n    listPrice: listPrice\n  }),\n  gotPropContract: proposalContract => dispatch({\n    type: 'PROPOSAL_STORAGE_CONTRACT',\n    proposalStorage: proposalContract\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","connect","Web3","ContributeForm","InterMediateForm","Loader","ContributeInnnerModal","props","gotContractBalance","gotPropContract","proposalStorageAbi","drizzleState","drizzle","propAddress","tokenId","assetPrice","web3","givenProvider","console","log","fetchProposalAddress","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","contracts","events","addContract","proposalContract","methods","proposals","call","contractData","listPrice","balance","depositedAmount","accounts","depositAmount","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","type","proposalStorage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport InterMediateForm from '../forms/InterMediateForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal = ({ props, gotContractBalance, gotPropContract, proposalStorageAbi }) => {\r\n  const { drizzleState, drizzle, propAddress, tokenId, assetPrice } = props;\r\n  //const [status, setProposalSatus] = useState(null);\r\n\r\n  let web3 = new Web3(Web3.givenProvider);\r\n\r\n  if(tokenId === null){\r\n    return(\r\n      <div className=\"mx-auto\">   \r\n        TokenId{console.log(tokenId)}\r\n        <Loader color=\"#007bff\" size=\"40px\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  {propAddress && proposalStorageAbi ? \r\n    useEffect(() => {\r\n      fetchProposalAddress();\r\n    }, [propAddress])\r\n\r\n  :\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 27\r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\nconst fetchProposalAddress = async () => {\r\n      let proposalAddress = `${propAddress}`;\r\n\r\n      const contractConfig = {\r\n        contractName: `${propAddress}`,\r\n        web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\r\n      };\r\n\r\n      if (!drizzle.contracts[`${propAddress}`]) {\r\n      let events = ['ContributionSuccess','ProposalEvent','LogNewProvableQuery','RandomFailure'] ;  \r\n      drizzle.addContract(contractConfig, events);\r\n      }\r\n\r\n      if(drizzle.contracts[`${propAddress}`]){\r\n        const proposalContract = drizzle.contracts[`${propAddress}`];\r\n\r\n        const contractData = await proposalContract.methods.proposals(`${tokenId}`).call();\r\n        const { listPrice, balance } = contractData;\r\n        //const propBalance = await proposalContract.methods.getSummary(`${tokenId}`).call();\r\n        const depositAmount = await proposalContract.methods.depositedAmount(drizzleState.accounts[0]).call();\r\n        gotContractBalance(balance, depositAmount, listPrice); \r\n        gotPropContract(proposalContract);\r\n    }\r\n\r\n}\r\n\r\n// if(propAddress === null || propAddress === 'undefined') {\r\n//   return (\r\n//     <div className=\"mx-auto\">   \r\n//       {propAddress} ContributeInnerModal 52\r\n//       <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n//     </div>\r\n//   )\r\n// }  \r\nif (drizzle.contracts[`${propAddress}`]) {\r\n  return ( \r\n        <>\r\n          <InterMediateForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} propAddress={propAddress} tokenId={tokenId} />\r\n        </>\r\n      );    \r\n  } \r\n\r\n  else {\r\n    return (\r\n      <div className=\"mx-auto\">   \r\n        {propAddress} ContributeInnerModal 52\r\n        <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n}\r\n\r\n  const mapStateToProps = (state) => ({\r\n    proposalStorageAbi: state.appReducers.proposalStorageAbi\r\n  })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  gotContractBalance: (balance, depositAmount, listPrice) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${balance}`, depositAmount: depositAmount, listPrice:listPrice}),\r\n  gotPropContract: (proposalContract) => dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:proposalContract})\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);"]},"metadata":{},"sourceType":"module"}