{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AddressBar.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { EthAddress, Loader } from 'rimble-ui';\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport { BaseStyles, theme } from \"rimble-ui\";\nimport { ThemeProvider } from \"styled-components\";\nconst customTheme = {\n  backgroundColor: {\n    blue: '#007bff'\n  }\n};\n\nconst AddressBar = ({\n  drizzle,\n  drizzleState\n}) => {\n  var state = drizzle.store.getState();\n\n  if (state.drizzleStatus.initialized) {\n    const accounts = state.accounts;\n    const account = accounts[0];\n    return __jsx(EthAddress, {\n      theme: customTheme,\n      backgroundColor: \"blue\",\n      address: account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return __jsx(Loader, {\n    size: \"30px\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  });\n}; // If Drizzle isn't initialized, display some loading indication.\n\n\nexport default AddressBar;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AddressBar.js"],"names":["React","EthAddress","Loader","newContextComponents","BaseStyles","theme","ThemeProvider","customTheme","backgroundColor","blue","AddressBar","drizzle","drizzleState","state","store","getState","drizzleStatus","initialized","accounts","account"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,WAAnC;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,WAAlC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAGA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,IAAI,EAAE;AADS;AADC,CAApB;;AAMA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA+B;AAClD,MAAIC,KAAK,GAAGF,OAAO,CAACG,KAAR,CAAcC,QAAd,EAAZ;;AAEA,MAAIF,KAAK,CAACG,aAAN,CAAoBC,WAAxB,EAAqC;AAErC,UAAMC,QAAQ,GAAGL,KAAK,CAACK,QAAvB;AACA,UAAMC,OAAO,GAAGD,QAAQ,CAAC,CAAD,CAAxB;AAEI,WAAQ,MAAC,UAAD;AAAY,MAAA,KAAK,EAAEX,WAAnB;AAAgC,MAAA,eAAe,EAAC,MAAhD;AAAuD,MAAA,OAAO,EAAEY,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD;;AACC,SAAO,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAXD,C,CAaA;;;AAGA,eAAeT,UAAf","sourcesContent":["import React from \"react\";\r\nimport { EthAddress, Loader } from 'rimble-ui';\r\nimport { newContextComponents } from \"@drizzle/react-components\";\r\nimport { BaseStyles, theme } from \"rimble-ui\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\n\r\nconst customTheme = {\r\n  backgroundColor: {\r\n    blue: '#007bff'\r\n  }\r\n};\r\n\r\nconst AddressBar = ({ drizzle, drizzleState }) => {\r\nvar state = drizzle.store.getState();\r\n\r\nif (state.drizzleStatus.initialized) {\r\n\r\nconst accounts = state.accounts;\r\nconst account = accounts[0];\r\n\r\n    return  <EthAddress theme={customTheme} backgroundColor='blue' address={account}  />\r\n  }\r\n    return <Loader size=\"30px\" color=\"white\" />\r\n}\r\n\r\n// If Drizzle isn't initialized, display some loading indication.\r\n\r\n\r\nexport default AddressBar;"]},"metadata":{},"sourceType":"module"}