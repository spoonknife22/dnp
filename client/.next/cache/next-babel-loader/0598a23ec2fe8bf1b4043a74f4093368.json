{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AccountsContainer.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport MyAddBar from \"./AddressBar.js\";\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { Drizzle } from \"@drizzle/store\";\nimport options from \"./drizzleOptions\";\nimport { Loader } from 'rimble-ui';\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\nconst drizzle = new Drizzle(options);\n\nconst AccountsContainer = () => {\n  return __jsx(DrizzleContext.Provider, {\n    drizzle: drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(DrizzleContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, drizzleContext => {\n    const {\n      drizzle,\n      drizzleState,\n      initialized\n    } = drizzleContext;\n\n    if (!initialized) {\n      return __jsx(Loader, {\n        size: \"30px\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const account = drizzleState.accounts[0];\n    let member;\n\n    member = async account => {\n      const isMembe = await drizzle.contracts.UserStorage.methods.addresses(account).call();\n      let button;\n\n      if (isMember) {\n        button = __jsx(MyAddBar, {\n          drizzleState: drizzleState,\n          drizzle: drizzle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }\n        });\n      } else {\n        button = __jsx(JoinButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }\n        });\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, button);\n    }; //const run = member(account);\n    //return (member(account))\n    // const run = member(account);\n    //  console.log(run)\n\n  }));\n};\n\nexport default AccountsContainer;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AccountsContainer.js"],"names":["React","UserInfo","MyAddBar","DrizzleContext","Drizzle","options","Loader","JoinButton","drizzle","AccountsContainer","drizzleContext","drizzleState","initialized","account","accounts","member","isMembe","contracts","UserStorage","methods","addresses","call","button","isMember"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAUC,MAAV,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,CAAYC,OAAZ,CAAhB;;AAEA,MAAMI,iBAAiB,GAAG,MAAM;AAE9B,SACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,OAAO,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,IAAI;AACjB,UAAM;AAACF,MAAAA,OAAD;AAAUG,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,QAAwCF,cAA9C;;AAEA,QAAG,CAACE,WAAJ,EAAiB;AACf,aAAO,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,UAAMC,OAAO,GAAGF,YAAY,CAACG,QAAb,CAAsB,CAAtB,CAAhB;AACA,QAAIC,MAAJ;;AACAA,IAAAA,MAAM,GAAG,MAAOF,OAAP,IAAmB;AAC5B,YAAMG,OAAO,GAAG,MAAMR,OAAO,CAACS,SAAR,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCC,SAAtC,CAAgDP,OAAhD,EAAyDQ,IAAzD,EAAtB;AACA,UAAIC,MAAJ;;AACA,UAAIC,QAAJ,EAAc;AACVD,QAAAA,MAAM,GAAG,MAAC,QAAD;AAAU,UAAA,YAAY,EAAEX,YAAxB;AAAsC,UAAA,OAAO,EAAEH,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD,OAFH,MAES;AACLc,QAAAA,MAAM,GAAG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MADH,CADF;AAKD,KAdD,CATiB,CAwBjB;AACL;AACD;AACA;;AAEK,GA9BH,CADF,CADF;AAqCD,CAvCD;;AAwCA,eAAeb,iBAAf","sourcesContent":["import React from \"react\";\r\nimport UserInfo from \"./UserInfo\"; \r\nimport MyAddBar from \"./AddressBar.js\"; \r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport options from \"./drizzleOptions\";\r\nimport {  Loader } from 'rimble-ui';\r\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\r\n\r\nconst drizzle = new Drizzle(options);\r\n\r\nconst AccountsContainer = () => {\r\n \r\n  return  (\r\n    <DrizzleContext.Provider drizzle={drizzle}>\r\n      <DrizzleContext.Consumer>\r\n        {drizzleContext => {\r\n          const {drizzle, drizzleState, initialized } = drizzleContext;\r\n          \r\n          if(!initialized) {\r\n            return <Loader size=\"30px\" color=\"white\" />\r\n          }\r\n        \r\n          const account = drizzleState.accounts[0];\r\n          let member;\r\n          member = async (account) => {\r\n          const isMembe = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n          let button;\r\n          if (isMember) {\r\n              button = <MyAddBar drizzleState={drizzleState} drizzle={drizzle} /> \r\n            } else {\r\n              button = <JoinButton />\r\n            }\r\n        \r\n            return (\r\n              <div>\r\n                {button}\r\n              </div>\r\n            );\r\n          } \r\n          //const run = member(account);\r\n     //return (member(account))\r\n    // const run = member(account);\r\n    //  console.log(run)\r\n            \r\n        }}\r\n      </DrizzleContext.Consumer>\r\n    </DrizzleContext.Provider>\r\n);\r\n  \r\n}\r\nexport default AccountsContainer;"]},"metadata":{},"sourceType":"module"}