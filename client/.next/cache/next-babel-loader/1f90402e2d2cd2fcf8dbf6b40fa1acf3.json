{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\ProposalAddress.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import { ContractForm, AccountData, ContractData } from \"@drizzle/react-components\";\n// import Web3 from \"web3\";\n\nclass ProposalAddress extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null,\n      drizzleState: null,\n      tokenId: null,\n      drizzle: null\n    });\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          drizzle = _this$props.drizzle,\n          tokenId = _this$props.tokenId; //var state = drizzle.store.getState()\n\n    const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(\"\".concat(tokenId)); //const dataKey = contract.methods['profiles'].cacheCall(account);\n\n    this.setState({\n      dataKey,\n      tokenId\n    });\n  }\n\n  render() {\n    const ProposalController = this.props.drizzleState.contracts.ProposalController;\n    const dataKey = this.state.dataKey;\n    const displayData = ProposalController.getPropTokenIdMap[\"\".concat(dataKey)];\n    const proposalAddress = displayData && displayData.value;\n    const id = {\n      tokenId\n    };\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }\n    }, \"Hello: \", proposalAddress, console.log({\n      proposalAddress,\n      dataKey,\n      displayData,\n      id\n    }));\n  }\n\n}\n\nexport default ProposalAddress;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/ProposalAddress.js"],"names":["React","ProposalAddress","Component","dataKey","drizzleState","tokenId","drizzle","componentDidMount","props","contracts","ProposalController","methods","cacheCall","setState","render","state","displayData","getPropTokenIdMap","proposalAddress","value","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AAEA,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAAA;AAAA;;AAAA,mCACrC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAC,IAA9B;AAAoCC,MAAAA,OAAO,EAAC,IAA5C;AAAkDC,MAAAA,OAAO,EAAC;AAA1D,KADqC;AAAA;;AAG9CC,EAAAA,iBAAiB,GAAG;AAAA,wBACY,KAAKC,KADjB;AAAA,UACTF,OADS,eACTA,OADS;AAAA,UACAD,OADA,eACAA,OADA,EAEjB;;AAED,UAAMF,OAAO,GAAGG,OAAO,CAACG,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6C,mBAA7C,EAAkEC,SAAlE,WAA+EP,OAA/E,EAAhB,CAJkB,CAKlB;;AACA,SAAKQ,QAAL,CAAc;AAAEV,MAAAA,OAAF;AAAWE,MAAAA;AAAX,KAAd;AAEA;;AAGDS,EAAAA,MAAM,GAAG;AAAA,UAEAJ,kBAFA,GAEuB,KAAKF,KAAL,CAAWJ,YAAX,CAAwBK,SAF/C,CAEAC,kBAFA;AAGR,UAAMP,OAAO,GAAG,KAAKY,KAAL,CAAWZ,OAA3B;AACA,UAAMa,WAAW,GAAGN,kBAAkB,CAACO,iBAAnB,WAAwCd,OAAxC,EAApB;AACA,UAAMe,eAAe,GAAIF,WAAW,IAAIA,WAAW,CAACG,KAApD;AACC,UAAMC,EAAE,GAAG;AAACf,MAAAA;AAAD,KAAX;AACA,WAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaa,eAAb,EACEG,OAAO,CAACC,GAAR,CAAY;AAACJ,MAAAA,eAAD;AAAkBf,MAAAA,OAAlB;AAA2Ba,MAAAA,WAA3B;AAAwCI,MAAAA;AAAxC,KAAZ,CADF,CAFA;AAOD;;AA5B4C;;AA+B9C,eAAenB,eAAf","sourcesContent":["import React from 'react';\r\n// import { ContractForm, AccountData, ContractData } from \"@drizzle/react-components\";\r\n// import Web3 from \"web3\";\r\n\r\nclass ProposalAddress extends React.Component {\r\n state = { dataKey: null, drizzleState:null, tokenId:null, drizzle:null };\r\n\r\ncomponentDidMount() {\r\n   const { drizzle, tokenId } = this.props;\r\n   //var state = drizzle.store.getState()\r\n \r\n  const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(`${tokenId}`);                                            \r\n  //const dataKey = contract.methods['profiles'].cacheCall(account);\r\n  this.setState({ dataKey, tokenId });\r\n\r\n }\r\n  \r\n\r\n render() {\r\n\r\n  const { ProposalController } = this.props.drizzleState.contracts;\r\n  const dataKey = this.state.dataKey;\r\n  const displayData = ProposalController.getPropTokenIdMap[`${dataKey}`];\r\n  const proposalAddress =  displayData && displayData.value;\r\n   const id = {tokenId};\r\n   return (\r\n    \r\n   <div>Hello: {proposalAddress}\r\n    {console.log({proposalAddress, dataKey, displayData, id})}\r\n   </div>\r\n\r\n   )\r\n }\r\n}\r\n\r\nexport default ProposalAddress;\r\n\r\n"]},"metadata":{},"sourceType":"module"}