{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\cards\\\\NewTest.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '../Pagination';\nimport Nominations from '../Nominations';\nimport moment from \"moment\";\nimport Web3 from \"web3\";\nimport InnerAbCard from './InnerAbCard'; //import { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js'\n\nconst NewTest = ({\n  props,\n  userManaBalance\n}) => {\n  const _useState = useState([]),\n        orders = _useState[0],\n        setOrders = _useState[1];\n\n  const _useState2 = useState([]),\n        projectTokenIds = _useState2[0],\n        setprojectTokenIds = _useState2[1];\n\n  const _useState3 = useState(false),\n        loading = _useState3[0],\n        setLoading = _useState3[1];\n\n  const _useState4 = useState(1),\n        currentPage = _useState4[0],\n        setCurrentPage = _useState4[1];\n\n  const _useState5 = useState(6),\n        parcelsPerPage = _useState5[0];\n\n  const _useState6 = useState(),\n        totalTokens = _useState6[0],\n        setTotalTokens = _useState6[1]; //const [offset, setOffset] = useState(0);\n\n\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\"); //console.log(orders)\n\n  useEffect(() => {\n    let orderArray = [];\n    let offset = 0;\n\n    const fetchPosts = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var proxyUrl, targetUrl, contractAddress, i, callsPerProject;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.opensea.io/api/v1/assets?';\n              contractAddress = 'order_direction=desc&asset_contract_addresses=0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e&limit=20&include_orders=true';\n              callsPerProject = 5; //let offset = 0;\n\n              for (i = 0; i < callsPerProject; i++, offset += 50) {\n                console.log(offset);\n                fetch(targetUrl + contractAddress, {\n                  Accept: 'application/json',\n                  'X-API-KEY': '2f2a0900458f4bdfbb489680a58e7526'\n                }) //fetch(targetUrl + contractAddress,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\n                .then(res => res.json()).then(result => {\n                  orderArray.push(result.assets);\n                  setOrders(...orderArray);\n                  setOffset(+50);\n                }, error => {\n                  setLoading(true), error;\n                }).then(() => {\n                  setOrders(orderArray);\n                  console.log(orderArray);\n                  setLoading(false);\n                }, error => {\n                  return error;\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Hello\"));\n};\n\nexport default NewTest;","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/cards/NewTest.js"],"names":["React","useState","useEffect","Pagination","Nominations","moment","Web3","InnerAbCard","NewTest","props","userManaBalance","orders","setOrders","projectTokenIds","setprojectTokenIds","loading","setLoading","currentPage","setCurrentPage","parcelsPerPage","totalTokens","setTotalTokens","myHeaders","Headers","append","orderArray","offset","fetchPosts","proxyUrl","targetUrl","contractAddress","callsPerProject","i","console","log","fetch","Accept","then","res","json","result","push","assets","setOffset","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAgC;AAAA,oBAClBT,QAAQ,CAAC,EAAD,CADU;AAAA,QACvCU,MADuC;AAAA,QAC/BC,SAD+B;;AAAA,qBAEAX,QAAQ,CAAC,EAAD,CAFR;AAAA,QAEvCY,eAFuC;AAAA,QAEtBC,kBAFsB;;AAAA,qBAGhBb,QAAQ,CAAC,KAAD,CAHQ;AAAA,QAGvCc,OAHuC;AAAA,QAG9BC,UAH8B;;AAAA,qBAIRf,QAAQ,CAAC,CAAD,CAJA;AAAA,QAIvCgB,WAJuC;AAAA,QAI1BC,cAJ0B;;AAAA,qBAKrBjB,QAAQ,CAAC,CAAD,CALa;AAAA,QAKvCkB,cALuC;;AAAA,qBAMRlB,QAAQ,EANA;AAAA,QAMvCmB,WANuC;AAAA,QAM1BC,cAN0B,kBAO9C;;;AAEA,QAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC,EAV8C,CAY9C;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,UAAU,GAAG,EAAjB;AACA,QAAIC,MAAM,GAAC,CAAX;;AACA,UAAMC,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAEfC,cAAAA,QAFe,GAEJ,sCAFI,EAGnBC,SAHmB,GAGP,uCAHO;AAIfC,cAAAA,eAJe,GAIG,uHAJH;AAMbC,cAAAA,eANa,GAMK,CANL,EAOnB;;AACA,mBAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,eAAhB,EAAiCC,CAAC,IAAIN,MAAM,IAAE,EAA9C,EAAkD;AAEhDO,gBAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACAS,gBAAAA,KAAK,CAACN,SAAS,GAAGC,eAAb,EAA6B;AAACM,kBAAAA,MAAM,EAAE,kBAAT;AAA6B,+BAAa;AAA1C,iBAA7B,CAAL,CACA;AADA,iBAEGC,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFf,EAGGF,IAHH,CAGSG,MAAD,IAAY;AACdf,kBAAAA,UAAU,CAACgB,IAAX,CAAgBD,MAAM,CAACE,MAAvB;AACA9B,kBAAAA,SAAS,CAAC,GAAGa,UAAJ,CAAT;AACAkB,kBAAAA,SAAS,CAAC,CAAE,EAAH,CAAT;AACD,iBAPL,EAQKC,KAAD,IAAW;AACT5B,kBAAAA,UAAU,CAAC,IAAD,CAAV,EACA4B,KADA;AAED,iBAXL,EAaGP,IAbH,CAaQ,MAAM;AACVzB,kBAAAA,SAAS,CAACa,UAAD,CAAT;AACAQ,kBAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAT,kBAAAA,UAAU,CAAC,KAAD,CAAV;AACD,iBAjBH,EAkBG4B,KAAD,IAAW;AACT,yBAAOA,KAAP;AACC,iBApBL;AAsBH;;AAjCoB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVjB,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAmCDA,IAAAA,UAAU;AACX,GAvCS,EAuCP,EAvCO,CAAT;AA2CA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AASD,CAjED;;AAmEA,eAAenB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../Pagination';\r\nimport Nominations from '../Nominations'\r\nimport moment from \"moment\";\r\nimport Web3 from \"web3\";\r\nimport InnerAbCard from './InnerAbCard';\r\n//import { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js'\r\n\r\nconst NewTest = ({ props, userManaBalance }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [projectTokenIds, setprojectTokenIds] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [parcelsPerPage] = useState(6);\r\n  const [totalTokens, setTotalTokens] = useState();\r\n  //const [offset, setOffset] = useState(0);\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  //console.log(orders)\r\n  useEffect(() => {\r\n    let orderArray = [];\r\n    let offset=0;\r\n    const fetchPosts = async () => { \r\n    \r\n    var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n    targetUrl = 'https://api.opensea.io/api/v1/assets?';\r\n    let contractAddress = 'order_direction=desc&asset_contract_addresses=0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e&limit=20&include_orders=true'\r\n    let i;\r\n    const callsPerProject = 5;\r\n    //let offset = 0;\r\n    for (i = 0; i < callsPerProject; i++, offset+=50) {\r\n      \r\n      console.log(offset)\r\n      fetch(targetUrl + contractAddress,{Accept: 'application/json', 'X-API-KEY': '2f2a0900458f4bdfbb489680a58e7526'})\r\n      //fetch(targetUrl + contractAddress,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            orderArray.push(result.assets);\r\n            setOrders(...orderArray);\r\n            setOffset(+ 50);\r\n          },\r\n          (error) => {\r\n            setLoading(true),\r\n            error;\r\n          }\r\n        )   \r\n        .then(() => {\r\n          setOrders(orderArray);\r\n          console.log(orderArray)\r\n          setLoading(false);\r\n        },\r\n        (error) => {\r\n          return error;\r\n          }\r\n        )          \r\n  } \r\n}\r\n   fetchPosts();\r\n }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div>Hello</div>\r\n      {/* <InnerAbCard props={props}   /> */}\r\n    </>\r\n\r\n\r\n  \r\n  );\r\n};\r\n\r\nexport default NewTest;\r\n"]},"metadata":{},"sourceType":"module"}