{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = ({\n  drizzleState,\n  drizzle,\n  propAddress,\n  tokenId,\n  assetPrice,\n  newAbi\n}) => {\n  _s();\n\n  let web3 = new Web3(\"HTTP://127.0.0.1:7545\");\n\n  if (tokenId == null) {\n    __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }\n    }, __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  const tokenNumber = Number(tokenId);\n\n  if (isNaN(tokenNumber)) {\n    useEffect(() => {\n      fetchProposalAddress();\n    }, [tokenId]);\n  }\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var proposalAddress, contractConfig, propBalance, proposalBalance, address;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (propAddress === undefined) {\n              __jsx(\"div\", {\n                className: \"mx-auto\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 9\n                }\n              }, __jsx(Loader, {\n                color: \"#007bff\",\n                size: \"40px\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 11\n                }\n              }));\n            }\n\n            if (!(propAddress == null && newAbi !== null)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 4;\n            return drizzle.contracts.ProposalController.methods.getPropTokenIdMap(\"\".concat(tokenId)).call();\n\n          case 4:\n            proposalAddress = _context.sent;\n            contractConfig = {\n              contractName: \"ProposalStorage\",\n              web3Contract: new web3.eth.Contract(newAbi, \"\".concat(proposalAddress))\n            };\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              drizzle.addContract(contractConfig);\n            }\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 10;\n            return drizzle.contracts.ProposalStorage.methods.getSummary[\"\".concat(tokenId)].call();\n\n          case 10:\n            propBalance = _context.sent;\n            console.log(propBalance);\n            _context.next = 14;\n            return propBalance.balance;\n\n          case 14:\n            proposalBalance = _context.sent;\n            drizzle.store.dispatch({\n              type: 'PROPOSAL_BALANCE',\n              balance: \"\".concat(proposalBalance)\n            });\n\n          case 16:\n            address = Number(propAddress);\n\n            if (!(isNaN(address) && newAbi !== null)) {\n              _context.next = 31;\n              break;\n            }\n\n            console.log(propAddress);\n            proposalAddress = \"\".concat(propAddress);\n            contractConfig = {\n              contractName: \"ProposalStorage\",\n              web3Contract: new web3.eth.Contract(newAbi, proposalAddress)\n            };\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              drizzle.addContract(contractConfig);\n            }\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              _context.next = 31;\n              break;\n            }\n\n            _context.next = 25;\n            return drizzle.contracts.ProposalStorage.methods.getSummary[\"\".concat(tokenId)].call();\n\n          case 25:\n            propBalance = _context.sent;\n            console.log(propBalance);\n            _context.next = 29;\n            return propBalance.balance;\n\n          case 29:\n            proposalBalance = _context.sent;\n            drizzle.store.dispatch({\n              type: 'PROPOSAL_BALANCE',\n              balance: \"\".concat(proposalBalance)\n            });\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, console.log(drizzle), __jsx(ContributeForm, {\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    assetPrice: assetPrice,\n    propAddress: propAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }));\n};\n\n_s(ContributeInnnerModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ContributeInnnerModal;\nexport default ContributeInnnerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeInnnerModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","Web3","ContributeForm","Loader","ContributeInnnerModal","drizzleState","drizzle","propAddress","tokenId","assetPrice","newAbi","web3","tokenNumber","Number","isNaN","fetchProposalAddress","undefined","contracts","ProposalController","methods","getPropTokenIdMap","call","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","addContract","ProposalStorage","getSummary","propBalance","console","log","balance","proposalBalance","store","dispatch","type","address"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal =  ({ drizzleState, drizzle, propAddress, tokenId, assetPrice, newAbi }) => {\r\n  let web3 = new Web3(\"HTTP://127.0.0.1:7545\");\r\n\r\n  if(tokenId == null){\r\n    <div className=\"mx-auto\">   \r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\n  const tokenNumber = Number(tokenId)\r\n  if(isNaN(tokenNumber)) {\r\n    useEffect(() => {\r\n      fetchProposalAddress();\r\n    }, [tokenId]);\r\n  }\r\n\r\n  const fetchProposalAddress = async () => {\r\n    if(propAddress === undefined) {\r\n        <div className=\"mx-auto\">   \r\n          <Loader color=\"#007bff\" size=\"40px\" />\r\n        </div>\r\n    }  \r\n    if(propAddress == null && newAbi !== null) {\r\n    const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenId}`).call(); \r\n    const contractConfig = {\r\n      contractName: \"ProposalStorage\",\r\n      web3Contract: new web3.eth.Contract(newAbi, `${proposalAddress}`)\r\n    }\r\n    if (!drizzle.contracts['ProposalStorage']) {\r\n      drizzle.addContract(contractConfig);\r\n      } \r\n    if(drizzle.contracts['ProposalStorage']){\r\n      const propBalance = await drizzle.contracts.ProposalStorage.methods.getSummary[`${tokenId}`].call();\r\n      console.log(propBalance)\r\n      const proposalBalance = await propBalance.balance;\r\n      drizzle.store.dispatch({ type:'PROPOSAL_BALANCE', balance:`${proposalBalance}` });\r\n      }\r\n    }\r\n   \r\n    const address = Number(propAddress)\r\n    if(isNaN(address) && newAbi !== null){\r\n      console.log(propAddress)\r\n      let proposalAddress = `${propAddress}`;\r\n      const contractConfig = {\r\n        contractName: \"ProposalStorage\",\r\n        web3Contract: new web3.eth.Contract(newAbi, proposalAddress)\r\n      };\r\n      if (!drizzle.contracts['ProposalStorage']) {\r\n        drizzle.addContract(contractConfig);\r\n      }\r\n      if(drizzle.contracts['ProposalStorage']){\r\n        const propBalance = await drizzle.contracts.ProposalStorage.methods.getSummary[`${tokenId}`].call();\r\n        console.log(propBalance)\r\n        const proposalBalance = await propBalance.balance;\r\n        drizzle.store.dispatch({ type:'PROPOSAL_BALANCE', balance:`${proposalBalance}` });\r\n      }\r\n    }\r\n}\r\n  return ( \r\n        <>{console.log(drizzle)}\r\n          <ContributeForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} propAddress={propAddress} />\r\n        </>\r\n      );    \r\n    } \r\n\r\nexport default ContributeInnnerModal;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}