{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\pages\\\\testpage.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport App from './innerTestPage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";\nimport { generateStore, generateContractsInitialState } from \"@drizzle/store\";\nimport drizzleOptions from \"../EthComponents/drizzleOptions\"; //CREATE STORE\n\nimport root from '../middleware/sagas/root';\nimport reducer from '../middleware/reducers/reducer.js'; //GENERATE STORE\n\nimport rootSaga from '../middleware/sagas/appSagas';\nimport appReducer from '../middleware/reducers/appReducers.js'; //APPMIDDLEWARES\n\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\nconst contractEventNotifier = contractEventSaga;\nconst joinTransactionComplete = joinTransactionSaga;\nconst appMiddlewares = [contractEventNotifier(), joinTransactionComplete]; //GENERATE STORE\n\nconst appReducers = {\n  appReducers: appReducer\n};\nconst appSagas = [root]; //CREATE STORE\n\nconst initialState = {\n  contracts: generateContractsInitialState(drizzleOptions)\n};\nconst sagaMiddleware = createSagaMiddleware(); // const allMiddlewares = [...appMiddlewares, sagaMiddleware];\n// const store = createStore(\n//       reducer,\n//       initialState,\n//     composeWithDevTools(\n//       applyMiddleware(\n//         ...allMiddlewares\n//       )\n//     )\n// );\n\nconst store = generateStore(_objectSpread(_objectSpread({\n  drizzleOptions,\n  appReducers\n}, root), {}, {\n  //appMiddlewares,\n  disableReduxDevTools: false\n})); //sagaMiddleware.run(root);\n\nclass TestPage extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, __jsx(DrizzleProvider, {\n      store: store,\n      options: drizzleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, __jsx(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default TestPage;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/pages/testpage.js"],"names":["React","App","composeWithDevTools","createSagaMiddleware","createStore","applyMiddleware","compose","DrizzleContext","DrizzleProvider","generateStore","generateContractsInitialState","drizzleOptions","root","reducer","rootSaga","appReducer","contractEventSaga","joinTransactionSaga","contractEventNotifier","joinTransactionComplete","appMiddlewares","appReducers","appSagas","initialState","contracts","sagaMiddleware","store","disableReduxDevTools","TestPage","Component","render"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,uBAAhD;AACA,SAASC,aAAT,EAAwBC,6BAAxB,QAA6D,gBAA7D;AACA,OAAOC,cAAP,MAA4B,iCAA5B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,OAAP,MAAoB,mCAApB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,uCAAvB,C,CAIA;;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,6BAAvD;AACA,MAAMC,qBAAqB,GAAGF,iBAA9B;AACA,MAAMG,uBAAuB,GAAGF,mBAAhC;AACA,MAAMG,cAAc,GAAG,CAAEF,qBAAqB,EAAvB,EAA2BC,uBAA3B,CAAvB,C,CAEA;;AACA,MAAME,WAAW,GAAG;AAACA,EAAAA,WAAW,EAAEN;AAAd,CAApB;AACA,MAAMO,QAAQ,GAAG,CAACV,IAAD,CAAjB,C,CAGA;;AACA,MAAMW,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAEd,6BAA6B,CAACC,cAAD;AADrB,CAArB;AAIA,MAAMc,cAAc,GAAGtB,oBAAoB,EAA3C,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMuB,KAAK,GAAGjB,aAAa;AACzBE,EAAAA,cADyB;AAEzBU,EAAAA;AAFyB,GAGtBT,IAHsB;AAIzB;AACAe,EAAAA,oBAAoB,EAAE;AALG,GAA3B,C,CAUA;;AAEA,MAAMC,QAAN,SAAuB5B,KAAK,CAAC6B,SAA7B,CAAuC;AAGrCC,EAAAA,MAAM,GAAG;AACP,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,eAAD;AAAiB,MAAA,KAAK,EAAEJ,KAAxB;AAA+B,MAAA,OAAO,EAAEf,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CAFF;AAYD;;AAhBoC;;AAqBvC,eAAeiB,QAAf","sourcesContent":["import React from 'react';\r\nimport App from './innerTestPage';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";  \r\nimport { generateStore, generateContractsInitialState } from \"@drizzle/store\";\r\nimport drizzleOptions  from \"../EthComponents/drizzleOptions\";\r\n\r\n//CREATE STORE\r\nimport root from '../middleware/sagas/root';\r\nimport reducer from '../middleware/reducers/reducer.js'\r\n\r\n//GENERATE STORE\r\nimport rootSaga from '../middleware/sagas/appSagas';\r\nimport appReducer from '../middleware/reducers/appReducers.js'\r\n\r\n\r\n\r\n//APPMIDDLEWARES\r\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\r\nconst contractEventNotifier = contractEventSaga;\r\nconst joinTransactionComplete = joinTransactionSaga;\r\nconst appMiddlewares = [ contractEventNotifier(), joinTransactionComplete ];\r\n\r\n//GENERATE STORE\r\nconst appReducers = {appReducers: appReducer};\r\nconst appSagas = [root];\r\n\r\n\r\n//CREATE STORE\r\nconst initialState = {\r\n  contracts: generateContractsInitialState(drizzleOptions)\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// const allMiddlewares = [...appMiddlewares, sagaMiddleware];\r\n\r\n// const store = createStore(\r\n//       reducer,\r\n//       initialState,\r\n//     composeWithDevTools(\r\n//       applyMiddleware(\r\n//         ...allMiddlewares\r\n//       )\r\n//     )\r\n// );\r\n\r\nconst store = generateStore({\r\n  drizzleOptions,\r\n  appReducers,\r\n  ...root,\r\n  //appMiddlewares,\r\n  disableReduxDevTools: false  \r\n})\r\n\r\n\r\n\r\n//sagaMiddleware.run(root);\r\n\r\nclass TestPage extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n     \r\n      <div>\r\n           {/* <DrizzleContext.Provider> */}\r\n        <DrizzleProvider store={store} options={drizzleOptions} >\r\n \r\n          <App />\r\n       \r\n        </DrizzleProvider>\r\n        {/* </DrizzleContext.Provider> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}