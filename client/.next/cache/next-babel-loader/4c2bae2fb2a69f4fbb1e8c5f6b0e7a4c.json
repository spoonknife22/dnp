{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = ({\n  props,\n  gotContractBalance,\n  gotPropContract,\n  proposalStorageAbi\n}) => {\n  const drizzleState = props.drizzleState,\n        drizzle = props.drizzle,\n        propAddress = props.propAddress,\n        tokenId = props.tokenId,\n        assetPrice = props.assetPrice;\n  let web3 = new Web3(Web3.givenProvider);\n\n  const _useState = useState(null),\n        approvedTokens = _useState[0],\n        setApprovedTokens = _useState[1];\n\n  const manaContract = drizzle.contracts.MANAToken;\n  const account = drizzleState.accounts[0];\n  let state = drizzle.store.getState();\n  const dataKey = manaContract.methods.allowance.cacheCall(account, propAddress);\n  const approveMana = state.contracts.MANAToken.allowance[dataKey]; //setApprovedTokens(approveMana);\n  //console.log(approveMana)\n  // const manaContract = drizzle.contracts.MANAToken; \n  // const approvedMana = manaContract.methods.allowance(account,propAddress).call();\n  // console.log(approvedMana)\n\n  if (tokenId === null) {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, \"TokenId\", console.log(tokenId), __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  {\n    propAddress && proposalStorageAbi ? useEffect(() => {\n      const dataKey = manaContract.methods.allowance.cacheCall(account, propAddress);\n      const approveMana = state.contracts.MANAToken.allowance[dataKey];\n      fetchProposalAddress();\n    }, [propAddress]) : __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, propAddress, \" ContributeInnerModal 27\", __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var proposalAddress, contractConfig, events, proposalContract, propBalance, manaContract, approvedMana;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            proposalAddress = \"\".concat(propAddress);\n            contractConfig = {\n              contractName: \"\".concat(propAddress),\n              web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\n            };\n\n            if (!drizzle.contracts[\"\".concat(propAddress)]) {\n              events = ['ContributionSuccess', 'ProposalEvent', 'LogNewProvableQuery', 'RandomFailure'];\n              drizzle.addContract(contractConfig, events);\n            }\n\n            if (!drizzle.contracts[\"\".concat(propAddress)]) {\n              _context.next = 14;\n              break;\n            }\n\n            proposalContract = drizzle.contracts[\"\".concat(propAddress)];\n            _context.next = 7;\n            return proposalContract.methods.getSummary(\"\".concat(tokenId)).call();\n\n          case 7:\n            propBalance = _context.sent;\n            manaContract = drizzle.contracts.MANAToken;\n            _context.next = 11;\n            return manaContract.methods.allowance(account, propAddress).call();\n\n          case 11:\n            approvedMana = _context.sent;\n            gotContractBalance(propBalance, approvedMana);\n            gotPropContract(proposalContract);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (propAddress === null || propAddress === 'undefined') {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, propAddress, \" ContributeInnerModal 52\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(ContributeForm, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      assetPrice: assetPrice,\n      propAddress: propAddress,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => ({\n  proposalStorageAbi: state.appReducers.proposalStorageAbi\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gotContractBalance: (propBalance, approvedMana) => dispatch({\n    type: 'PROPOSAL_BALANCE',\n    balance: \"\".concat(propBalance),\n    approvedMana: approvedMana\n  }),\n  gotPropContract: proposalContract => dispatch({\n    type: 'PROPOSAL_STORAGE_CONTRACT',\n    proposalStorage: proposalContract\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","connect","Web3","ContributeForm","Loader","ContributeInnnerModal","props","gotContractBalance","gotPropContract","proposalStorageAbi","drizzleState","drizzle","propAddress","tokenId","assetPrice","web3","givenProvider","approvedTokens","setApprovedTokens","manaContract","contracts","MANAToken","account","accounts","state","store","getState","dataKey","methods","allowance","cacheCall","approveMana","console","log","fetchProposalAddress","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","events","addContract","proposalContract","getSummary","call","propBalance","approvedMana","mapStateToProps","appReducers","mapDispatchToProps","dispatch","type","balance","proposalStorage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal = ({ props, gotContractBalance, gotPropContract, proposalStorageAbi }) => {\r\n  const { drizzleState, drizzle, propAddress, tokenId, assetPrice } = props;\r\n  let web3 = new Web3(Web3.givenProvider);\r\n\r\n  const [approvedTokens, setApprovedTokens] = useState(null);\r\n  const manaContract = drizzle.contracts.MANAToken; \r\n  const account = drizzleState.accounts[0];\r\n  let state = drizzle.store.getState();\r\n  const dataKey = manaContract.methods.allowance.cacheCall(account,propAddress);\r\n  const approveMana = state.contracts.MANAToken.allowance[dataKey];\r\n  //setApprovedTokens(approveMana);\r\n\r\n  //console.log(approveMana)\r\n  // const manaContract = drizzle.contracts.MANAToken; \r\n  // const approvedMana = manaContract.methods.allowance(account,propAddress).call();\r\n  // console.log(approvedMana)\r\n\r\n  if(tokenId === null){\r\n    return(\r\n      <div className=\"mx-auto\">   \r\n      TokenId{console.log(tokenId)}\r\n        <Loader color=\"#007bff\" size=\"40px\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  {propAddress && proposalStorageAbi ? \r\n    useEffect(() => {\r\n      const dataKey = manaContract.methods.allowance.cacheCall(account,propAddress);\r\n      const approveMana = state.contracts.MANAToken.allowance[dataKey];\r\n      fetchProposalAddress();\r\n    }, [propAddress])\r\n\r\n  :\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 27\r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\nconst fetchProposalAddress = async () => {\r\n      let proposalAddress = `${propAddress}`;\r\n      const contractConfig = {\r\n        contractName: `${propAddress}`,\r\n        web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\r\n      };\r\n      if (!drizzle.contracts[`${propAddress}`]) {\r\n      let events = ['ContributionSuccess','ProposalEvent','LogNewProvableQuery','RandomFailure'] ;  \r\n      drizzle.addContract(contractConfig, events);\r\n      }\r\n      if(drizzle.contracts[`${propAddress}`]){\r\n        const proposalContract = drizzle.contracts[`${propAddress}`];\r\n        const propBalance = await proposalContract.methods.getSummary(`${tokenId}`).call();\r\n        const manaContract = drizzle.contracts.MANAToken; \r\n        const approvedMana = await manaContract.methods.allowance(account,propAddress).call();\r\n  \r\n        gotContractBalance(propBalance, approvedMana); \r\n        gotPropContract(proposalContract);\r\n    }\r\n}\r\n\r\nif(propAddress === null || propAddress === 'undefined') {\r\n  return (\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 52\r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  )\r\n}  \r\nelse {\r\n  return ( \r\n        <>\r\n          <ContributeForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} propAddress={propAddress} tokenId={tokenId} />\r\n        </>\r\n      );    \r\n  } \r\n}\r\n\r\n  const mapStateToProps = (state) => ({\r\n    proposalStorageAbi: state.appReducers.proposalStorageAbi\r\n  })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  gotContractBalance: (propBalance,approvedMana) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${propBalance}`, approvedMana:approvedMana }),\r\n  gotPropContract: (proposalContract) => dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:proposalContract})\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);"]},"metadata":{},"sourceType":"module"}