{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\ProposalForm.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Loader } from 'rimble-ui';\nimport InitialContributeModal from '../modals/InitialContibModal';\nimport InnerPropForm from './InnerPropForm';\n\nconst ProposalForm = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee({\n    drizzle,\n    drizzleState,\n    props,\n    propAddress,\n    getCurrentProp,\n    tokenId,\n    assetPrice,\n    userManaBalance\n  }) {\n    var proposalAddress;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return drizzle.contracts.ProposalController.methods.getPropTokenIdMap(\"\".concat(tokenId)).call();\n\n        case 2:\n          proposalAddress = _context.sent;\n          getCurrentProp(proposalAddress); // const [tokenIdState, setTokenId] = useState(null);\n          // const fetchProposalAddress = async () => {\n          //   setTokenId(tokenId);\n          //   if(!tokenIdState){\n          //     <div className=\"mx-auto align-items-center\">   \n          //     <div>!tokenIdState</div>\n          //       <Loader color=\"#007bff\" size=\"40px\" />\n          //     </div>\n          //   }\n          //   if(tokenIdState){\n          //     const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenIdState}`).call(); \n          //     getCurrentProp(proposalAddress);\n          //     }\n          //   };\n          // useEffect(() => {\n          //   fetchProposalAddress();\n          // }, [tokenIdState]);\n          // if(!propAddress){\n          // return (\n          //   <div className=\"mx-auto align-items-center\">   \n          //     <Loader color=\"#007bff\" size=\"40px\" />\n          //   </div>\n          //   )\n          // }\n\n          if (!proposalAddress) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", __jsx(InnerPropForm, {\n            assetPrice: assetPrice,\n            props: props,\n            drizzle: drizzle,\n            drizzleState: drizzleState,\n            tokenId: tokenId,\n            userManaBalance: userManaBalance,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 5\n            }\n          }));\n\n        case 6:\n          if (proposalAddress) {\n            _context.next = 8;\n            break;\n          }\n\n          return _context.abrupt(\"return\", __jsx(\"div\", {\n            className: \"mx-auto align-items-center\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 3\n            }\n          }, __jsx(Loader, {\n            color: \"#007bff\",\n            size: \"40px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 5\n            }\n          })));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function ProposalForm(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = ProposalForm;\n\nconst mapStateToProps = state => ({//propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentProp: proposalAddress => dispatch({\n    type: \"GOT_PROP_ADDRESS\",\n    proposalAddress: proposalAddress\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProposalForm\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/ProposalForm.js"],"names":["React","useState","useEffect","connect","Loader","InitialContributeModal","InnerPropForm","ProposalForm","drizzle","drizzleState","props","propAddress","getCurrentProp","tokenId","assetPrice","userManaBalance","contracts","ProposalController","methods","getPropTokenIdMap","call","proposalAddress","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,sBAAP,MAAmC,8BAAnC;AACA,OAAOC,aAAP,MAA2B,iBAA3B;;AAEA,MAAMC,YAAY;AAAA,sEAAG,iBAAO;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA,WAAhC;AAA6CC,IAAAA,cAA7C;AAA6DC,IAAAA,OAA7D;AAAsEC,IAAAA,UAAtE;AAAkFC,IAAAA;AAAlF,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAIWP,OAAO,CAACQ,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6CC,iBAA7C,WAAkEN,OAAlE,GAA6EO,IAA7E,EAJX;;AAAA;AAIbC,UAAAA,eAJa;AAKnBT,UAAAA,cAAc,CAACS,eAAD,CAAd,CALmB,CAQrB;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AApCqB,eAqClBA,eArCkB;AAAA;AAAA;AAAA;;AAAA,2CAuCjB,MAAC,aAAD;AACE,YAAA,UAAU,EAAEP,UADd;AAEE,YAAA,KAAK,EAAEJ,KAFT;AAGE,YAAA,OAAO,EAAEF,OAHX;AAIE,YAAA,YAAY,EAAEC,YAJhB;AAKE,YAAA,OAAO,EAAEI,OALX;AAME,YAAA,eAAe,EAAEE,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCiB;;AAAA;AAAA,cAiDjBM,eAjDiB;AAAA;AAAA;AAAA;;AAAA,2CAmDnB;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,IAAI,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAnDmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZd,YAAY;AAAA;AAAA;AAAA,GAAlB;;KAAMA,Y;;AA0EN,MAAMe,eAAe,GAAIC,KAAD,KAAY,CAClC;AADkC,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,cAAc,EAAGS,eAAD,IAAsBI,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BL,IAAAA,eAAe,EAACA;AAA5C,GAAD;AADN,CAAf,CAA3B;;AAKA,eAAelB,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,YAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'rimble-ui';\r\nimport InitialContributeModal from '../modals/InitialContibModal';\r\nimport InnerPropForm  from './InnerPropForm'\r\n\r\nconst ProposalForm = async ({ drizzle, drizzleState, props, propAddress, getCurrentProp, tokenId, assetPrice, userManaBalance }) => {     \r\n\r\n  //const [tokenIdState, setTokenId] = useState(null);\r\n\r\n  const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenId}`).call(); \r\n  getCurrentProp(proposalAddress);\r\n\r\n\r\n// const [tokenIdState, setTokenId] = useState(null);\r\n\r\n// const fetchProposalAddress = async () => {\r\n//   setTokenId(tokenId);\r\n\r\n//   if(!tokenIdState){\r\n//     <div className=\"mx-auto align-items-center\">   \r\n//     <div>!tokenIdState</div>\r\n//       <Loader color=\"#007bff\" size=\"40px\" />\r\n//     </div>\r\n//   }\r\n  \r\n//   if(tokenIdState){\r\n//     const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenIdState}`).call(); \r\n//     getCurrentProp(proposalAddress);\r\n//     }\r\n//   };\r\n\r\n// useEffect(() => {\r\n//   fetchProposalAddress();\r\n// }, [tokenIdState]);\r\n\r\n// if(!propAddress){\r\n// return (\r\n//   <div className=\"mx-auto align-items-center\">   \r\n//     <Loader color=\"#007bff\" size=\"40px\" />\r\n//   </div>\r\n//   )\r\n// }\r\nif(proposalAddress){\r\n return (\r\n    <InnerPropForm\r\n      assetPrice={assetPrice}  \r\n      props={props}\r\n      drizzle={drizzle}\r\n      drizzleState={drizzleState}\r\n      tokenId={tokenId}\r\n      userManaBalance={userManaBalance}\r\n    />\r\n    )\r\n  }\r\nif(!proposalAddress){\r\nreturn (\r\n  <div className=\"mx-auto align-items-center\">   \r\n    <Loader color=\"#007bff\" size=\"40px\" />\r\n  </div>\r\n  )\r\n}\r\n\r\n  // {!propAddress ?\r\n  //   <div className=\"mx-auto align-items-center\">   \r\n  //     <Loader color=\"#007bff\" size=\"40px\" />\r\n  //   </div>\r\n  // :\r\n  //   <InnerPropForm\r\n  //     assetPrice={assetPrice}  \r\n  //     props={props}\r\n  //     drizzle={drizzle}\r\n  //     drizzleState={drizzleState}\r\n  //     tokenId={tokenId}\r\n  //     userManaBalance={userManaBalance}\r\n  //   />\r\n      \r\n  // }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //propAddress: state.appReducers.propAddress\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCurrentProp: (proposalAddress) =>  dispatch({ type: \"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress })\r\n});\r\n      \r\n      \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm);"]},"metadata":{},"sourceType":"module"}