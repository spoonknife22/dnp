{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\ProposalForm.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Loader } from 'rimble-ui';\nimport InitialContributeModal from '../modals/InitialContibModal';\nimport InnerPropForm from './InnerPropForm';\n\nconst ProposalForm = ({\n  drizzle,\n  drizzleState,\n  props,\n  propAddress,\n  getCurrentProp,\n  tokenId,\n  assetPrice,\n  userManaBalance\n}) => {\n  const _useState = useState(null),\n        currentProp = _useState[0],\n        setCurrentProp = _useState[1];\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var proposalAddress;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return drizzle.contracts.ProposalController.methods.getPropTokenIdMap(\"\".concat(tokenId)).call();\n\n          case 2:\n            proposalAddress = _context.sent;\n            setCurrentProp(proposalAddress);\n            getCurrentProp(proposalAddress);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    fetchProposalAddress();\n  }, [currentProp]);\n\n  if (currentProp) {\n    return __jsx(InnerPropForm, {\n      assetPrice: assetPrice,\n      props: props,\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      tokenId: tokenId,\n      userManaBalance: userManaBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    });\n  }\n\n  if (!currentProp) {\n    return __jsx(\"div\", {\n      className: \"mx-auto align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }\n    }, __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }));\n  } // {!propAddress ?\n  //   <div className=\"mx-auto align-items-center\">   \n  //     <Loader color=\"#007bff\" size=\"40px\" />\n  //   </div>\n  // :\n  //   <InnerPropForm\n  //     assetPrice={assetPrice}  \n  //     props={props}\n  //     drizzle={drizzle}\n  //     drizzleState={drizzleState}\n  //     tokenId={tokenId}\n  //     userManaBalance={userManaBalance}\n  //   />\n  // }\n\n};\n\nconst mapStateToProps = state => ({//propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentProp: proposalAddress => dispatch({\n    type: \"GOT_PROP_ADDRESS\",\n    proposalAddress: proposalAddress\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/ProposalForm.js"],"names":["React","useState","useEffect","connect","Loader","InitialContributeModal","InnerPropForm","ProposalForm","drizzle","drizzleState","props","propAddress","getCurrentProp","tokenId","assetPrice","userManaBalance","currentProp","setCurrentProp","fetchProposalAddress","contracts","ProposalController","methods","getPropTokenIdMap","call","proposalAddress","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,sBAAP,MAAmC,8BAAnC;AACA,OAAOC,aAAP,MAA2B,iBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA,WAAhC;AAA6CC,EAAAA,cAA7C;AAA6DC,EAAAA,OAA7D;AAAsEC,EAAAA,UAAtE;AAAkFC,EAAAA;AAAlF,CAAD,KAAyG;AAAA,oBAExFd,QAAQ,CAAC,IAAD,CAFgF;AAAA,QAEvHe,WAFuH;AAAA,QAE1GC,cAF0G;;AAI9H,QAAMC,oBAAoB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGV,OAAO,CAACW,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6CC,iBAA7C,WAAkET,OAAlE,GAA6EU,IAA7E,EADH;;AAAA;AACrBC,YAAAA,eADqB;AAE3BP,YAAAA,cAAc,CAACO,eAAD,CAAd;AACAZ,YAAAA,cAAc,CAACY,eAAD,CAAd;;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApBN,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,CAACF,WAAD,CAFM,CAAT;;AAIA,MAAGA,WAAH,EAAe;AACd,WACG,MAAC,aAAD;AACE,MAAA,UAAU,EAAEF,UADd;AAEE,MAAA,KAAK,EAAEJ,KAFT;AAGE,MAAA,OAAO,EAAEF,OAHX;AAIE,MAAA,YAAY,EAAEC,YAJhB;AAKE,MAAA,OAAO,EAAEI,OALX;AAME,MAAA,eAAe,EAAEE,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAUE;;AACH,MAAG,CAACC,WAAJ,EAAgB;AAChB,WACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKC,GAhC6H,CAkC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACD,CAjDD;;AAmDA,MAAMS,eAAe,GAAIC,KAAD,KAAY,CAClC;AADkC,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,cAAc,EAAGY,eAAD,IAAsBI,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BL,IAAAA,eAAe,EAACA;AAA5C,GAAD;AADN,CAAf,CAA3B;;AAKA,eAAerB,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,YAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'rimble-ui';\r\nimport InitialContributeModal from '../modals/InitialContibModal';\r\nimport InnerPropForm  from './InnerPropForm'\r\n\r\nconst ProposalForm = ({ drizzle, drizzleState, props, propAddress, getCurrentProp, tokenId, assetPrice, userManaBalance }) => {     \r\n\r\nconst [currentProp, setCurrentProp] = useState(null);\r\n\r\nconst fetchProposalAddress = async () => {\r\n  const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenId}`).call(); \r\n  setCurrentProp(proposalAddress);\r\n  getCurrentProp(proposalAddress);\r\n}\r\n\r\nuseEffect(() => {\r\n  fetchProposalAddress();\r\n}, [currentProp]);\r\n\r\nif(currentProp){\r\n return (\r\n    <InnerPropForm\r\n      assetPrice={assetPrice}  \r\n      props={props}\r\n      drizzle={drizzle}\r\n      drizzleState={drizzleState}\r\n      tokenId={tokenId}\r\n      userManaBalance={userManaBalance}\r\n    />\r\n    )\r\n  }\r\nif(!currentProp){\r\nreturn (\r\n  <div className=\"mx-auto align-items-center\">   \r\n    <Loader color=\"#007bff\" size=\"40px\" />\r\n  </div>\r\n  )\r\n}\r\n\r\n  // {!propAddress ?\r\n  //   <div className=\"mx-auto align-items-center\">   \r\n  //     <Loader color=\"#007bff\" size=\"40px\" />\r\n  //   </div>\r\n  // :\r\n  //   <InnerPropForm\r\n  //     assetPrice={assetPrice}  \r\n  //     props={props}\r\n  //     drizzle={drizzle}\r\n  //     drizzleState={drizzleState}\r\n  //     tokenId={tokenId}\r\n  //     userManaBalance={userManaBalance}\r\n  //   />\r\n      \r\n  // }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //propAddress: state.appReducers.propAddress\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCurrentProp: (proposalAddress) =>  dispatch({ type: \"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress })\r\n});\r\n      \r\n      \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm);"]},"metadata":{},"sourceType":"module"}