{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\NominationDetailsLink.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Button } from \"shards-react\";\nimport { Loader } from 'rimble-ui';\n\nconst NominationDetailsLink = ({\n  parcel,\n  getTokenId,\n  drizzle\n}) => {\n  _s();\n\n  const _useState = useState(null),\n        tokenId = _useState[0],\n        setTokenId = _useState[1];\n\n  const _useState2 = useState(true),\n        loading = _useState2[0],\n        setLoading = _useState2[1]; // const myHeaders = new Headers();\n  // myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n  useEffect(() => {\n    const fetchDetailsLink = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var tokenId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return drizzle.contracts.LANDRegistry.methods.encodeTokenId(parcel.x, parcel.y).call();\n\n            case 2:\n              tokenId = _context.sent;\n              setTokenId(tokenId);\n\n              if (tokenId === null) {\n                setLoading(true);\n              }\n\n              if (tokenId) {\n                setLoading(false);\n              }\n\n              ; //   const graphql= JSON.stringify({ query: \n              //   `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) { tokenId }}`\n              // })\n              //   const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n              //   targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\n              //   fetch(proxyUrl + targetUrl, {\n              //     method: \"POST\",\n              //     headers:myHeaders,  \n              //     body:graphql, variables:{},\n              //     redirect: 'follow'\n              //   })\n              //     .then(res => res.json())\n              //     .then((result) => {\n              //       const parcelData = result.data.parcels[0];\n              //       return parcelData;\n              //     })\n              //     .then((result) => { \n              //       const { tokenId } = result;\n              //       if(tokenId === null){\n              //         setLoading(true)\n              //       }\n              //       setLoading(false);\n              //       return tokenId;\n              //     })\n              //     .then((result) => {  \n              //       setTokenId(result);\n              //       getTokenId(result);\n              //     }) \n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchDetailsLink() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchDetailsLink();\n  }, []);\n  return __jsx(Accordion, {\n    defaultActiveKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-476772237\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    outline: true,\n    theme: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-476772237\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Asset Details\")), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-476772237\" + \" \" + \"p-2 mt-2 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-476772237\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, loading ? __jsx(Loader, {\n    size: \"25px\",\n    color: \"#007bff\",\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }) : __jsx(\"a\", {\n    href: \"https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/\" + tokenId,\n    target: \"_blank\",\n    className: \"jsx-476772237\" + \" \" + \"details-btn text_center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Decentraland\"))))), __jsx(_JSXStyle, {\n    id: \"476772237\",\n    __self: this\n  }, \".details-btn.jsx-476772237:hover{font-family:Poppins;font-size:.9rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxjb21wb25lbnRzXFxOb21pbmF0aW9uRGV0YWlsc0xpbmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0ZtQixBQUVpRCxvQkFBZSxnQkFBQyIsImZpbGUiOiJDOlxcVXNlcnNcXFNhbXN1bmdcXGNvZGVcXGNhY3BcXGNsaWVudFxcY29tcG9uZW50c1xcTm9taW5hdGlvbkRldGFpbHNMaW5rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCBBY2NvcmRpb24gZnJvbSAncmVhY3QtYm9vdHN0cmFwL0FjY29yZGlvbic7XHJcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJzaGFyZHMtcmVhY3RcIjtcclxuaW1wb3J0IHsgIExvYWRlciB9IGZyb20gJ3JpbWJsZS11aSc7XHJcblxyXG5jb25zdCBOb21pbmF0aW9uRGV0YWlsc0xpbmsgPSAoeyBwYXJjZWwsIGdldFRva2VuSWQsIGRyaXp6bGUgfSkgPT4geyBcclxuICBcclxuXHJcbiAgY29uc3QgW3Rva2VuSWQsIHNldFRva2VuSWRdID0gdXNlU3RhdGUobnVsbCk7XHJcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XHJcblxyXG4gIC8vIGNvbnN0IG15SGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcbiAgLy8gbXlIZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiBcclxuICBjb25zdCBmZXRjaERldGFpbHNMaW5rID0gYXN5bmMgKCkgPT4ge1xyXG5cclxuICAgIGNvbnN0IHRva2VuSWQgPSBhd2FpdCBkcml6emxlLmNvbnRyYWN0cy5MQU5EUmVnaXN0cnkubWV0aG9kcy5lbmNvZGVUb2tlbklkKHBhcmNlbC54LCBwYXJjZWwueSkuY2FsbCgpO1xyXG4gICAgc2V0VG9rZW5JZCh0b2tlbklkKTtcclxuICAgIGlmKHRva2VuSWQgPT09IG51bGwpe1xyXG4gICAgICBzZXRMb2FkaW5nKHRydWUpXHJcbiAgICB9XHJcbiAgICBpZih0b2tlbklkKXtcclxuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICB9O1xyXG5cclxuLy8gICBjb25zdCBncmFwaHFsPSBKU09OLnN0cmluZ2lmeSh7IHF1ZXJ5OiBcclxuLy8gICBgeyBwYXJjZWxzKHdoZXJlOiB7eDpcIiR7cGFyY2VsLnh9XCIseTpcIiR7cGFyY2VsLnl9XCJ9KSB7IHRva2VuSWQgfX1gXHJcbi8vIH0pXHJcblxyXG4vLyAgIGNvbnN0IHByb3h5VXJsID0gJ2h0dHBzOi8vY29ycy1hbnl3aGVyZS5oZXJva3VhcHAuY29tLycsXHJcbi8vICAgdGFyZ2V0VXJsID0gJ2h0dHBzOi8vYXBpLnRoZWdyYXBoLmNvbS9zdWJncmFwaHMvbmFtZS9kZWNlbnRyYWxhbmQvbWFya2V0cGxhY2UnXHJcblxyXG4vLyAgIGZldGNoKHByb3h5VXJsICsgdGFyZ2V0VXJsLCB7XHJcbi8vICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4vLyAgICAgaGVhZGVyczpteUhlYWRlcnMsICBcclxuLy8gICAgIGJvZHk6Z3JhcGhxbCwgdmFyaWFibGVzOnt9LFxyXG4vLyAgICAgcmVkaXJlY3Q6ICdmb2xsb3cnXHJcbi8vICAgfSlcclxuLy8gICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxyXG4vLyAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4vLyAgICAgICBjb25zdCBwYXJjZWxEYXRhID0gcmVzdWx0LmRhdGEucGFyY2Vsc1swXTtcclxuLy8gICAgICAgcmV0dXJuIHBhcmNlbERhdGE7XHJcbi8vICAgICB9KVxyXG4vLyAgICAgLnRoZW4oKHJlc3VsdCkgPT4geyBcclxuLy8gICAgICAgY29uc3QgeyB0b2tlbklkIH0gPSByZXN1bHQ7XHJcbi8vICAgICAgIGlmKHRva2VuSWQgPT09IG51bGwpe1xyXG4vLyAgICAgICAgIHNldExvYWRpbmcodHJ1ZSlcclxuLy8gICAgICAgfVxyXG4vLyAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuLy8gICAgICAgcmV0dXJuIHRva2VuSWQ7XHJcbi8vICAgICB9KVxyXG4vLyAgICAgLnRoZW4oKHJlc3VsdCkgPT4geyAgXHJcbi8vICAgICAgIHNldFRva2VuSWQocmVzdWx0KTtcclxuLy8gICAgICAgZ2V0VG9rZW5JZChyZXN1bHQpO1xyXG4vLyAgICAgfSkgXHJcbiAgfTtcclxuZmV0Y2hEZXRhaWxzTGluaygpO1xyXG59LCBbXSk7XHJcblxyXG5yZXR1cm4gKFxyXG4gICAgPEFjY29yZGlvbiBkZWZhdWx0QWN0aXZlS2V5PVwiMVwiPlxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxBY2NvcmRpb24uVG9nZ2xlIGFzPXtCdXR0b259ICB2YXJpYW50PVwibGlua1wiIGV2ZW50S2V5PVwiMFwiIG91dGxpbmUgdGhlbWU9XCJsaWdodFwiPlxyXG4gICAgICAgIDxkaXY+QXNzZXQgRGV0YWlsczwvZGl2PlxyXG4gICAgICAgIDwvQWNjb3JkaW9uLlRvZ2dsZT5cclxuICAgICAgICAgIDxBY2NvcmRpb24uQ29sbGFwc2UgZXZlbnRLZXk9XCIwXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC0yIG10LTIgYm9yZGVyIHJvdW5kZWRcIj5cclxuICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAge2xvYWRpbmcgP1xyXG4gICAgICAgICAgICAgICAgICA8TG9hZGVyIHNpemU9XCIyNXB4XCIgY29sb3I9XCIjMDA3YmZmXCIgY2xhc3NOYW1lPVwibXgtYXV0b1wiLz4gXHJcbiAgICAgICAgICAgICAgICAgIDpcclxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiZGV0YWlscy1idG4gdGV4dF9jZW50ZXJcIiBocmVmPXtgaHR0cHM6Ly9tYXJrZXQuZGVjZW50cmFsYW5kLm9yZy9jb250cmFjdHMvMHhmODdlMzE0OTJmYWY5YTkxYjAyZWUwZGVhYWQ1MGQ1MWQ1NmQ1ZDRkL3Rva2Vucy9gICsgdG9rZW5JZH0gIHRhcmdldD1cIl9ibGFua1wiPkRlY2VudHJhbGFuZDwvYT5cclxuICAgICAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L0FjY29yZGlvbi5Db2xsYXBzZT5cclxuICAgICAgPC9kaXY+IFxyXG4gICAgICA8c3R5bGUganN4PiB7YCBcclxuICAgICAgICAgIC5kZXRhaWxzLWJ0bjpob3Zlcntmb250LWZhbWlseTogUG9wcGlucztmb250LXNpemU6LjlyZW07fVxyXG4gICAgICAgIGB9ICAgIFxyXG4gICAgICA8L3N0eWxlPlxyXG4gICAgPC9BY2NvcmRpb24+XHJcbiAgKVxyXG59XHJcblxyXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XHJcbiAgLy8gdG9rZW5JZFN0YXRlOiBzdGF0ZS5hcHBSZWR1Y2Vycy50b2tlbklkLFxyXG4gIC8vIHR4U3VjY2Vzc2Z1bDogc3RhdGUuYXBwUmVkdWNlcnMudHhTdWNjZXNzZnVsLFxyXG4gIHRva2VuSWRTdGF0ZTogc3RhdGUudG9rZW5JZCxcclxuICB0eFN1Y2Nlc3NmdWw6IHN0YXRlLnR4U3VjY2Vzc2Z1bCxcclxufSlcclxuXHJcbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IChkaXNwYXRjaCkgPT4gKHtcclxuICBnZXRUb2tlbklkOiAocmVzdWx0KSA9PiAgZGlzcGF0Y2goeyB0eXBlOiBcIlRPS0VOX0lEX0ZFVENIXCIsIHRva2VuSWQ6cmVzdWx0IH0pXHJcbn0pO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKE5vbWluYXRpb25EZXRhaWxzTGluayk7XHJcblxyXG4iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Samsung\\\\\\\\code\\\\\\\\cacp\\\\\\\\client\\\\\\\\components\\\\\\\\NominationDetailsLink.js */\"));\n};\n\n_s(NominationDetailsLink, \"mDkKxKO9C0yglK2HxrmLmpSPGKk=\");\n\n_c = NominationDetailsLink;\n\nconst mapStateToProps = state => ({\n  // tokenIdState: state.appReducers.tokenId,\n  // txSuccessful: state.appReducers.txSuccessful,\n  tokenIdState: state.tokenId,\n  txSuccessful: state.txSuccessful\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTokenId: result => dispatch({\n    type: \"TOKEN_ID_FETCH\",\n    tokenId: result\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NominationDetailsLink);\n\nvar _c;\n\n$RefreshReg$(_c, \"NominationDetailsLink\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/NominationDetailsLink.js"],"names":["React","useState","useEffect","connect","Accordion","Button","Loader","NominationDetailsLink","parcel","getTokenId","drizzle","tokenId","setTokenId","loading","setLoading","fetchDetailsLink","contracts","LANDRegistry","methods","encodeTokenId","x","y","call","mapStateToProps","state","tokenIdState","txSuccessful","mapDispatchToProps","dispatch","result","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Button } from \"shards-react\";\r\nimport {  Loader } from 'rimble-ui';\r\n\r\nconst NominationDetailsLink = ({ parcel, getTokenId, drizzle }) => { \r\n  \r\n\r\n  const [tokenId, setTokenId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // const myHeaders = new Headers();\r\n  // myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  useEffect(() => {\r\n \r\n  const fetchDetailsLink = async () => {\r\n\r\n    const tokenId = await drizzle.contracts.LANDRegistry.methods.encodeTokenId(parcel.x, parcel.y).call();\r\n    setTokenId(tokenId);\r\n    if(tokenId === null){\r\n      setLoading(true)\r\n    }\r\n    if(tokenId){\r\n      setLoading(false);\r\n    };\r\n\r\n//   const graphql= JSON.stringify({ query: \r\n//   `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) { tokenId }}`\r\n// })\r\n\r\n//   const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n//   targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\r\n\r\n//   fetch(proxyUrl + targetUrl, {\r\n//     method: \"POST\",\r\n//     headers:myHeaders,  \r\n//     body:graphql, variables:{},\r\n//     redirect: 'follow'\r\n//   })\r\n//     .then(res => res.json())\r\n//     .then((result) => {\r\n//       const parcelData = result.data.parcels[0];\r\n//       return parcelData;\r\n//     })\r\n//     .then((result) => { \r\n//       const { tokenId } = result;\r\n//       if(tokenId === null){\r\n//         setLoading(true)\r\n//       }\r\n//       setLoading(false);\r\n//       return tokenId;\r\n//     })\r\n//     .then((result) => {  \r\n//       setTokenId(result);\r\n//       getTokenId(result);\r\n//     }) \r\n  };\r\nfetchDetailsLink();\r\n}, []);\r\n\r\nreturn (\r\n    <Accordion defaultActiveKey=\"1\">\r\n      <div>\r\n        <Accordion.Toggle as={Button}  variant=\"link\" eventKey=\"0\" outline theme=\"light\">\r\n        <div>Asset Details</div>\r\n        </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <div className=\"p-2 mt-2 border rounded\">\r\n              <div>\r\n                {loading ?\r\n                  <Loader size=\"25px\" color=\"#007bff\" className=\"mx-auto\"/> \r\n                  :\r\n                  <a className=\"details-btn text_center\" href={`https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/` + tokenId}  target=\"_blank\">Decentraland</a>\r\n                } \r\n                </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n      </div> \r\n      <style jsx> {` \r\n          .details-btn:hover{font-family: Poppins;font-size:.9rem;}\r\n        `}    \r\n      </style>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // tokenIdState: state.appReducers.tokenId,\r\n  // txSuccessful: state.appReducers.txSuccessful,\r\n  tokenIdState: state.tokenId,\r\n  txSuccessful: state.txSuccessful,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTokenId: (result) =>  dispatch({ type: \"TOKEN_ID_FETCH\", tokenId:result })\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NominationDetailsLink);\r\n\r\n"]},"metadata":{},"sourceType":"module"}