{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = ({\n  props,\n  gotContractBalance,\n  gotPropContract\n}) => {\n  const drizzleState = props.drizzleState,\n        drizzle = props.drizzle,\n        propAddress = props.propAddress,\n        tokenId = props.tokenId,\n        assetPrice = props.assetPrice;\n  const proposalStorageAbi = drizzleState.appReducers.proposalStorageAbi;\n  let web3 = new Web3(Web3.givenProvider);\n\n  if (tokenId === null) {\n    __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }, __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }));\n  } else if (propAddress !== null && proposalStorageAbi !== null) {\n    useEffect(() => {\n      fetchProposalAddress();\n    }, [tokenId]);\n  }\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var proposalAddress, contractConfig, proposalContract, propBalance;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            proposalAddress = \"\".concat(propAddress);\n            contractConfig = {\n              contractName: \"ProposalStorage\",\n              web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\n            };\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              drizzle.addContract(contractConfig);\n            }\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              _context.next = 10;\n              break;\n            }\n\n            proposalContract = drizzle.contracts['ProposalStorage'];\n            _context.next = 7;\n            return proposalContract.methods.getSummary(\"\".concat(tokenId)).call();\n\n          case 7:\n            propBalance = _context.sent;\n            //const propBalance = await drizzle.contracts.ProposalStorage.methods.getSummary(`${tokenId}`).call();\n            gotContractBalance(propBalance);\n            gotPropContract(proposalContract); // drizzle.store.dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:drizzle.contracts['ProposalStorage'] });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (propAddress === null) {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 3\n      }\n    }, __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(ContributeForm, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      assetPrice: assetPrice,\n      propAddress: propAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }));\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  gotContractBalance: propBalance => dispatch({\n    type: 'PROPOSAL_BALANCE',\n    balance: \"\".concat(propBalance)\n  }),\n  gotPropContract: proposalContract => dispatch({\n    type: 'PROPOSAL_STORAGE_CONTRACT',\n    proposalStorage: proposalContract\n  })\n});\n\nexport default connect(null, mapDispatchToProps)(ContributeInnnerModal);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","connect","Web3","ContributeForm","Loader","ContributeInnnerModal","props","gotContractBalance","gotPropContract","drizzleState","drizzle","propAddress","tokenId","assetPrice","proposalStorageAbi","appReducers","web3","givenProvider","fetchProposalAddress","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","contracts","addContract","proposalContract","methods","getSummary","call","propBalance","mapDispatchToProps","dispatch","type","balance","proposalStorage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal =  ({ props, gotContractBalance, gotPropContract }) => {\r\n  const { drizzleState, drizzle, propAddress, tokenId, assetPrice } = props;\r\n  const { proposalStorageAbi } = drizzleState.appReducers;\r\n  let web3 = new Web3(Web3.givenProvider);\r\n\r\n  if(tokenId === null){\r\n    <div className=\"mx-auto\">   \r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\n  else if(propAddress !== null && proposalStorageAbi !== null) {\r\n    useEffect(() => {\r\n      fetchProposalAddress();\r\n    }, [tokenId]);\r\n  }\r\n\r\n  const fetchProposalAddress = async () => {\r\n      let proposalAddress = `${propAddress}`;\r\n      const contractConfig = {\r\n        contractName: \"ProposalStorage\",\r\n        web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\r\n      };\r\n      if (!drizzle.contracts['ProposalStorage']) {\r\n        drizzle.addContract(contractConfig);\r\n      }\r\n      if(drizzle.contracts['ProposalStorage']){\r\n        const proposalContract = drizzle.contracts['ProposalStorage'];\r\n        const propBalance = await proposalContract.methods.getSummary(`${tokenId}`).call();\r\n        //const propBalance = await drizzle.contracts.ProposalStorage.methods.getSummary(`${tokenId}`).call();\r\n        gotContractBalance(propBalance); \r\n        gotPropContract(proposalContract);\r\n       \r\n        // drizzle.store.dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:drizzle.contracts['ProposalStorage'] });\r\n    }\r\n}\r\nif(propAddress === null) {\r\n  return (\r\n  <div className=\"mx-auto\">   \r\n    <Loader color=\"#007bff\" size=\"40px\" />\r\n  </div>\r\n  )\r\n}  \r\nelse {\r\n  return ( \r\n        <>\r\n          <ContributeForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} propAddress={propAddress} />\r\n        </>\r\n      );    \r\n    } \r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  gotContractBalance: (propBalance) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${propBalance}` }),\r\n  gotPropContract: (proposalContract) => dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:proposalContract})\r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ContributeInnnerModal);"]},"metadata":{},"sourceType":"module"}