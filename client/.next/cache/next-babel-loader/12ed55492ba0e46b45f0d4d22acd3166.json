{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\InnerPropForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // import {Col, Button} from 'react-bootstrap'\n\nimport { Col } from \"shards-react\";\nimport { toast } from 'react-toastify';\nimport NominationButton from '../buttons/NominateButton';\nimport ContributeForm from './ContributeForm';\nimport { Loader } from 'rimble-ui';\nimport InitialContributeModal from '../modals/InitialContibModal';\nimport Web3 from \"web3\";\n\nconst InnerPropForm = ({\n  drizzle,\n  drizzleState,\n  props,\n  propAddress,\n  tokenId,\n  assetPrice,\n  userManaBalance\n}) => {\n  _s();\n\n  console.log(assetPrice);\n\n  const _useState = useState(null),\n        currentProp = _useState[0],\n        setCurrentProp = _useState[1];\n\n  useEffect(() => {\n    setCurrentProp(propAddress);\n  }, [propAddress]);\n\n  const nominateAsset = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var web3, text, salePrice, reSalePrice, listPrice, account, memberBool, user, userId, contract;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            web3 = new Web3(Web3.givenProvider);\n            text = values.text, salePrice = values.salePrice;\n            reSalePrice = web3.utils.toWei(\"\".concat(salePrice), 'ether');\n            listPrice = web3.utils.toWei(\"\".concat(assetPrice), 'ether');\n            account = drizzleState.accounts['0'];\n            _context.next = 7;\n            return drizzle.contracts.UserStorage.methods.addresses(account).call();\n\n          case 7:\n            memberBool = _context.sent;\n\n            if (!memberBool) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 11;\n            return drizzle.contracts.UserStorage.methods.profiles(account).call();\n\n          case 11:\n            user = _context.sent;\n            userId = user.userId;\n            _context.next = 15;\n            return drizzle.contracts.ProposalController;\n\n          case 15:\n            contract = _context.sent;\n            _context.prev = 16;\n            contract.methods[\"createProposal\"].cacheSend(userId, listPrice, reSalePrice, text, tokenId);\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](16);\n            return _context.abrupt(\"return\", toast.error(\"Sorry, we couldn't create asset nomination: \".concat(_context.t0), {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 23:\n            _context.next = 26;\n            break;\n\n          case 25:\n            return _context.abrupt(\"return\", toast.warning(\"Join the Consortium and nominate this asset\", {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[16, 20]]);\n    }));\n\n    return function nominateAsset(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  let yup = require('yup');\n\n  const schema = yup.object({\n    text: yup.string().max(100, 'To many characters').required('Required'),\n    salePrice: yup.number().typeError(\"Must be a number\").moreThan(assetPrice.toString(), 'Must be more than current price.').required('Required'),\n    termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\n  });\n\n  if (currentProp === null) {\n    return __jsx(\"div\", {\n      className: \"align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, currentProp, \" InnerPropForm 65\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  if (currentProp === '0x0000000000000000000000000000000000000000') {\n    return __jsx(React.Fragment, null, __jsx(Formik, {\n      initialValues: {\n        text: '',\n        salePrice: '',\n        termsOfService: false\n      },\n      validationSchema: schema,\n      onSubmit: (values, actions) => {\n        nominateAsset(values);\n        addReview(values);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      errors\n    }) => __jsx(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"validationFormik01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Pitch\"), __jsx(Form.Control, {\n      type: \"text\",\n      as: \"textarea\",\n      rows: 3,\n      name: \"text\",\n      placeholder: \"100 Character Max\",\n      value: values.text,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: values.text,\n      isInvalid: touched.text && !!errors.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, errors.text)), __jsx(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Resale Price\"), __jsx(Form.Control, {\n      type: \"text\",\n      name: \"salePrice\",\n      placeholder: \"Resale Price\",\n      value: values.salePrice,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: touched.salePrice && !!errors.salePrice,\n      isValid: values.salePrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, errors.salePrice))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Check, {\n      required: true,\n      name: \"termsOfService\",\n      label: \"Agree to terms and conditions\",\n      onChange: handleChange,\n      isInvalid: !!errors.termsOfService,\n      feedback: errors.termsOfService,\n      id: \"validationFormik0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    })), __jsx(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, __jsx(NominationButton, {\n      props: props,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  if (currentProp !== 'undefined') {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, __jsx(InitialContributeModal, {\n      propAddress: currentProp,\n      userManaBalance: userManaBalance,\n      assetPrice: assetPrice,\n      drizzleState: drizzleState,\n      drizzle: drizzle,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }, \"InnerPropFor 167\");\n  }\n};\n\n_s(InnerPropForm, \"jLhwHeJqtoqgdS/9kOUjQw0xBUw=\");\n\n_c = InnerPropForm;\n\nconst mapStateToProps = state => ({\n  propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentProp: proposalAddress => dispatch({\n    type: \"GOT_PROP_ADDRESS\",\n    proposalAddress: proposalAddress\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerPropForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"InnerPropForm\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/InnerPropForm.js"],"names":["React","useState","useEffect","Modal","connect","Form","Formik","Yup","Col","toast","NominationButton","ContributeForm","Loader","InitialContributeModal","Web3","InnerPropForm","drizzle","drizzleState","props","propAddress","tokenId","assetPrice","userManaBalance","console","log","currentProp","setCurrentProp","nominateAsset","values","web3","givenProvider","text","salePrice","reSalePrice","utils","toWei","listPrice","account","accounts","contracts","UserStorage","methods","addresses","call","memberBool","profiles","user","userId","ProposalController","contract","cacheSend","error","position","POSITION","TOP_RIGHT","warning","yup","require","schema","object","string","max","required","number","typeError","moreThan","toString","termsOfService","bool","oneOf","actions","addReview","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","getCurrentProp","proposalAddress","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAQ,KAAKC,GAAb,MAAsB,KAAtB,C,CACA;;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,sBAAP,MAAmC,8BAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA,WAAhC;AAA6CC,EAAAA,OAA7C;AAAsDC,EAAAA,UAAtD;AAAkEC,EAAAA;AAAlE,CAAD,KAAyF;AAAA;;AAC7GC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AAD6G,oBAEvEpB,QAAQ,CAAC,IAAD,CAF+D;AAAA,QAEtGwB,WAFsG;AAAA,QAEzFC,cAFyF;;AAK7GxB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,cAAc,CAACP,WAAD,CAAd;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,QAAMQ,aAAa;AAAA,wEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,IADgB,GACT,IAAIf,IAAJ,CAASA,IAAI,CAACgB,aAAd,CADS;AAGZC,YAAAA,IAHY,GAGQH,MAHR,CAGZG,IAHY,EAGNC,SAHM,GAGQJ,MAHR,CAGNI,SAHM;AAIdC,YAAAA,WAJc,GAIAJ,IAAI,CAACK,KAAL,CAAWC,KAAX,WAAoBH,SAApB,GAAgC,OAAhC,CAJA;AAKdI,YAAAA,SALc,GAKFP,IAAI,CAACK,KAAL,CAAWC,KAAX,WAAoBd,UAApB,GAAiC,OAAjC,CALE;AAMdgB,YAAAA,OANc,GAMJpB,YAAY,CAACqB,QAAb,CAAsB,GAAtB,CANI;AAAA;AAAA,mBAOKtB,OAAO,CAACuB,SAAR,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCC,SAAtC,CAAgDL,OAAhD,EAAyDM,IAAzD,EAPL;;AAAA;AAOdC,YAAAA,UAPc;;AAAA,iBASjBA,UATiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUC5B,OAAO,CAACuB,SAAR,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCI,QAAtC,CAA+CR,OAA/C,EAAwDM,IAAxD,EAVD;;AAAA;AAUZG,YAAAA,IAVY;AAWVC,YAAAA,MAXU,GAWCD,IAXD,CAWVC,MAXU;AAAA;AAAA,mBAYK/B,OAAO,CAACuB,SAAR,CAAkBS,kBAZvB;;AAAA;AAYZC,YAAAA,QAZY;AAAA;AAclBA,YAAAA,QAAQ,CAACR,OAAT,CAAiB,gBAAjB,EAAmCS,SAAnC,CAA6CH,MAA7C,EAAqDX,SAArD,EAAgEH,WAAhE,EAA6EF,IAA7E,EAAmFX,OAAnF;AAdkB;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAiBTX,KAAK,CAAC0C,KAAN,qEAAiE;AAAEC,cAAAA,QAAQ,EAAE3C,KAAK,CAAC4C,QAAN,CAAeC;AAA3B,aAAjE,CAjBS;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAqBX7C,KAAK,CAAC8C,OAAN,gDAA8D;AAAEH,cAAAA,QAAQ,EAAE3C,KAAK,CAAC4C,QAAN,CAAeC;AAA3B,aAA9D,CArBW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAb3B,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAyBF,MAAI6B,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,QAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAW;AACxB5B,IAAAA,IAAI,EAAEyB,GAAG,CAACI,MAAJ,GACLC,GADK,CACD,GADC,EACI,oBADJ,EAELC,QAFK,CAEI,UAFJ,CADkB;AAIxB9B,IAAAA,SAAS,EAAEwB,GAAG,CAACO,MAAJ,GACVC,SADU,CACA,kBADA,EAEVC,QAFU,CAED5C,UAAU,CAAC6C,QAAX,EAFC,EAEsB,kCAFtB,EAGVJ,QAHU,CAGD,UAHC,CAJa;AAQxBK,IAAAA,cAAc,EAAEX,GAAG,CAACY,IAAJ,GAAWC,KAAX,CAAiB,CAAC,IAAD,CAAjB,EAAyB,0CAAzB;AARQ,GAAX,CAAf;;AAWA,MAAG5C,WAAW,KAAK,IAAnB,EAAyB;AACvB,WACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WADH,uBAEE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAED,MAAGA,WAAW,KAAK,4CAAnB,EAAiE;AAC/D,WACE,4BACE,MAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACfM,QAAAA,IAAI,EAAE,EADS;AAEfC,QAAAA,SAAS,EAAE,EAFI;AAGfmC,QAAAA,cAAc,EAAC;AAHA,OADjB;AAME,MAAA,gBAAgB,EAAET,MANpB;AAOE,MAAA,QAAQ,EAAE,CAAC9B,MAAD,EAAS0C,OAAT,KAAqB;AAC/B3C,QAAAA,aAAa,CAACC,MAAD,CAAb;AACA2C,QAAAA,SAAS,CAAC3C,MAAD,CAAT;AACD,OAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,CAAC;AACA4C,MAAAA,YADA;AAEAC,MAAAA,YAFA;AAGAC,MAAAA,UAHA;AAIA9C,MAAAA,MAJA;AAKA+C,MAAAA,OALA;AAMAC,MAAAA;AANA,KAAD,KAQC,MAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAEJ,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEhE,GAAhB;AAAqB,MAAA,EAAE,EAAC,GAAxB;AAA4B,MAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAE,CAHR;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,mBALd;AAME,MAAA,KAAK,EAAEoB,MAAM,CAACG,IANhB;AAOE,MAAA,QAAQ,EAAE0C,YAPZ;AAQE,MAAA,MAAM,EAAEC,UARV;AASE,MAAA,OAAO,EAAE9C,MAAM,CAACG,IATlB;AAUE,MAAA,SAAS,EAAE4C,OAAO,CAAC5C,IAAR,IAAgB,CAAC,CAAC6C,MAAM,CAAC7C,IAVtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAcE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6C,MAAM,CAAC7C,IADV,CAdF,CADF,EAmBE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEvB,GAAhB;AAAqB,MAAA,EAAE,EAAC,GAAxB;AAA4B,MAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,WAAW,EAAC,cAHd;AAIE,MAAA,KAAK,EAAEoB,MAAM,CAACI,SAJhB;AAKE,MAAA,QAAQ,EAAEyC,YALZ;AAME,MAAA,MAAM,EAAEC,UANV;AAOE,MAAA,SAAS,EAAEC,OAAO,CAAC3C,SAAR,IAAqB,CAAC,CAAC4C,MAAM,CAAC5C,SAP3C;AAQE,MAAA,OAAO,EAAEJ,MAAM,CAACI,SARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC4C,MAAM,CAAC5C,SADR,CAZF,CAnBF,CADF,EAqCE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,gBAFP;AAGE,MAAA,KAAK,EAAC,+BAHR;AAIE,MAAA,QAAQ,EAAEyC,YAJZ;AAKE,MAAA,SAAS,EAAE,CAAC,CAACG,MAAM,CAACT,cALtB;AAME,MAAA,QAAQ,EAAES,MAAM,CAACT,cANnB;AAOE,MAAA,EAAE,EAAC,mBAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArCF,EAgDE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEjD,KAAzB;AAAgC,MAAA,OAAO,EAAEE,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhDF,CApBJ,CADF,CADF;AA8ED;;AACA,MAAGK,WAAW,KAAK,WAAnB,EAA+B;AAC5B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,sBAAD;AACE,MAAA,WAAW,EAAEA,WADf;AAEE,MAAA,eAAe,EAAEH,eAFnB;AAGE,MAAA,UAAU,EAAED,UAHd;AAIE,MAAA,YAAY,EAAEJ,YAJhB;AAKE,MAAA,OAAO,EAAED,OALX;AAME,MAAA,OAAO,EAAEI,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ;AAYD,GAbF,MAcK;AACF,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA;AAGD;AACF,CA1JD;;GAAML,a;;KAAAA,a;;AA4JN,MAAM8D,eAAe,GAAIC,KAAD,KAAY;AAClC3D,EAAAA,WAAW,EAAE2D,KAAK,CAACC,WAAN,CAAkB5D;AADG,CAAZ,CAAxB;;AAIA,MAAM6D,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,cAAc,EAAGC,eAAD,IAAsBF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,kBAAR;AAA4BD,IAAAA,eAAe,EAACA;AAA5C,GAAD;AADN,CAAf,CAA3B;;AAKA,eAAe/E,OAAO,CAACyE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjE,aAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Formik} from 'formik';\r\nimport  * as Yup from 'yup';\r\n// import {Col, Button} from 'react-bootstrap'\r\nimport { Col } from \"shards-react\";\r\nimport { toast } from 'react-toastify';\r\nimport NominationButton from '../buttons/NominateButton';\r\nimport ContributeForm from './ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\nimport InitialContributeModal from '../modals/InitialContibModal';\r\nimport Web3 from \"web3\";\r\n      \r\n\r\n\r\nconst InnerPropForm = ({ drizzle, drizzleState, props, propAddress, tokenId, assetPrice, userManaBalance }) => {\r\n  console.log(assetPrice)\r\n  const [currentProp, setCurrentProp] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentProp(propAddress);\r\n  }, [propAddress])\r\n\r\n  const nominateAsset = async (values) => {\r\n    let web3 = new Web3(Web3.givenProvider);\r\n\r\n    const { text, salePrice } = values;\r\n    const reSalePrice = web3.utils.toWei(`${salePrice}`,'ether');\r\n    const listPrice = web3.utils.toWei(`${assetPrice}`,'ether');\r\n    const account = drizzleState.accounts['0'];\r\n    const memberBool = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n   \r\n    if(memberBool) {\r\n      const user = await drizzle.contracts.UserStorage.methods.profiles(account).call();\r\n      const { userId } = user;\r\n      const contract = await drizzle.contracts.ProposalController;\r\n    try {\r\n      contract.methods[\"createProposal\"].cacheSend(userId, listPrice, reSalePrice, text, tokenId );\r\n \r\n    } catch (err) {\r\n        return toast.error(`Sorry, we couldn't create asset nomination: ${err}`,{ position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n    else {\r\n      return toast.warning( `Join the Consortium and nominate this asset`, { position: toast.POSITION.TOP_RIGHT });\r\n  }\r\n}\r\n\r\nlet yup = require('yup');\r\nconst schema = yup.object({\r\n  text: yup.string()\r\n  .max(100, 'To many characters')\r\n  .required('Required'),\r\n  salePrice: yup.number()\r\n  .typeError(\"Must be a number\")\r\n  .moreThan(assetPrice.toString(), 'Must be more than current price.')\r\n  .required('Required'),\r\n  termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\n\r\nif(currentProp === null) {\r\n  return (\r\n    <div className=\"align-items-center\">   \r\n      {currentProp} InnerPropForm 65  \r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nif(currentProp === '0x0000000000000000000000000000000000000000') {\r\n  return (   \r\n    <> \r\n      <Formik\r\n        initialValues={{\r\n        text: '',\r\n        salePrice: '',\r\n        termsOfService:false,\r\n        }}\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n        nominateAsset(values);\r\n        addReview(values);\r\n      }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n                <Form.Label>Pitch</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  as=\"textarea\" \r\n                  rows={3}\r\n                  name=\"text\"\r\n                  placeholder='100 Character Max'\r\n                  value={values.text}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={values.text}\r\n                  isInvalid={touched.text && !!errors.text}\r\n                  />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.text}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                <Form.Label>Resale Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\" \r\n                  name=\"salePrice\"\r\n                  placeholder=\"Resale Price\"\r\n                  value={values.salePrice}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.salePrice && !!errors.salePrice}\r\n                  isValid={values.salePrice}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">  \r\n                {errors.salePrice}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Group>\r\n              <Form.Check\r\n                required\r\n                name=\"termsOfService\"\r\n                label=\"Agree to terms and conditions\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.termsOfService}\r\n                feedback={errors.termsOfService}\r\n                id=\"validationFormik0\"\r\n              />\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n              <NominationButton props={props} tokenId={tokenId} />\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );   \r\n}       \r\n if(currentProp !== 'undefined'){\r\n    return (\r\n        <div>\r\n          <InitialContributeModal \r\n            propAddress={currentProp} \r\n            userManaBalance={userManaBalance}\r\n            assetPrice={assetPrice} \r\n            drizzleState={drizzleState} \r\n            drizzle={drizzle} \r\n            tokenId={tokenId} \r\n          />\r\n        </div>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n    <div>InnerPropFor 167</div>\r\n    )\r\n  }\r\n} \r\n\r\nconst mapStateToProps = (state) => ({\r\n  propAddress: state.appReducers.propAddress\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCurrentProp: (proposalAddress) =>  dispatch({ type: \"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress })\r\n});\r\n      \r\n      \r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerPropForm);"]},"metadata":{},"sourceType":"module"}