{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AccountsContainer.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport MyAddBar from \"./AddressBar.js\";\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport { Drizzle } from \"@drizzle/store\";\nimport options from \"./drizzleOptions\";\nimport { Loader } from 'rimble-ui';\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\nconst {\n  ContractData\n} = newContextComponents;\nconst drizzle = new Drizzle(options);\n\nconst AccountsContainer = () => {\n  return __jsx(DrizzleContext.Provider, {\n    drizzle: drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(DrizzleContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, drizzleContext => {\n    const {\n      drizzle,\n      drizzleState,\n      initialized\n    } = drizzleContext;\n\n    if (!initialized) {\n      return __jsx(Loader, {\n        size: \"30px\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const contract = drizzle.contracts.UserStorage;\n    const account = drizzleState.accounts[0]; //const dataKey = contract.methods['addresses'].cacheCall(account);\n\n    const IsMem = async () => {\n      const value = await drizzle.contracts.UserStorage.methods.addresses(account).call();\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }\n      }, `${value}`);\n    };\n\n    console.log(IsMem); // return (\n    //   <ContractData drizzle={drizzle} \n    //     drizzleState={drizzleState} \n    //     contract=\"UserStorage\" \n    //     method=\"addresses\" \n    //     methodArgs={[drizzleState.accounts[0]]}\n    //   />\n    //)\n  }));\n};\n\nexport default AccountsContainer;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AccountsContainer.js"],"names":["React","UserInfo","MyAddBar","DrizzleContext","newContextComponents","Drizzle","options","Loader","JoinButton","ContractData","drizzle","AccountsContainer","drizzleContext","drizzleState","initialized","contract","contracts","UserStorage","account","accounts","IsMem","value","methods","addresses","call","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAUC,MAAV,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAmBL,oBAAzB;AACA,MAAMM,OAAO,GAAG,IAAIL,OAAJ,CAAYC,OAAZ,CAAhB;;AAEA,MAAMK,iBAAiB,GAAG,MAAM;AAE9B,SACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,OAAO,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,IAAI;AACjB,UAAM;AAACF,MAAAA,OAAD;AAAUG,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,QAAwCF,cAA9C;;AAEA,QAAG,CAACE,WAAJ,EAAiB;AACf,aAAO,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,UAAMC,QAAQ,GAAGL,OAAO,CAACM,SAAR,CAAkBC,WAAnC;AACA,UAAMC,OAAO,GAAGL,YAAY,CAACM,QAAb,CAAsB,CAAtB,CAAhB,CARiB,CASjB;;AAEA,UAAMC,KAAK,GAAG,YAAY;AAC1B,YAAMC,KAAK,GAAG,MAAMX,OAAO,CAACM,SAAR,CAAkBC,WAAlB,CAA8BK,OAA9B,CAAsCC,SAAtC,CAAgDL,OAAhD,EAAyDM,IAAzD,EAApB;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,GAAEH,KAAM,EAAf,CAAP;AACC,KAHD;;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAfiB,CAiBX;AACA;AACA;AACA;AACA;AACA;AAEA;AAEE;AAUT,GArCH,CADF,CADF;AA4CD,CA9CD;;AA+CA,eAAeT,iBAAf","sourcesContent":["import React from \"react\";\r\nimport UserInfo from \"./UserInfo\"; \r\nimport MyAddBar from \"./AddressBar.js\"; \r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { newContextComponents } from \"@drizzle/react-components\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport options from \"./drizzleOptions\";\r\nimport {  Loader } from 'rimble-ui';\r\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\r\n\r\nconst { ContractData } = newContextComponents;\r\nconst drizzle = new Drizzle(options);\r\n\r\nconst AccountsContainer = () => {\r\n \r\n  return  (\r\n    <DrizzleContext.Provider drizzle={drizzle}>\r\n      <DrizzleContext.Consumer>\r\n        {drizzleContext => {\r\n          const {drizzle, drizzleState, initialized } = drizzleContext;\r\n\r\n          if(!initialized) {\r\n            return <Loader size=\"30px\" color=\"white\" />\r\n          }\r\n\r\n          const contract = drizzle.contracts.UserStorage;\r\n          const account = drizzleState.accounts[0];\r\n          //const dataKey = contract.methods['addresses'].cacheCall(account);\r\n          \r\n          const IsMem = async () => {\r\n          const value = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n          return <div>{`${value}`}</div>\r\n          }\r\n          console.log(IsMem);\r\n\r\n                // return (\r\n                //   <ContractData drizzle={drizzle} \r\n                //     drizzleState={drizzleState} \r\n                //     contract=\"UserStorage\" \r\n                //     method=\"addresses\" \r\n                //     methodArgs={[drizzleState.accounts[0]]}\r\n                  \r\n                //   />\r\n\r\n                  //)\r\n              \r\n            \r\n            \r\n          \r\n          \r\n            \r\n          \r\n     \r\n\r\n        }}\r\n      </DrizzleContext.Consumer>\r\n    </DrizzleContext.Provider>\r\n);\r\n  \r\n}\r\nexport default AccountsContainer;"]},"metadata":{},"sourceType":"module"}