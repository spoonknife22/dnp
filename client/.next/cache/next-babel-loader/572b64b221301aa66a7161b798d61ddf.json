{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\ProposalForm.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // import {Col, Button} from 'react-bootstrap'\n\nimport { Col } from \"shards-react\";\nimport { toast } from 'react-toastify';\nimport NominationButton from '../buttons/NominateButton';\nimport ProposalAddress from '../ProposalAddress';\n\nconst ProposalForm = ({\n  drizzle,\n  drizzleState,\n  props,\n  propAddress,\n  tokenId,\n  assetPrice\n}) => {\n  // <ProposalAddress drizzle={drizzle} drizzleState={drizzleState} tokenIdState={tokenId} />\n  const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(\"\".concat(tokenId));\n  const ProposalController = drizzleState.contracts.ProposalController;\n  const displayData = ProposalController.getPropTokenIdMap[\"\".concat(dataKey)];\n  const proposalAddress = displayData && displayData.value;\n  {\n    console.log(tokenId, proposalAddress);\n  }\n\n  const nominateAsset = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(values) {\n      var text, reSalePrice, listPrice, account, memberBool, user, userId, contract;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            text = values.text, reSalePrice = values.reSalePrice;\n            listPrice = assetPrice;\n            account = drizzleState.accounts[0];\n            _context.next = 5;\n            return drizzle.contracts.UserStorage.methods.addresses(account).call();\n\n          case 5:\n            memberBool = _context.sent;\n\n            if (!memberBool) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 9;\n            return drizzle.contracts.UserStorage.methods.profiles(account).call();\n\n          case 9:\n            user = _context.sent;\n            userId = user.userId;\n            _context.next = 13;\n            return drizzle.contracts.ProposalController;\n\n          case 13:\n            contract = _context.sent;\n            _context.prev = 14;\n            contract.methods[\"createProposal\"].cacheSend(userId, listPrice, reSalePrice, text, tokenId);\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](14);\n            return _context.abrupt(\"return\", toast.error(\"Sorry, we couldn't create asset nomination: \".concat(_context.t0), {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 21:\n            _context.next = 24;\n            break;\n\n          case 23:\n            return _context.abrupt(\"return\", toast.warning(\"Join the Consortium and nominate this asset\", {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[14, 18]]);\n    }));\n\n    return function nominateAsset(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  let yup = require('yup');\n\n  const schema = yup.object({\n    text: yup.string().max(100, 'To many characters').required('Required'),\n    reSalePrice: yup.number().typeError(\"Must be a number\").moreThan(2000, 'Must be more than current price.').required('Required'),\n    termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\n  });\n\n  if (propAddress === null) {\n    return __jsx(React.Fragment, null, __jsx(Formik, {\n      initialValues: {\n        text: '',\n        reSalePrice: '',\n        termsOfService: false\n      },\n      validationSchema: schema,\n      onSubmit: (values, actions) => {\n        nominateAsset(values);\n        actions.resetForm();\n        addReview(values);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      errors\n    }) => __jsx(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"validationFormik01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Pitch\"), __jsx(Form.Control, {\n      type: \"text\",\n      as: \"textarea\",\n      rows: 3,\n      name: \"text\",\n      placeholder: \"100 Character Max\",\n      value: values.text,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: values.text,\n      isInvalid: touched.text && !!errors.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, errors.text)), __jsx(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Resale Price\"), __jsx(Form.Control, {\n      type: \"text\",\n      name: \"reSalePrice\",\n      placeholder: \"Resale Price\",\n      value: values.reSalePrice,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: touched.reSalePrice && !!errors.reSalePrice,\n      isValid: values.reSalePrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, errors.reSalePrice))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Check, {\n      required: true,\n      name: \"termsOfService\",\n      label: \"Agree to terms and conditions\",\n      onChange: handleChange,\n      isInvalid: !!errors.termsOfService,\n      feedback: errors.termsOfService,\n      id: \"validationFormik0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })), __jsx(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, __jsx(NominationButton, {\n      props: props,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    })))));\n  } else {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, propAddress);\n  }\n};\n\nconst mapStateToProps = state => ({\n  propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, null)(ProposalForm); //export default ProposalForm;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/ProposalForm.js"],"names":["React","useState","useEffect","Modal","connect","Form","Formik","Yup","Col","toast","NominationButton","ProposalAddress","ProposalForm","drizzle","drizzleState","props","propAddress","tokenId","assetPrice","dataKey","contracts","ProposalController","methods","cacheCall","displayData","getPropTokenIdMap","proposalAddress","value","console","log","nominateAsset","values","text","reSalePrice","listPrice","account","accounts","UserStorage","addresses","call","memberBool","profiles","user","userId","contract","cacheSend","error","position","POSITION","TOP_RIGHT","warning","yup","require","schema","object","string","max","required","number","typeError","moreThan","termsOfService","bool","oneOf","actions","resetForm","addReview","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Formik} from 'formik';\r\nimport  * as Yup from 'yup';\r\n// import {Col, Button} from 'react-bootstrap'\r\nimport { Col } from \"shards-react\";\r\nimport { toast } from 'react-toastify';\r\nimport NominationButton from '../buttons/NominateButton';\r\nimport ProposalAddress from '../ProposalAddress';\r\n\r\n      \r\n\r\n\r\nconst ProposalForm = ({ drizzle, drizzleState, props, propAddress, tokenId, assetPrice }) => {\r\n  \r\n  // <ProposalAddress drizzle={drizzle} drizzleState={drizzleState} tokenIdState={tokenId} />\r\n  const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(`${tokenId}`);   \r\n  const { ProposalController } = drizzleState.contracts;\r\n  const displayData = ProposalController.getPropTokenIdMap[`${dataKey}`];\r\n  const proposalAddress =  displayData && displayData.value;\r\n  {console.log(tokenId, proposalAddress)}\r\n\r\n  const nominateAsset = async (values) => {\r\n      \r\n    const { text, reSalePrice } = values;\r\n    const listPrice = assetPrice;\r\n    const account = drizzleState.accounts[0];\r\n    const memberBool = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n   \r\n    if(memberBool) {\r\n      const user = await drizzle.contracts.UserStorage.methods.profiles(account).call();\r\n      const { userId } = user;\r\n      const contract = await drizzle.contracts.ProposalController;\r\n    try {\r\n      contract.methods[\"createProposal\"].cacheSend(userId, listPrice, reSalePrice, text, tokenId );\r\n \r\n    } catch (err) {\r\n        return toast.error(`Sorry, we couldn't create asset nomination: ${err}`,{ position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n    else {\r\n      return toast.warning( `Join the Consortium and nominate this asset`, { position: toast.POSITION.TOP_RIGHT });\r\n  }\r\n}\r\n\r\n\r\nlet yup = require('yup');\r\nconst schema = yup.object({\r\n  text: yup.string()\r\n  .max(100, 'To many characters')\r\n  .required('Required'),\r\n  reSalePrice: yup.number()\r\n  .typeError(\"Must be a number\")\r\n  .moreThan(2000, 'Must be more than current price.')\r\n  .required('Required'),\r\n  termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\n\r\n\r\nif(propAddress === null ) {\r\nreturn (   \r\n    <> \r\n      <Formik\r\n        initialValues={{\r\n        text: '',\r\n        reSalePrice: '',\r\n        termsOfService:false,\r\n        }}\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n        nominateAsset(values);\r\n        actions.resetForm();\r\n        addReview(values);\r\n      }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n                <Form.Label>Pitch</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  as=\"textarea\" \r\n                  rows={3}\r\n                  name=\"text\"\r\n                  placeholder='100 Character Max'\r\n                  value={values.text}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={values.text}\r\n                  isInvalid={touched.text && !!errors.text}\r\n                  />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.text}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                <Form.Label>Resale Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\" \r\n                  name=\"reSalePrice\"\r\n                  placeholder=\"Resale Price\"\r\n                  value={values.reSalePrice}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.reSalePrice && !!errors.reSalePrice}\r\n                  isValid={values.reSalePrice}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">  \r\n                {errors.reSalePrice}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Group>\r\n              <Form.Check\r\n                required\r\n                name=\"termsOfService\"\r\n                label=\"Agree to terms and conditions\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.termsOfService}\r\n                feedback={errors.termsOfService}\r\n                id=\"validationFormik0\"\r\n              />\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n              <NominationButton props={props} tokenId={tokenId} />\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );   \r\n        }\r\n        \r\n        else{\r\n          return (\r\n          <div>\r\n         {propAddress}\r\n          </div>\r\n          )\r\n        }\r\n} \r\n\r\n  const mapStateToProps = (state) => ({\r\n    propAddress: state.appReducers.propAddress,\r\n  })\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n  });\r\n        \r\n        \r\nexport default connect(mapStateToProps, null)(ProposalForm);\r\n\r\n    //export default ProposalForm;      "]},"metadata":{},"sourceType":"module"}