{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\InitialContibModal.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ContributeInnerModal from './ContributeInnerModal.js';\nimport ProposalStorageAbi from '../../artifacts/contracts/ProposalStorageAbi.json';\n\nclass InitialContributeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newAbi: null\n    };\n  }\n\n  componentDidMount() {\n    const getPropAbi = this.props.getPropAbi;\n    getPropAbi(ProposalStorageAbi);\n  }\n\n  render() {\n    //const newAbi = this.state.newAbi\n    return __jsx(ContributeInnerModal, {\n      propAddress: this.props.propAddress,\n      userManaBalance: this.props.userManaBalance,\n      assetPrice: this.props.assetPrice,\n      drizzleState: this.props.drizzleState,\n      drizzle: this.props.drizzle,\n      tokenId: this.props.tokenId,\n      props: this.props //newAbi= {newAbi}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({//propStorageAbi: state.appReducers.newAbi\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPropAbi: ProposalStorageAbi => dispatch({\n    type: \"GOT_PROP_ABI\",\n    proposalStorageAbi: ProposalStorageAbi\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialContributeModal);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/InitialContibModal.js"],"names":["React","Component","useEffect","useState","connect","ContributeInnerModal","ProposalStorageAbi","InitialContributeModal","constructor","props","state","newAbi","componentDidMount","getPropAbi","render","propAddress","userManaBalance","assetPrice","drizzleState","drizzle","tokenId","mapStateToProps","mapDispatchToProps","dispatch","type","proposalStorageAbi"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,kBAAP,MAA+B,mDAA/B;;AAGA,MAAMC,sBAAN,SAAqCN,SAArC,CAA+C;AAC7CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAC;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,UADU,GACK,KAAKJ,KADV,CACVI,UADU;AAElBA,IAAAA,UAAU,CAACP,kBAAD,CAAV;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACR;AACC,WAEA,MAAC,oBAAD;AACE,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAD1B;AAEE,MAAA,eAAe,EAAE,KAAKN,KAAL,CAAWO,eAF9B;AAGE,MAAA,UAAU,EAAE,KAAKP,KAAL,CAAWQ,UAHzB;AAIE,MAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YAJ3B;AAKE,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,OALtB;AAME,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,OANtB;AAOE,MAAA,KAAK,EAAI,KAAKX,KAPhB,CAQE;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA;AAaD;;AA5B4C;;AAiC/C,MAAMY,eAAe,GAAIX,KAAD,KAAY,CAClC;AADkC,CAAZ,CAAxB;;AAIA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,UAAU,EAAGP,kBAAD,IAAyBiB,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,kBAAkB,EAACnB;AAA3C,GAAD;AADL,CAAf,CAA3B;;AAMA,eAAeF,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cf,sBAA7C,CAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContributeInnerModal from './ContributeInnerModal.js';\r\nimport ProposalStorageAbi from '../../artifacts/contracts/ProposalStorageAbi.json';\r\n\r\n   \r\nclass InitialContributeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newAbi:null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {   \r\n    const { getPropAbi } = this.props;\r\n    getPropAbi(ProposalStorageAbi)\r\n  }\r\n  \r\n  render() {\r\n   //const newAbi = this.state.newAbi\r\n    return (\r\n    \r\n    <ContributeInnerModal\r\n      propAddress={this.props.propAddress} \r\n      userManaBalance={this.props.userManaBalance}\r\n      assetPrice={this.props.assetPrice} \r\n      drizzleState={this.props.drizzleState} \r\n      drizzle={this.props.drizzle} \r\n      tokenId={this.props.tokenId} \r\n      props = {this.props}\r\n      //newAbi= {newAbi}\r\n    />\r\n    )\r\n  }\r\n  \r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //propStorageAbi: state.appReducers.newAbi\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getPropAbi: (ProposalStorageAbi) =>  dispatch({ type: \"GOT_PROP_ABI\", proposalStorageAbi:ProposalStorageAbi })\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialContributeModal);"]},"metadata":{},"sourceType":"module"}