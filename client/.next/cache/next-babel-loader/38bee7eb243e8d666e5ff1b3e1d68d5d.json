{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ForSaleModal.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport NominationForm from '../forms/NominationForm';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\nimport ProposalForm from '../forms/ProposalForm';\nimport { Loader } from 'rimble-ui';\n\nconst ForSaleModal = ({\n  drizzle,\n  propAddress,\n  assetPrice\n}) => {\n  //const tokenId = parcel.parcel.tokenId;\n  const _useState = useState([]),\n        deposits = _useState[0],\n        setDespositInfo = _useState[1];\n\n  const _useState2 = useState(false),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  console.log(deposits);\n  useEffect(() => {\n    fetchProposalInfo();\n  }, []);\n\n  const fetchProposalInfo = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var state, proposalContract, depositInfoLength, i, depositInfo;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            state = drizzle.store.getState();\n\n            if (!state.drizzleStatus.initialized) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 4;\n            return drizzle.contracts[\"\".concat(propAddress)];\n\n          case 4:\n            proposalContract = _context.sent;\n            _context.next = 7;\n            return proposalContract.methods.countDepositers().call();\n\n          case 7:\n            depositInfoLength = _context.sent;\n            i = 0;\n\n          case 9:\n            if (!(i < depositInfoLength)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 12;\n            return proposalContract.methods.depositers([i]).call();\n\n          case 12:\n            depositInfo = _context.sent;\n            // setDespositInfo([{\n            //   amount: depositInfo.amount,\n            //   address: depositInfo.depositer\n            // }]);\n            //console.log(depositInfo)\n            setDespositInfo(depositInfo); //console.log(depositInfo);\n\n          case 14:\n            i++;\n            _context.next = 9;\n            break;\n\n          case 17:\n            return _context.abrupt(\"return\", 'Loading....');\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalInfo() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //const proposalContract = await drizzle.contracts[`${propAddress}`];\n  // const contractData = await proposalContract.methods.proposals(`${tokenId}`).call();\n  // const { listPrice, balance, expiresAt } = contractData;\n  // const depositAmount = await proposalContract.methods.depositedAmount(drizzleState.accounts[0]).call();\n  // const proposalContract = drizzle.contracts[`${propAddress}`];\n\n\n  return __jsx(React.Fragment, null, propAddress ? //  {[assetData.asset].map((sub)=> \n  __jsx(\"div\", {\n    className: \"jsx-799425733\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }) // <ProposalForm                  \n  //   assetPrice={parcel.activeOrder.price}\n  //   expiresAt={parcel.activeOrder.expiresAt}  \n  //   nftAddress={parcel.activeOrder.nftAddress}  \n  //   props={props}\n  //   drizzle={drizzle}\n  //   drizzleState={drizzleState}\n  //   tokenId={tokenId}\n  //   userManaBalance={userManaBalance}\n  // /> \n  : __jsx(\"div\", {\n    className: \"jsx-799425733\" + \" \" + \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(Loader, {\n    className: \"mx-auto\",\n    color: \"#007bff\",\n    size: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"799425733\",\n    __self: this\n  }, \".current-price-title.jsx-799425733{font-size:1.3rem;}.nomintation-modal.jsx-799425733{font-family:Poppins;}.card-footer-btn.jsx-799425733{background:#17c671;color:#ffffff;}.btn-lg.jsx-799425733{border-radius:0rem;border-top-left-radius:0rem;border-top-right-radius:0rem;border-bottom-right-radius:.5rem;border-bottom-left-radius:.5rem;}.card-footer-btn.jsx-799425733:hover{background:#e6e6e6;color:#000000;}.mana-balance.jsx-799425733{font-size:.9rem;color:#000;font-weight:200;text-align:left;}.amount-number.jsx-799425733{font-family:Poppins;color:#66a3ff;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxjb21wb25lbnRzXFxtb2RhbHNcXEZvclNhbGVNb2RhbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnR1csQUFFbUQsQUFDRSxBQUNKLEFBQ1IsQUFLYyxBQUNaLEFBQ0ssZ0JBREssQ0FURCxFQUVVLEFBRWpCLEFBSXVCLENBUGQsQUFTTyxPQURRLE1BUE4sQUFNTSxDQUVQLFNBRHFCLElBSnJDLFlBSXNDLGlCQUhsQyxpQ0FDRCxnQ0FBQyIsImZpbGUiOiJDOlxcVXNlcnNcXFNhbXN1bmdcXGNvZGVcXGNhY3BcXGNsaWVudFxcY29tcG9uZW50c1xcbW9kYWxzXFxGb3JTYWxlTW9kYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgIFxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IE1vZGFsIGZyb20gJ3JlYWN0LWJvb3RzdHJhcC9Nb2RhbCc7XHJcbmltcG9ydCBOb21pbmF0aW9uRm9ybSBmcm9tICcuLi9mb3Jtcy9Ob21pbmF0aW9uRm9ybSc7XHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCBXZWIzIGZyb20gJ3dlYjMnO1xyXG5pbXBvcnQgUHJvcG9zYWxGb3JtIGZyb20gJy4uL2Zvcm1zL1Byb3Bvc2FsRm9ybSc7XHJcbmltcG9ydCB7IExvYWRlciB9IGZyb20gJ3JpbWJsZS11aSc7XHJcblxyXG5jb25zdCBGb3JTYWxlTW9kYWwgPSAoeyBkcml6emxlLCBwcm9wQWRkcmVzcywgYXNzZXRQcmljZSB9KSA9PiB7XHJcbiAgXHJcbiAgLy9jb25zdCB0b2tlbklkID0gcGFyY2VsLnBhcmNlbC50b2tlbklkO1xyXG5cclxuICBjb25zdCBbZGVwb3NpdHMsIHNldERlc3Bvc2l0SW5mb10gPSB1c2VTdGF0ZShbXSk7XHJcbiAgY29uc3QgW3Nob3csIHNldFNob3ddID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IGhhbmRsZVNob3cgPSAoKSA9PiBzZXRTaG93KHRydWUpO1xyXG4gIGNvbnN0IGhhbmRsZUNsb3NlID0gKCkgPT4gc2V0U2hvdyhmYWxzZSk7XHJcblxyXG4gIGNvbnNvbGUubG9nKGRlcG9zaXRzKVxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBmZXRjaFByb3Bvc2FsSW5mbygpO1xyXG4gIH0sIFtdKVxyXG5cclxuICBjb25zdCBmZXRjaFByb3Bvc2FsSW5mbyA9IGFzeW5jICgpID0+IHsgXHJcbiAgICBsZXQgc3RhdGUgPSBkcml6emxlLnN0b3JlLmdldFN0YXRlKClcclxuICAgIGlmKHN0YXRlLmRyaXp6bGVTdGF0dXMuaW5pdGlhbGl6ZWQpe1xyXG4gICAgY29uc3QgcHJvcG9zYWxDb250cmFjdCA9IGF3YWl0IGRyaXp6bGUuY29udHJhY3RzW2Ake3Byb3BBZGRyZXNzfWBdO1xyXG4gICAgY29uc3QgZGVwb3NpdEluZm9MZW5ndGggPSBhd2FpdCBwcm9wb3NhbENvbnRyYWN0Lm1ldGhvZHMuY291bnREZXBvc2l0ZXJzKCkuY2FsbCgpO1xyXG5cclxuICAgIHZhciBpO1xyXG4gICAgZm9yIChpID0gMDsgaSA8IGRlcG9zaXRJbmZvTGVuZ3RoOyBpKyspIHtcclxuICAgICAgY29uc3QgZGVwb3NpdEluZm8gPSBhd2FpdCBwcm9wb3NhbENvbnRyYWN0Lm1ldGhvZHMuZGVwb3NpdGVycyhbaV0pLmNhbGwoKTtcclxuICAgICAgLy8gc2V0RGVzcG9zaXRJbmZvKFt7XHJcbiAgICAgIC8vICAgYW1vdW50OiBkZXBvc2l0SW5mby5hbW91bnQsXHJcbiAgICAgIC8vICAgYWRkcmVzczogZGVwb3NpdEluZm8uZGVwb3NpdGVyXHJcbiAgICAgIC8vIH1dKTtcclxuICAgICAgLy9jb25zb2xlLmxvZyhkZXBvc2l0SW5mbylcclxuICAgICAgc2V0RGVzcG9zaXRJbmZvKGRlcG9zaXRJbmZvKTtcclxuICAgXHJcbiAgICAgIC8vY29uc29sZS5sb2coZGVwb3NpdEluZm8pO1xyXG4gICAgIFxyXG4gICAgfVxyXG5cclxuICAgIH1cclxuICAgcmV0dXJuICdMb2FkaW5nLi4uLidcclxuXHJcbiAgfVxyXG5cclxuICBcclxuXHJcbiAgLy9jb25zdCBwcm9wb3NhbENvbnRyYWN0ID0gYXdhaXQgZHJpenpsZS5jb250cmFjdHNbYCR7cHJvcEFkZHJlc3N9YF07XHJcblxyXG4gIC8vIGNvbnN0IGNvbnRyYWN0RGF0YSA9IGF3YWl0IHByb3Bvc2FsQ29udHJhY3QubWV0aG9kcy5wcm9wb3NhbHMoYCR7dG9rZW5JZH1gKS5jYWxsKCk7XHJcbiAgLy8gY29uc3QgeyBsaXN0UHJpY2UsIGJhbGFuY2UsIGV4cGlyZXNBdCB9ID0gY29udHJhY3REYXRhO1xyXG4gIC8vIGNvbnN0IGRlcG9zaXRBbW91bnQgPSBhd2FpdCBwcm9wb3NhbENvbnRyYWN0Lm1ldGhvZHMuZGVwb3NpdGVkQW1vdW50KGRyaXp6bGVTdGF0ZS5hY2NvdW50c1swXSkuY2FsbCgpO1xyXG4gIC8vIGNvbnN0IHByb3Bvc2FsQ29udHJhY3QgPSBkcml6emxlLmNvbnRyYWN0c1tgJHtwcm9wQWRkcmVzc31gXTtcclxuXHJcblxyXG5cclxuIFxyXG5yZXR1cm4gKCAgIFxyXG4gICAgICA8PiAgIFxyXG4gIFxyXG4gICAgICAgIHsvKiA8TW9kYWwgY2xhc3NOYW1lPVwibm9taW50YXRpb24tbW9kYWxcIiBzaG93PXtzaG93fSBvbkhpZGU9e2hhbmRsZUNsb3NlfT5cclxuICAgICAgICA8ZGl2PiB7ZGVwb3NpdHN9YmJiYmJiYmI8L2Rpdj4gICAgXHJcbiAgICAgICAgICA8TW9kYWwuQm9keSBjbGFzc05hbWU9XCJwdC0xIGFsaWduLWl0ZW1zLWNlbnRlclwiPiAqL31cclxuICAgICAgICAgIHtwcm9wQWRkcmVzcyA/ICAgXHJcbi8vICB7W2Fzc2V0RGF0YS5hc3NldF0ubWFwKChzdWIpPT4gXHJcblxyXG4gICAgICAgIDxkaXY+IFxyXG4gICAgICAgey8qIHtkZXBvc2l0cy5hbW91bnR9ICovfVxyXG4gICAgICAgICAgey8qIHtkZXBvc2l0cy5tYXAoKGRlcG9zaXQpID0+IHtcclxuICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICA8bGk+e2RlcG9zaXQuYW1vdW50fTwvbGk+XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICB9KX0gKi99XHJcblxyXG4gICAgICAgICAgPC9kaXY+ICAgIFxyXG4gICAgICAgICAgICAvLyA8UHJvcG9zYWxGb3JtICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vICAgYXNzZXRQcmljZT17cGFyY2VsLmFjdGl2ZU9yZGVyLnByaWNlfVxyXG4gICAgICAgICAgICAvLyAgIGV4cGlyZXNBdD17cGFyY2VsLmFjdGl2ZU9yZGVyLmV4cGlyZXNBdH0gIFxyXG4gICAgICAgICAgICAvLyAgIG5mdEFkZHJlc3M9e3BhcmNlbC5hY3RpdmVPcmRlci5uZnRBZGRyZXNzfSAgXHJcbiAgICAgICAgICAgIC8vICAgcHJvcHM9e3Byb3BzfVxyXG4gICAgICAgICAgICAvLyAgIGRyaXp6bGU9e2RyaXp6bGV9XHJcbiAgICAgICAgICAgIC8vICAgZHJpenpsZVN0YXRlPXtkcml6emxlU3RhdGV9XHJcbiAgICAgICAgICAgIC8vICAgdG9rZW5JZD17dG9rZW5JZH1cclxuICAgICAgICAgICAgLy8gICB1c2VyTWFuYUJhbGFuY2U9e3VzZXJNYW5hQmFsYW5jZX1cclxuICAgICAgICAgICAgLy8gLz4gXHJcbiAgICAgICAgICA6XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWxpZ24taXRlbXMtY2VudGVyXCI+ICAgXHJcbiAgICAgICAgICAgICAgPExvYWRlciBjbGFzc05hbWU9XCJteC1hdXRvXCIgY29sb3I9XCIjMDA3YmZmXCIgc2l6ZT1cIjQwcHhcIiAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIH0gXHJcbiAgICAgICAgICB7LyogPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDwvTW9kYWw+ICovfVxyXG4gICAgICAgIDxzdHlsZSBqc3g+XHJcbiAgICAgICAgICB7YCBcclxuICAgICAgICAgICAgICAuY3VycmVudC1wcmljZS10aXRsZXtmb250LXNpemU6MS4zcmVtO31cclxuICAgICAgICAgICAgICAubm9taW50YXRpb24tbW9kYWx7Zm9udC1mYW1pbHk6IFBvcHBpbnM7fVxyXG4gICAgICAgICAgICAgIC5jYXJkLWZvb3Rlci1idG57YmFja2dyb3VuZDojMTdjNjcxO2NvbG9yOiNmZmZmZmY7fVxyXG4gICAgICAgICAgICAgIC5idG4tbGd7Ym9yZGVyLXJhZGl1czogMHJlbTtcclxuICAgICAgICAgICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDByZW07XHJcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMHJlbTtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAuNXJlbTtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IC41cmVtO31cclxuICAgICAgICAgICAgICAuY2FyZC1mb290ZXItYnRuOmhvdmVye2JhY2tncm91bmQ6I2U2ZTZlNjtjb2xvcjojMDAwMDAwO31cclxuICAgICAgICAgICAgICAubWFuYS1iYWxhbmNle2ZvbnQtc2l6ZTouOXJlbTtjb2xvcjojMDAwO2ZvbnQtd2VpZ2h0OiAyMDA7dGV4dC1hbGlnbjpsZWZ0fVxyXG4gICAgICAgICAgICAgIC5hbW91bnQtbnVtYmVye2ZvbnQtZmFtaWx5OlBvcHBpbnM7Y29sb3I6IzY2YTNmZjt9XHJcbiAgICAgICAgICBgfSAgICAgICAgICAgICAgICBcclxuICAgICAgICA8L3N0eWxlPlxyXG4gICAgICA8Lz5cclxuICAgICAgICApOyAgICBcclxuICAgICAgfSBcclxuXHJcbi8vICAgICAgIGNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4gKHtcclxuLy8gICAgICAgICBwcm9wQWRkcmVzczogc3RhdGUuYXBwUmVkdWNlcnMucHJvcEFkZHJlc3MsXHJcbi8vICAgICAgICAgcHJvcG9zYWxTdG9yYWdlOiBzdGF0ZS5hcHBSZWR1Y2Vycy5wcm9wb3NhbFN0b3JhZ2VcclxuLy8gICAgICAgfSlcclxuICAgICAgICAgICBcclxuLy8gICAgICAgY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gKGRpc3BhdGNoKSA9PiAoe1xyXG4vLyAgICAgICAgIGdldFRva2VuSWQ6ICh0b2tlbklkKSA9PiAgZGlzcGF0Y2goeyB0eXBlOiBcIlNFVF9UT0tFTl9JRFwiLCB0b2tlbklkOnRva2VuSWQgfSksXHJcbi8vICAgICAgICAgLy9nZXROZnRBZGRyZXNzOiAobmZ0QWRkcmVzcykgPT4gIGRpc3BhdGNoKHsgdHlwZTogXCJTRVRfTmZ0QWRkcmVzc1wiLCBOZnRBZGRyZXNzOm5mdEFkZHJlc3MgfSksXHJcbi8vICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4vLyBleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShGb3JTYWxlTW9kYWwpO1xyXG5leHBvcnQgZGVmYXVsdCBGb3JTYWxlTW9kYWw7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Samsung\\\\\\\\code\\\\\\\\cacp\\\\\\\\client\\\\\\\\components\\\\\\\\modals\\\\\\\\ForSaleModal.js */\"));\n}; //       const mapStateToProps = (state) => ({\n//         propAddress: state.appReducers.propAddress,\n//         proposalStorage: state.appReducers.proposalStorage\n//       })\n//       const mapDispatchToProps = (dispatch) => ({\n//         getTokenId: (tokenId) =>  dispatch({ type: \"SET_TOKEN_ID\", tokenId:tokenId }),\n//         //getNftAddress: (nftAddress) =>  dispatch({ type: \"SET_NftAddress\", NftAddress:nftAddress }),\n//       });\n// export default connect(mapStateToProps, mapDispatchToProps)(ForSaleModal);\n\n\nexport default ForSaleModal;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ForSaleModal.js"],"names":["React","useState","useEffect","Modal","NominationForm","connect","Web3","ProposalForm","Loader","ForSaleModal","drizzle","propAddress","assetPrice","deposits","setDespositInfo","show","setShow","handleShow","handleClose","console","log","fetchProposalInfo","state","store","getState","drizzleStatus","initialized","contracts","proposalContract","methods","countDepositers","call","depositInfoLength","i","depositers","depositInfo"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA;AAAxB,CAAD,KAA0C;AAE7D;AAF6D,oBAIzBX,QAAQ,CAAC,EAAD,CAJiB;AAAA,QAItDY,QAJsD;AAAA,QAI5CC,eAJ4C;;AAAA,qBAKrCb,QAAQ,CAAC,KAAD,CAL6B;AAAA,QAKtDc,IALsD;AAAA,QAKhDC,OALgD;;AAM7D,QAAMC,UAAU,GAAG,MAAMD,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAME,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC;;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,iBAAiB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,KADoB,GACZZ,OAAO,CAACa,KAAR,CAAcC,QAAd,EADY;;AAAA,iBAErBF,KAAK,CAACG,aAAN,CAAoBC,WAFC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGOhB,OAAO,CAACiB,SAAR,WAAqBhB,WAArB,EAHP;;AAAA;AAGlBiB,YAAAA,gBAHkB;AAAA;AAAA,mBAIQA,gBAAgB,CAACC,OAAjB,CAAyBC,eAAzB,GAA2CC,IAA3C,EAJR;;AAAA;AAIlBC,YAAAA,iBAJkB;AAOnBC,YAAAA,CAAC,GAAG,CAPe;;AAAA;AAAA,kBAOZA,CAAC,GAAGD,iBAPQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQIJ,gBAAgB,CAACC,OAAjB,CAAyBK,UAAzB,CAAoC,CAACD,CAAD,CAApC,EAAyCF,IAAzC,EARJ;;AAAA;AAQhBI,YAAAA,WARgB;AAStB;AACA;AACA;AACA;AACA;AACArB,YAAAA,eAAe,CAACqB,WAAD,CAAf,CAdsB,CAgBtB;;AAhBsB;AAOWF,YAAAA,CAAC,EAPZ;AAAA;AAAA;;AAAA;AAAA,6CAqBlB,aArBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBZ,iBAAiB;AAAA;AAAA;AAAA,KAAvB,CAd6D,CAyC7D;AAEA;AACA;AACA;AACA;;;AAKF,SACM,4BAKKV,WAAW,GACtB;AAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHc,CAYV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBU,IAuBV;AAAA,uCAAe,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BN;AAAA;AAAA;AAAA,mxOADN;AAoDO,CAvGP,C,CAyGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;AACA,eAAeF,YAAf","sourcesContent":["  \r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport NominationForm from '../forms/NominationForm';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from 'web3';\r\nimport ProposalForm from '../forms/ProposalForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ForSaleModal = ({ drizzle, propAddress, assetPrice }) => {\r\n  \r\n  //const tokenId = parcel.parcel.tokenId;\r\n\r\n  const [deposits, setDespositInfo] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n\r\n  console.log(deposits)\r\n  useEffect(() => {\r\n    fetchProposalInfo();\r\n  }, [])\r\n\r\n  const fetchProposalInfo = async () => { \r\n    let state = drizzle.store.getState()\r\n    if(state.drizzleStatus.initialized){\r\n    const proposalContract = await drizzle.contracts[`${propAddress}`];\r\n    const depositInfoLength = await proposalContract.methods.countDepositers().call();\r\n\r\n    var i;\r\n    for (i = 0; i < depositInfoLength; i++) {\r\n      const depositInfo = await proposalContract.methods.depositers([i]).call();\r\n      // setDespositInfo([{\r\n      //   amount: depositInfo.amount,\r\n      //   address: depositInfo.depositer\r\n      // }]);\r\n      //console.log(depositInfo)\r\n      setDespositInfo(depositInfo);\r\n   \r\n      //console.log(depositInfo);\r\n     \r\n    }\r\n\r\n    }\r\n   return 'Loading....'\r\n\r\n  }\r\n\r\n  \r\n\r\n  //const proposalContract = await drizzle.contracts[`${propAddress}`];\r\n\r\n  // const contractData = await proposalContract.methods.proposals(`${tokenId}`).call();\r\n  // const { listPrice, balance, expiresAt } = contractData;\r\n  // const depositAmount = await proposalContract.methods.depositedAmount(drizzleState.accounts[0]).call();\r\n  // const proposalContract = drizzle.contracts[`${propAddress}`];\r\n\r\n\r\n\r\n \r\nreturn (   \r\n      <>   \r\n  \r\n        {/* <Modal className=\"nomintation-modal\" show={show} onHide={handleClose}>\r\n        <div> {deposits}bbbbbbbb</div>    \r\n          <Modal.Body className=\"pt-1 align-items-center\"> */}\r\n          {propAddress ?   \r\n//  {[assetData.asset].map((sub)=> \r\n\r\n        <div> \r\n       {/* {deposits.amount} */}\r\n          {/* {deposits.map((deposit) => {\r\n            <ul>\r\n            <li>{deposit.amount}</li>\r\n            </ul>\r\n          })} */}\r\n\r\n          </div>    \r\n            // <ProposalForm                  \r\n            //   assetPrice={parcel.activeOrder.price}\r\n            //   expiresAt={parcel.activeOrder.expiresAt}  \r\n            //   nftAddress={parcel.activeOrder.nftAddress}  \r\n            //   props={props}\r\n            //   drizzle={drizzle}\r\n            //   drizzleState={drizzleState}\r\n            //   tokenId={tokenId}\r\n            //   userManaBalance={userManaBalance}\r\n            // /> \r\n          :\r\n            <div className=\"align-items-center\">   \r\n              <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n            </div>\r\n          } \r\n          {/* </Modal.Body>\r\n        </Modal> */}\r\n        <style jsx>\r\n          {` \r\n              .current-price-title{font-size:1.3rem;}\r\n              .nomintation-modal{font-family: Poppins;}\r\n              .card-footer-btn{background:#17c671;color:#ffffff;}\r\n              .btn-lg{border-radius: 0rem;\r\n                border-top-left-radius: 0rem;\r\n                border-top-right-radius: 0rem;\r\n                border-bottom-right-radius: .5rem;\r\n                border-bottom-left-radius: .5rem;}\r\n              .card-footer-btn:hover{background:#e6e6e6;color:#000000;}\r\n              .mana-balance{font-size:.9rem;color:#000;font-weight: 200;text-align:left}\r\n              .amount-number{font-family:Poppins;color:#66a3ff;}\r\n          `}                \r\n        </style>\r\n      </>\r\n        );    \r\n      } \r\n\r\n//       const mapStateToProps = (state) => ({\r\n//         propAddress: state.appReducers.propAddress,\r\n//         proposalStorage: state.appReducers.proposalStorage\r\n//       })\r\n           \r\n//       const mapDispatchToProps = (dispatch) => ({\r\n//         getTokenId: (tokenId) =>  dispatch({ type: \"SET_TOKEN_ID\", tokenId:tokenId }),\r\n//         //getNftAddress: (nftAddress) =>  dispatch({ type: \"SET_NftAddress\", NftAddress:nftAddress }),\r\n//       });\r\n        \r\n        \r\n// export default connect(mapStateToProps, mapDispatchToProps)(ForSaleModal);\r\nexport default ForSaleModal;"]},"metadata":{},"sourceType":"module"}