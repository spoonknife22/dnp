{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\pages\\\\test.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport Footer from '../components/Footer.js';\nimport TestComponent from \"../components/testComponent.js\";\nimport { Button, Container, Card, CardBody } from \"shards-react\";\nimport { Page, Center } from '../components/Layout.js';\nimport { Link } from '../../routes';\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";\nimport { Loader } from 'rimble-ui';\nimport options from \"../EthComponents/drizzleOptions\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nconst themes = {\n  light: {\n    background: 'pink'\n  },\n  dark: {\n    background: 'lavender'\n  }\n}; //const AccordionContext = React.createContext('0');\n\nfunction ContextAwareToggle({\n  props,\n  children,\n  eventKey,\n  callback\n}) {\n  const currentEventKey = useContext(props.AccordionContext);\n  console.log(AccordionContext);\n  const decoratedOnClick = useAccordionToggle(eventKey, () => callback && callback(eventKey));\n  const isCurrentEventKey = currentEventKey === eventKey; //const theme = useContext(AccordionContext);\n\n  return __jsx(\"button\", {\n    type: \"button\",\n    style: {\n      backgroundColor: isCurrentEventKey ? 'pink' : 'green'\n    },\n    onClick: decoratedOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction Example() {\n  return __jsx(AccordionContext.Provider, {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Accordion, {\n    defaultActiveKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(ContextAwareToggle, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Click me!\")), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Hello! I'm the body\"))), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(ContextAwareToggle, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Click me!\")), __jsx(Accordion.Collapse, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Hello! I'm another body\")))));\n} //const decoratedOnClick = useAccordionToggle(eventKey, onClick);\n\n\nexport default class Test extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, __jsx(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __jsx(DrizzleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, drizzleContext => {\n      const {\n        initialized\n      } = drizzleContext;\n\n      if (!initialized) {\n        return __jsx(Loader, {\n          size: \"30px\",\n          color: \"blue\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 36\n          }\n        });\n      }\n\n      return __jsx(Example, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 34\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/pages/test.js"],"names":["React","useContext","Footer","TestComponent","Button","Container","Card","CardBody","Page","Center","Link","DrizzleContext","DrizzleProvider","Loader","options","Accordion","useAccordionToggle","themes","light","background","dark","ContextAwareToggle","props","children","eventKey","callback","currentEventKey","AccordionContext","console","log","decoratedOnClick","isCurrentEventKey","backgroundColor","Example","Test","Component","render","drizzleContext","initialized"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Footer from '../components/Footer.js';\r\nimport TestComponent from \"../components/testComponent.js\";\r\nimport { Button, Container,Card, CardBody  } from \"shards-react\";\r\nimport { Page, Center  } from '../components/Layout.js';\r\nimport { Link } from '../../routes';\r\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";\r\nimport {  Loader } from 'rimble-ui';\r\nimport options from \"../EthComponents/drizzleOptions\";\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\n\r\n\r\nconst themes = {\r\n  light: {   \r\n    background: 'pink'\r\n  },\r\n  dark: {\r\n    background: 'lavender'\r\n  }\r\n};\r\n\r\n//const AccordionContext = React.createContext('0');\r\n\r\n\r\nfunction ContextAwareToggle({props, children, eventKey, callback }) {\r\n  const currentEventKey = useContext(props.AccordionContext);\r\n\r\nconsole.log(AccordionContext)\r\n\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n\r\n  const isCurrentEventKey = currentEventKey === eventKey;\r\n  //const theme = useContext(AccordionContext);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'green' }}\r\n      onClick={decoratedOnClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Example() {\r\n  return (\r\n    <AccordionContext.Provider value=\"0\">\r\n    <Accordion defaultActiveKey=\"0\">\r\n      <Card>\r\n        <div>\r\n          <ContextAwareToggle eventKey=\"0\">Click me!</ContextAwareToggle>\r\n        </div>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n        <CardBody>Hello! I'm the body</CardBody>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n      <Card>\r\n        <div>\r\n          <ContextAwareToggle eventKey=\"1\">Click me!</ContextAwareToggle>\r\n        </div>\r\n        <Accordion.Collapse eventKey=\"1\">\r\n        <CardBody>Hello! I'm another body</CardBody>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n    </AccordionContext.Provider>\r\n  );\r\n}\r\n\r\n//const decoratedOnClick = useAccordionToggle(eventKey, onClick);\r\n\r\nexport default class Test extends React.Component {\r\n\r\nrender() {\r\n    return (    \r\n            <div>\r\n              <Page>\r\n                <Center>\r\n                <DrizzleContext.Consumer>\r\n                      {drizzleContext => {\r\n                    const { initialized } = drizzleContext;\r\n                          if(!initialized) {\r\n                            return <Loader size=\"30px\" color=\"blue\" />\r\n                            }\r\n\r\n                        \r\n                          return <Example />\r\n\r\n                    }\r\n                }  \r\n                </DrizzleContext.Consumer>\r\n                </Center>\r\n              </Page>  \r\n            </div>\r\n       \r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}