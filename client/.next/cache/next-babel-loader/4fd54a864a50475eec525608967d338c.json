{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '../Pagination';\nimport Nominations from '../Nominations';\nimport moment from \"moment\";\nimport Web3 from \"web3\"; //import { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js'\n\nconst InnerAbCard = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2({\n    props,\n    userManaBalance,\n    projectTokenIds,\n    totalTokens\n  }) {\n    var _useState, orders, setOrders, _useState2, loading, setLoading, _useState3, currentPage, setCurrentPage, _useState4, parcelsPerPage, _useState5, totalOrders, setTotalOrders, fetchPosts, indexOfLastParcel, indexOfFirstParcel, currentParcels, paginate;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _s();\n\n          // console.log(projectTokenIds);\n          _useState = useState([]), orders = _useState[0], setOrders = _useState[1];\n          _useState2 = useState(false), loading = _useState2[0], setLoading = _useState2[1];\n          _useState3 = useState(1), currentPage = _useState3[0], setCurrentPage = _useState3[1];\n          _useState4 = useState(6), parcelsPerPage = _useState4[0];\n          _useState5 = useState(), totalOrders = _useState5[0], setTotalOrders = _useState5[1];\n          console.log(orders); //useEffect(() => {\n\n          fetchPosts = /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              var proxyUrl, targetUrl, contractAddress, i, j, artArray, callsPerProject;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.opensea.io/api/v1/assets?';\n                    contractAddress = 'asset_contract_address=0xa7d8d9ef8D8Ce8992Df33D8b8CF4Aebabd5bD270&order_by=token_ids&order_direction=desc&offset=0&limit=50'; //asset_contract_address=0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d&event_type=created&only_opensea=false&offset=0&limit=100\n\n                    artArray = [];\n                    callsPerProject = Math.ceil(totalTokens / 50);\n                    console.log(callsPerProject);\n\n                    for (i = 0; i < callsPerProject; i++) {\n                      //for (j = 0; j < 50; j++) {\n                      // const tokenIdObject = result.data.projects[0].tokens[j];\n                      // artArray.push(tokenIdObject.tokenId)\n                      fetch(targetUrl + contractAddress, {\n                        header: 'x-api-key:2f2a0900458f4bdfbb489680a58e7526'\n                      }).then(res => res.json()).then(result => {\n                        console.log(result.assets[i].id);\n                        artArray.push(...result.assets[i].id);\n                      }, error => {\n                        setLoading(true), error;\n                      }).then(() => {\n                        setOrders(artArray);\n                        setLoading(false);\n                      }, error => {\n                        return error;\n                      }); //}             \n                    }\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n\n            return function fetchPosts() {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n\n          fetchPosts(); //}, []);\n          // Get current posts\n\n          indexOfLastParcel = currentPage * parcelsPerPage;\n          indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\n          currentParcels = orders.slice(indexOfFirstParcel, indexOfLastParcel);\n\n          paginate = pageNumber => setCurrentPage(pageNumber);\n\n          return _context2.abrupt(\"return\", __jsx(React.Fragment, null));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }), \"cN+J1DNQWSAM87IWTIqz8/284yc=\"));\n\n  return function InnerAbCard(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = InnerAbCard;\nexport default InnerAbCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InnerAbCard\");","map":{"version":3,"sources":["C:/Users/Samsung/code/dnp/client/components/cards/InnerAbCard.js"],"names":["React","useState","useEffect","Pagination","Nominations","moment","Web3","InnerAbCard","props","userManaBalance","projectTokenIds","totalTokens","orders","setOrders","loading","setLoading","currentPage","setCurrentPage","parcelsPerPage","totalOrders","setTotalOrders","console","log","fetchPosts","proxyUrl","targetUrl","contractAddress","artArray","callsPerProject","Math","ceil","i","fetch","header","then","res","json","result","assets","id","push","error","indexOfLastParcel","indexOfFirstParcel","currentParcels","slice","paginate","pageNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../Pagination';\r\nimport Nominations from '../Nominations'\r\nimport moment from \"moment\";\r\nimport Web3 from \"web3\";\r\n//import { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js'\r\n\r\nconst InnerAbCard = async ({ props, userManaBalance, projectTokenIds, totalTokens }) => {\r\n  // console.log(projectTokenIds);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [parcelsPerPage] = useState(6);\r\n  const [totalOrders, setTotalOrders] = useState();\r\n  console.log(orders)\r\n    //useEffect(() => {\r\n      const fetchPosts = async () => { \r\n      var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n      targetUrl = 'https://api.opensea.io/api/v1/assets?';\r\n      let contractAddress = 'asset_contract_address=0xa7d8d9ef8D8Ce8992Df33D8b8CF4Aebabd5bD270&order_by=token_ids&order_direction=desc&offset=0&limit=50'\r\n      //asset_contract_address=0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d&event_type=created&only_opensea=false&offset=0&limit=100\r\n      let i;\r\n      let j;\r\n      let artArray = [];\r\n      const callsPerProject = Math.ceil(totalTokens / 50);\r\n      console.log(callsPerProject)\r\n      for (i = 0; i < callsPerProject; i++) {\r\n        //for (j = 0; j < 50; j++) {\r\n          // const tokenIdObject = result.data.projects[0].tokens[j];\r\n          // artArray.push(tokenIdObject.tokenId)\r\n      fetch(targetUrl + contractAddress,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            console.log(result.assets[i].id)\r\n            artArray.push(...result.assets[i].id);\r\n          },\r\n          (error) => {\r\n            setLoading(true),\r\n            error;\r\n          }\r\n        )\r\n        .then(() => {\r\n          setOrders(artArray);\r\n          setLoading(false);\r\n        },\r\n        (error) => {\r\n          return error;\r\n          }\r\n        ) \r\n\r\n      //}             \r\n    } \r\n      \r\n        }\r\n  \r\n      fetchPosts();\r\n    //}, []);\r\n\r\n  // Get current posts\r\n  const indexOfLastParcel = currentPage * parcelsPerPage;\r\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\r\n  const currentParcels = orders.slice(indexOfFirstParcel, indexOfLastParcel);\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n        {/* {orders.map((assetData) => \r\n         \r\n         <div key={assetData.id.toString()} className=\"mb-4 col-sm-12 col-md-12 col-lg-4\">\r\n         <div>{console.log(assetData)}\r\n        {assetData.id}\r\n         </div>  \r\n         </div>        \r\n       )} */}\r\n    </>\r\n\r\n\r\n  \r\n  );\r\n};\r\n\r\nexport default InnerAbCard;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}