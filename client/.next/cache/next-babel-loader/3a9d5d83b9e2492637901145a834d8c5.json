{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchTokenId),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchPropAddr);\n\nimport { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects'; //import { toast } from 'react-toastify';\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nconst TOKEN_ID_FETCH = 'TOKEN_ID_FETCH';\nconst GET_PROP_ADDRESS = 'GET_PROP_ADDRESS';\n\nconst getDrizzle = state => state.appReducers.drizzle;\n\nconst getContracts = state => state.contracts; // function* fetchTokenId (action) {\n//   yield put({ type: 'TOKEN_ID_FETCHED', tokenId:action.tokenId });\n// }\n\n\nexport default function fetchTokenId(action) {\n  return _regeneratorRuntime.wrap(function fetchTokenId$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        return _context.abrupt(\"return\", console.log('Hello Sagas!'));\n\n      case 1:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}\n\nfunction fetchPropAddr(action) {\n  return _regeneratorRuntime.wrap(function fetchPropAddr$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.next = 2;\n        return put({\n          type: 'GOT_PROP_ADDRESS',\n          propAddress: 22\n        });\n\n      case 2:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2);\n} // export default function* appRootSaga() {\n//   //yield takeLatest('TX_BROADCASTED', txProcessing);\n//   //yield takeLatest('TX_SUCCESSFUL', txSuccessful);\n//   yield takeLatest('GET_PROP_ADDRESS', fetchPropAddr);\n//   yield takeLatest('TOKEN_ID_FETCH', fetchTokenId);\n// }","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/appSagas.js"],"names":["fetchTokenId","fetchPropAddr","all","fork","takeLatest","put","call","take","race","select","takeEvery","delay","ms","Promise","res","setTimeout","TOKEN_ID_FETCH","GET_PROP_ADDRESS","getDrizzle","state","appReducers","drizzle","getContracts","contracts","action","console","log","type","propAddress"],"mappings":";;oDAcyBA,Y;qDAIfC,a;;AAlBV,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+DC,SAA/D,QAAgF,oBAAhF,C,CACA;;AACA,MAAMC,KAAK,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMF,EAAN,CAA7B,CAAtB;;AAEA,MAAMI,cAAc,GAAG,gBAAvB;AACA,MAAMC,gBAAgB,GAAE,kBAAxB;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,OAAhD;;AACA,MAAMC,YAAY,GAAIH,KAAD,IAAWA,KAAK,CAACI,SAAtC,C,CAEA;AACA;AACA;;;AACA,eAAe,SAAUvB,YAAV,CAAwBwB,MAAxB;AAAA;AAAA;AAAA;AAAA,yCACNC,OAAO,CAACC,GAAR,CAAY,cAAZ,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIf,SAAUzB,aAAV,CAAyBuB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAGE,eAAMnB,GAAG,CAAC;AAAEsB,UAAAA,IAAI,EAAE,kBAAR;AAA4BC,UAAAA,WAAW,EAAC;AAAxC,SAAD,CAAT;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAOA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\r\n//import { toast } from 'react-toastify';\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms));\r\n\r\nconst TOKEN_ID_FETCH = 'TOKEN_ID_FETCH';\r\nconst GET_PROP_ADDRESS ='GET_PROP_ADDRESS'\r\n\r\n\r\nconst getDrizzle = (state) => state.appReducers.drizzle;\r\nconst getContracts = (state) => state.contracts;\r\n\r\n// function* fetchTokenId (action) {\r\n//   yield put({ type: 'TOKEN_ID_FETCHED', tokenId:action.tokenId });\r\n// }\r\nexport default function* fetchTokenId (action) {\r\n  return console.log('Hello Sagas!')\r\n}\r\n\r\nfunction* fetchPropAddr (action) {\r\n  //const propAddr = drizzle.contracts.ProposalController.methods.getPropTokenIdMap(action.tokenId).call();\r\n  //const propAddr = 22;\r\n  yield put({ type: 'GOT_PROP_ADDRESS', propAddress:22 });\r\n  //yield call(delay, 200);\r\n}\r\n\r\n// export default function* appRootSaga() {\r\n//   //yield takeLatest('TX_BROADCASTED', txProcessing);\r\n//   //yield takeLatest('TX_SUCCESSFUL', txSuccessful);\r\n//   yield takeLatest('GET_PROP_ADDRESS', fetchPropAddr);\r\n//   yield takeLatest('TOKEN_ID_FETCH', fetchTokenId);\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}