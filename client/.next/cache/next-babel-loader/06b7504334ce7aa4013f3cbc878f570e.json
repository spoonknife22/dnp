{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\dnp\\\\client\\\\components\\\\cards\\\\AbPreNomCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '../Pagination';\nimport Nominations from '../Nominations';\nimport moment from \"moment\";\nimport Web3 from \"web3\";\nimport InnerAbCard from './InnerAbCard'; //import { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js'\n\nconst AbPreNomCard = ({\n  props,\n  userManaBalance\n}) => {\n  _s();\n\n  const _useState = useState([]),\n        orders = _useState[0],\n        setOrders = _useState[1];\n\n  const _useState2 = useState([]),\n        projectTokenIds = _useState2[0],\n        setprojectTokenIds = _useState2[1];\n\n  const _useState3 = useState(false),\n        loading = _useState3[0],\n        setLoading = _useState3[1];\n\n  const _useState4 = useState(1),\n        currentPage = _useState4[0],\n        setCurrentPage = _useState4[1];\n\n  const _useState5 = useState(6),\n        parcelsPerPage = _useState5[0];\n\n  const _useState6 = useState(),\n        totalTokens = _useState6[0],\n        setTotalTokens = _useState6[1];\n\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  useEffect(() => {\n    const fetchPosts = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var offset, proxyUrl, targetUrl, contractAddress, i, artArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              offset = 0;\n              proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.opensea.io/api/v1/assets?';\n              contractAddress = 'asset_contract_address=0x1A92f7381B9F03921564a437210bB9396471050C&order_by=token_ids&order_direction=desc&offset=';\n              artArray = []; //const callsPerProject = 3\n              //for (i = 0; i < callsPerProject; i++) {\n\n              fetch(targetUrl + contractAddress + offset, {\n                header: 'x-api-key:2f2a0900458f4bdfbb489680a58e7526'\n              }).then(res => res.json()).then(result => {\n                // console.log(result.assets);\n                artArray.push(...result.assets);\n                offset += 50;\n              }, error => {\n                setLoading(true), error;\n              }).then(() => {\n                setOrders(artArray);\n                setLoading(false);\n              }, error => {\n                return error;\n              }); //} \n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Hello\"));\n};\n\n_s(AbPreNomCard, \"nIO18J9E5tDnYLaP2rgG61rIAIg=\");\n\n_c = AbPreNomCard;\nexport default AbPreNomCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AbPreNomCard\");","map":{"version":3,"sources":["C:/Users/Samsung/code/dnp/client/components/cards/AbPreNomCard.js"],"names":["React","useState","useEffect","Pagination","Nominations","moment","Web3","InnerAbCard","AbPreNomCard","props","userManaBalance","orders","setOrders","projectTokenIds","setprojectTokenIds","loading","setLoading","currentPage","setCurrentPage","parcelsPerPage","totalTokens","setTotalTokens","myHeaders","Headers","append","fetchPosts","offset","proxyUrl","targetUrl","contractAddress","artArray","fetch","header","then","res","json","result","push","assets","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAgC;AAAA;;AAAA,oBACvBT,QAAQ,CAAC,EAAD,CADe;AAAA,QAC5CU,MAD4C;AAAA,QACpCC,SADoC;;AAAA,qBAELX,QAAQ,CAAC,EAAD,CAFH;AAAA,QAE5CY,eAF4C;AAAA,QAE3BC,kBAF2B;;AAAA,qBAGrBb,QAAQ,CAAC,KAAD,CAHa;AAAA,QAG5Cc,OAH4C;AAAA,QAGnCC,UAHmC;;AAAA,qBAIbf,QAAQ,CAAC,CAAD,CAJK;AAAA,QAI5CgB,WAJ4C;AAAA,QAI/BC,cAJ+B;;AAAA,qBAK1BjB,QAAQ,CAAC,CAAD,CALkB;AAAA,QAK5CkB,cAL4C;;AAAA,qBAMblB,QAAQ,EANK;AAAA,QAM5CmB,WAN4C;AAAA,QAM/BC,cAN+B;;AAQnD,QAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAGAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AACfC,cAAAA,MADe,GACN,CADM;AAEfC,cAAAA,QAFe,GAEJ,sCAFI,EAGnBC,SAHmB,GAGP,uCAHO;AAIfC,cAAAA,eAJe,GAIG,mHAJH;AAOfC,cAAAA,QAPe,GAOJ,EAPI,EAQnB;AAEA;;AACAC,cAAAA,KAAK,CAACH,SAAS,GAAGC,eAAZ,GAA8BH,MAA/B,EAAsC;AAACM,gBAAAA,MAAM,EAAC;AAAR,eAAtC,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV;AACAN,gBAAAA,QAAQ,CAACO,IAAT,CAAc,GAAGD,MAAM,CAACE,MAAxB;AACAZ,gBAAAA,MAAM,IAAI,EAAV;AACD,eAPL,EAQKa,KAAD,IAAW;AACTvB,gBAAAA,UAAU,CAAC,IAAD,CAAV,EACAuB,KADA;AAED,eAXL,EAaGN,IAbH,CAaQ,MAAM;AACVrB,gBAAAA,SAAS,CAACkB,QAAD,CAAT;AACAd,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACD,eAhBH,EAiBGuB,KAAD,IAAW;AACT,uBAAOA,KAAP;AACC,eAnBL,EAXmB,CAgCrB;;AAhCqB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVd,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAkCFA,IAAAA,UAAU;AACX,GApCU,EAoCR,EApCQ,CAAT;AAwCA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AASD,CA7DD;;GAAMjB,Y;;KAAAA,Y;AA+DN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../Pagination';\r\nimport Nominations from '../Nominations'\r\nimport moment from \"moment\";\r\nimport Web3 from \"web3\";\r\nimport InnerAbCard from './InnerAbCard';\r\n//import { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js'\r\n\r\nconst AbPreNomCard = ({ props, userManaBalance }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [projectTokenIds, setprojectTokenIds] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [parcelsPerPage] = useState(6);\r\n  const [totalTokens, setTotalTokens] = useState();\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => { \r\n    let offset = 0;\r\n    var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n    targetUrl = 'https://api.opensea.io/api/v1/assets?';\r\n    let contractAddress = 'asset_contract_address=0x1A92f7381B9F03921564a437210bB9396471050C&order_by=token_ids&order_direction=desc&offset='\r\n\r\n    let i;\r\n    let artArray = [];\r\n    //const callsPerProject = 3\r\n\r\n    //for (i = 0; i < callsPerProject; i++) {\r\n    fetch(targetUrl + contractAddress + offset,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result.assets);\r\n          artArray.push(...result.assets);\r\n          offset += 50;\r\n        },\r\n        (error) => {\r\n          setLoading(true),\r\n          error;\r\n        }\r\n      )\r\n      .then(() => {\r\n        setOrders(artArray);\r\n        setLoading(false);\r\n      },\r\n      (error) => {\r\n        return error;\r\n        }\r\n      )          \r\n  //} \r\n}\r\n  fetchPosts();\r\n}, []);\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div>Hello</div>\r\n      {/* <InnerAbCard props={props}   /> */}\r\n    </>\r\n\r\n\r\n  \r\n  );\r\n};\r\n\r\nexport default AbPreNomCard;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}