{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\InterMediateForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass InterMediateForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataKey: null\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          drizzle = _this$props.drizzle,\n          drizzleState = _this$props.drizzleState,\n          propAddress = _this$props.propAddress,\n          tokenId = _this$props.tokenId;\n    const contract = drizzle.contracts[\"\".concat(propAddress)];\n    const dataKey = contract.methods['proposals'].cacheCall(tokenId);\n    this.setState({\n      dataKey\n    });\n  } //  async componentDidMount() {   \n  //     const { drizzle, drizzleState, propAddress, tokenId } = this.props;\n  //     //let state = drizzle.store.getState();\n  //     if (drizzleState.drizzleStatus.initialized && propAddress ) {\n  //     const contract =  await drizzle.contracts[`${propAddress}`];\n  //     const dataKey = contract.methods['proposals'].cacheCall(tokenId);\n  //     this.setState({\n  //       dataKey\n  //     });\n  //     const propContracts = drizzleState.contracts[`${propAddress}`];\n  //     const displayData = propContracts.proposals[this.state.dataKey]; \n  //     const proposalStatus =  displayData && displayData.value.status;\n  //     console.log(proposalStatus)\n  //    }\n  //   // else{\n  //   //   console.log('loading')\n  //   // }\n  //   return \"Loading...\";\n  //   }\n\n\n  render() {\n    const drizzle = this.props.drizzle;\n    const propAddress = this.props.drizzleState.contracts.propAddress;\n    console.log(propAddress); // let state = drizzle.store.getState();\n    // if (state.drizzleStatus.initialized) {\n    //   const propContract = state.contracts[`${propAddress}`];\n    // const displayData = propContract.methods['getSummary'][this.state.dataKey]; \n    // const userId =  displayData && displayData.value;\n    // console.log(userId)\n    //}\n    // console.log(this.state.dataKey)\n\n    const displayData = propAddress.proposals[this.state.dataKey];\n    const userId = displayData && displayData.value;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }, \"'dddd'\", useId);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  proposalStorage: state.appReducers.proposalStorage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPropAbi: ProposalStorageAbi => dispatch({\n    type: \"GOT_PROP_ABI\",\n    proposalStorageAbi: ProposalStorageAbi\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InterMediateForm);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/InterMediateForm.js"],"names":["React","Component","connect","InterMediateForm","constructor","props","state","dataKey","componentDidMount","drizzle","drizzleState","propAddress","tokenId","contract","contracts","methods","cacheCall","setState","render","console","log","displayData","proposals","userId","value","useId","mapStateToProps","proposalStorage","appReducers","mapDispatchToProps","dispatch","getPropAbi","ProposalStorageAbi","type","proposalStorageAbi"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACvCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,wBACsC,KAAKH,KAD3C;AAAA,UACVI,OADU,eACVA,OADU;AAAA,UACDC,YADC,eACDA,YADC;AAAA,UACaC,WADb,eACaA,WADb;AAAA,UAC0BC,OAD1B,eAC0BA,OAD1B;AAElB,UAAMC,QAAQ,GAAGJ,OAAO,CAACK,SAAR,WAAqBH,WAArB,EAAjB;AACA,UAAMJ,OAAO,GAAGM,QAAQ,CAACE,OAAT,CAAiB,WAAjB,EAA8BC,SAA9B,CAAwCJ,OAAxC,CAAhB;AACI,SAAKK,QAAL,CAAc;AACZV,MAAAA;AADY,KAAd;AAGL,GAfsC,CAgBzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEW,EAAAA,MAAM,GAAG;AAAA,UACCT,OADD,GACa,KAAKJ,KADlB,CACCI,OADD;AAAA,UAEAE,WAFA,GAEe,KAAKN,KAAL,CAAWK,YAAX,CAAwBI,SAFvC,CAEAH,WAFA;AAGPQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ,EAHO,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMU,WAAW,GAAGV,WAAW,CAACW,SAAZ,CAAsB,KAAKhB,KAAL,CAAWC,OAAjC,CAApB;AACA,UAAMgB,MAAM,GAAIF,WAAW,IAAIA,WAAW,CAACG,KAA3C;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACSC,KADT,CADD;AAKD;;AAxDsC;;AA4DzC,MAAMC,eAAe,GAAIpB,KAAD,KAAY;AAClCqB,EAAAA,eAAe,EAAErB,KAAK,CAACsB,WAAN,CAAkBD;AADD,CAAZ,CAAxB;;AAIA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,UAAU,EAAGC,kBAAD,IAAyBF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,kBAAkB,EAACF;AAA3C,GAAD;AADL,CAAf,CAA3B;;AAIA,eAAe9B,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n   \r\nclass InterMediateForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataKey:null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { drizzle, drizzleState, propAddress, tokenId } = this.props;\r\n    const contract = drizzle.contracts[`${propAddress}`];\r\n    const dataKey = contract.methods['proposals'].cacheCall(tokenId);\r\n        this.setState({\r\n          dataKey\r\n        });\r\n  }\r\n//  async componentDidMount() {   \r\n//     const { drizzle, drizzleState, propAddress, tokenId } = this.props;\r\n//     //let state = drizzle.store.getState();\r\n//     if (drizzleState.drizzleStatus.initialized && propAddress ) {\r\n//     const contract =  await drizzle.contracts[`${propAddress}`];\r\n//     const dataKey = contract.methods['proposals'].cacheCall(tokenId);\r\n//     this.setState({\r\n//       dataKey\r\n//     });\r\n//     const propContracts = drizzleState.contracts[`${propAddress}`];\r\n//     const displayData = propContracts.proposals[this.state.dataKey]; \r\n//     const proposalStatus =  displayData && displayData.value.status;\r\n//     console.log(proposalStatus)\r\n//    }\r\n//   // else{\r\n//   //   console.log('loading')\r\n//   // }\r\n//   return \"Loading...\";\r\n//   }\r\n  \r\n  render() {\r\n    const { drizzle } = this.props;\r\n    const {propAddress} = this.props.drizzleState.contracts;\r\n    console.log(propAddress)\r\n    // let state = drizzle.store.getState();\r\n    // if (state.drizzleStatus.initialized) {\r\n    //   const propContract = state.contracts[`${propAddress}`];\r\n    // const displayData = propContract.methods['getSummary'][this.state.dataKey]; \r\n    // const userId =  displayData && displayData.value;\r\n    // console.log(userId)\r\n    //}\r\n    // console.log(this.state.dataKey)\r\n    \r\n    const displayData = propAddress.proposals[this.state.dataKey]; \r\n    const userId =  displayData && displayData.value;\r\n    return (\r\n     <div>\r\n       'dddd'{useId}\r\n     </div>\r\n    )\r\n  }\r\n}   \r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  proposalStorage: state.appReducers.proposalStorage\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getPropAbi: (ProposalStorageAbi) =>  dispatch({ type: \"GOT_PROP_ABI\", proposalStorageAbi:ProposalStorageAbi })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InterMediateForm);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}