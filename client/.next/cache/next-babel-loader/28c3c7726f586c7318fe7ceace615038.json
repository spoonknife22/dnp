{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\cards\\\\NominateAssetCards.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState, useEffect } from 'react';\nimport Pagination from '../../components/Pagination';\nimport Nominations from '../../components/Nominations';\n\nconst Cards = ({\n  drizzle,\n  drizzleState,\n  props,\n  manaBalance\n}) => {\n  const {\n    0: parcels,\n    1: setParcels\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: parcelsPerPage\n  } = useState(6);\n  const {\n    0: totalParcels,\n    1: setTotalParcels\n  } = useState();\n  useEffect(() => {\n    const fetchParcels = async () => {\n      let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n          targetUrl = 'https://api.decentraland.org/v1/parcels?status=open&sort_by=price&sort_order=desc&limit=20&offset=0';\n      fetch(proxyUrl + targetUrl).then(res => res.json()).then(result => {\n        setParcels(result.data.parcels);\n        setTotalParcels(result.data.parcels.length);\n        setLoading(false);\n      }, error => {\n        setLoading(true), error;\n      });\n    };\n\n    fetchParcels();\n  }, []); // Get current Parcels\n\n  const indexOfLastParcel = currentPage * parcelsPerPage;\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\n  const currentParcels = parcels.slice(indexOfFirstParcel, indexOfLastParcel); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(React.Fragment, null, __jsx(Nominations, {\n    parcels: currentParcels,\n    loading: loading,\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    props: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    currentPage: currentPage,\n    parcelsPerPage: parcelsPerPage,\n    totalParcels: totalParcels,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Cards;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/cards/NominateAssetCards.js"],"names":["React","Component","useState","useEffect","Pagination","Nominations","Cards","drizzle","drizzleState","props","manaBalance","parcels","setParcels","loading","setLoading","currentPage","setCurrentPage","parcelsPerPage","totalParcels","setTotalParcels","fetchParcels","proxyUrl","targetUrl","fetch","then","res","json","result","data","length","error","indexOfLastParcel","indexOfFirstParcel","currentParcels","slice","paginate","pageNumber"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA;AAAhC,CAAD,KAAmD;AAE/D,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACa,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACe;AAAD,MAAmBf,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM;AAAA,OAACgB,YAAD;AAAA,OAAeC;AAAf,MAAkCjB,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CACP,MAAM;AACF,UAAMiB,YAAY,GAAG,YAAY;AACjC,UAAIC,QAAQ,GAAG,sCAAf;AAAA,UACAC,SAAS,GAAG,qGADZ;AAEAC,MAAAA,KAAK,CAACF,QAAQ,GAAGC,SAAZ,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVf,QAAAA,UAAU,CAACe,MAAM,CAACC,IAAP,CAAYjB,OAAb,CAAV;AACAQ,QAAAA,eAAe,CAACQ,MAAM,CAACC,IAAP,CAAYjB,OAAZ,CAAoBkB,MAArB,CAAf;AACAf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPL,EAQKgB,KAAD,IAAW;AACThB,QAAAA,UAAU,CAAC,IAAD,CAAV,EACAgB,KADA;AAGD,OAZL;AAeD,KAlBC;;AAoBJV,IAAAA,YAAY;AACb,GAvBQ,EAuBN,EAvBM,CAAT,CAR+D,CAkC/D;;AACA,QAAMW,iBAAiB,GAAGhB,WAAW,GAAGE,cAAxC;AACA,QAAMe,kBAAkB,GAAGD,iBAAiB,GAAGd,cAA/C;AACA,QAAMgB,cAAc,GAAGtB,OAAO,CAACuB,KAAR,CAAcF,kBAAd,EAAkCD,iBAAlC,CAAvB,CArC+D,CAuC/D;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIpB,cAAc,CAACoB,UAAD,CAA7C;;AAEA,SACE,4BACE,MAAC,WAAD;AACA,IAAA,OAAO,EAAEH,cADT;AAEA,IAAA,OAAO,EAAEpB,OAFT;AAGA,IAAA,OAAO,EAAEN,OAHT;AAIA,IAAA,YAAY,EAAEC,YAJd;AAKA,IAAA,KAAK,EAAEC,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,UAAD;AACE,IAAA,WAAW,EAAGM,WADhB;AAEE,IAAA,cAAc,EAAEE,cAFlB;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,QAAQ,EAAEiB,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CA3DD;;AA6DA,eAAe7B,KAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport Nominations from '../../components/Nominations'\r\n\r\nconst Cards = ({ drizzle, drizzleState, props, manaBalance }) => {\r\n\r\n  const [parcels, setParcels] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [parcelsPerPage] = useState(6);\r\n  const [totalParcels, setTotalParcels] = useState();\r\n\r\n  useEffect(\r\n    () => {\r\n        const fetchParcels = async () => {\r\n        let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n        targetUrl = 'https://api.decentraland.org/v1/parcels?status=open&sort_by=price&sort_order=desc&limit=20&offset=0'\r\n        fetch(proxyUrl + targetUrl)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setParcels(result.data.parcels);\r\n              setTotalParcels(result.data.parcels.length)\r\n              setLoading(false); \r\n            },\r\n            (error) => {\r\n              setLoading(true),\r\n              error;\r\n          \r\n            }\r\n      ) \r\n    \r\n      }\r\n\r\n    fetchParcels();\r\n  }, []);\r\n\r\n\r\n  // Get current Parcels\r\n  const indexOfLastParcel = currentPage * parcelsPerPage;\r\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\r\n  const currentParcels = parcels.slice(indexOfFirstParcel, indexOfLastParcel);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n      <Nominations \r\n      parcels={currentParcels} \r\n      loading={loading} \r\n      drizzle={drizzle}\r\n      drizzleState={drizzleState}  \r\n      props={props} \r\n      />\r\n      <Pagination\r\n        currentPage ={currentPage }\r\n        parcelsPerPage={parcelsPerPage}\r\n        totalParcels={totalParcels}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}