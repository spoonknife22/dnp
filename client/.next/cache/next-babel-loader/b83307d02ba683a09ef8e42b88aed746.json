{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\TestOsSdk.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n//import ReactPaginate from \"react-paginate\";\nimport OsPagination from '../OsPagination.js';\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network, OpenSeaAsset } from 'opensea-js';\nimport React, { Component, useEffect, useState } from 'react';\nimport { OrderSide } from 'opensea-js/lib/types';\nimport { Button, Form } from \"shards-react\";\n\nfunction TestOsSdk({\n  tokenIdArray,\n  projectTotal\n}) {\n  _s();\n\n  const _useState = useState([]),\n        items = _useState[0],\n        setItems = _useState[1];\n\n  const _useState2 = useState(),\n        cursor = _useState2[0],\n        setCursor = _useState2[1];\n\n  const _useState3 = useState(1),\n        currentPage = _useState3[0],\n        setCurrentPage = _useState3[1];\n\n  const _useState4 = useState(6),\n        ordersPerPage = _useState4[0];\n\n  const _useState5 = useState(),\n        totalOrders = _useState5[0],\n        setTotalOrders = _useState5[1];\n\n  const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\n  const seaport = new OpenSeaPort(provider, {\n    networkName: Network.Main,\n    apiKey: '2f2a0900458f4bdfbb489680a58e7526'\n  });\n  const options = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'X-API-KEY': '2f2a0900458f4bdfbb489680a58e7526'\n    }\n  };\n  let limit = 50;\n  useEffect(() => {\n    const getorders = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(projectTotal) {\n        var _yield$seaport$api$ge, orders, count, data, total;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return seaport.api.getOrders({\n                asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n                token_ids: [3396, 9998, 7024, 6508],\n                side: 1,\n                sale_kind: 0\n              });\n\n            case 2:\n              _yield$seaport$api$ge = _context.sent;\n              orders = _yield$seaport$api$ge.orders;\n              count = _yield$seaport$api$ge.count;\n              console.log(orders);\n              _context.next = 8;\n              return orders;\n\n            case 8:\n              data = _context.sent;\n              // const total = res.headers.get(\"x-total-count\");\n              total = data.count; //setpageCount(Math.ceil(projectTotal / limit));\n              // console.log(Math.ceil(total/12));\n              //setCursor(data.next)\n\n              console.log(data);\n              setItems(orders);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function getorders(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getorders();\n  }, [limit]);\n\n  const fetchorders = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cursor) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch( //`http://localhost:3004/orders?_page=${currentPage}&_limit=${limit}`\n            //`https://jsonplaceholder.typicode.com/orders?_page=${currentPage}&_limit=${limit}`\n            //`https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=${limit}&offset=${currentOs}&order_by=created_date&order_direction=desc`,options\n            \"https://api.opensea.io/api/v1/assets?collection=doodles-official&order_direction=desc&limit=50&cursor=\".concat(cursor, \"&include_orders=true\"), options);\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function fetchorders(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const handlePageClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(cursor) {\n      var ordersFormServer;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetchorders(cursor);\n\n          case 2:\n            ordersFormServer = _context3.sent;\n            setItems(ordersFormServer.assets);\n            setCursor(ordersFormServer.next);\n            console.log(ordersFormServer.assets.sell_orders);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function handlePageClick(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-block btn-success join-form-btn\",\n    key: \"submit\",\n    type: \"button\",\n    onClick: () => handlePageClick(cursor),\n    style: {\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Button\"), __jsx(\"div\", {\n    className: \"row m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, items.map(item => {\n    return __jsx(\"div\", {\n      key: item.tokeId,\n      className: \"col-sm-6 col-md-4 v my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"card shadow-sm w-100\",\n      style: {\n        minHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, __jsx(\"h5\", {\n      className: \"card-title text-center h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, \"Id :\", item.token_id, \" \"), __jsx(\"h6\", {\n      className: \"card-subtitle mb-2 text-muted text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, item.email), __jsx(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, item.body))));\n  })));\n}\n\n_s(TestOsSdk, \"WMEe9tfooTAoLsuYYlSmJ6CucYI=\");\n\n_c = TestOsSdk;\nexport default TestOsSdk;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestOsSdk\");","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/TestOsSdk.js"],"names":["OsPagination","Web3","OpenSeaPort","Network","OpenSeaAsset","React","Component","useEffect","useState","OrderSide","Button","Form","TestOsSdk","tokenIdArray","projectTotal","items","setItems","cursor","setCursor","currentPage","setCurrentPage","ordersPerPage","totalOrders","setTotalOrders","provider","providers","HttpProvider","seaport","networkName","Main","apiKey","options","method","headers","Accept","limit","getorders","api","getOrders","asset_contract_address","token_ids","side","sale_kind","orders","count","console","log","data","total","fetchorders","fetch","res","json","handlePageClick","ordersFormServer","assets","next","sell_orders","fontSize","map","item","tokeId","minHeight","token_id","email","body"],"mappings":"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","sourcesContent":["//import ReactPaginate from \"react-paginate\";\r\nimport OsPagination from '../OsPagination.js';\r\nimport * as Web3 from 'web3';\r\nimport { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js';\r\nimport React, { Component, useEffect, useState } from 'react';\r\n\r\nimport { OrderSide } from 'opensea-js/lib/types';\r\nimport { Button, Form } from \"shards-react\";\r\n\r\nfunction TestOsSdk({tokenIdArray, projectTotal}) {\r\n  const [items, setItems] = useState([]);\r\n  const [cursor, setCursor] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [ordersPerPage] = useState(6);\r\n  const [totalOrders, setTotalOrders] = useState();\r\n\r\n  const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\r\n\r\n  const seaport = new OpenSeaPort(provider, {\r\n    networkName: Network.Main,\r\n    apiKey: '2f2a0900458f4bdfbb489680a58e7526'\r\n  });\r\n\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {Accept: 'application/json', 'X-API-KEY': '2f2a0900458f4bdfbb489680a58e7526'}\r\n};\r\n\r\n  let limit = 50;\r\n  \r\n\r\n  useEffect(() => {\r\n \r\n    const getorders = async (projectTotal) => {\r\n  \r\n      const  { orders, count } = await seaport.api.getOrders({\r\n        asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n        token_ids: [3396,9998,7024,6508],\r\n        side: 1,\r\n        sale_kind: 0,\r\n      })\r\n      console.log(orders)\r\n      const data = await orders;\r\n  \r\n      // const total = res.headers.get(\"x-total-count\");\r\n      const total = data.count;\r\n      //setpageCount(Math.ceil(projectTotal / limit));\r\n      // console.log(Math.ceil(total/12));\r\n      //setCursor(data.next)\r\n      console.log(data)\r\n      setItems(orders);\r\n    };\r\n\r\n    getorders();\r\n  }, [limit]);\r\n\r\n  const fetchorders = async (cursor) => {\r\n    const res = await fetch(\r\n      //`http://localhost:3004/orders?_page=${currentPage}&_limit=${limit}`\r\n       //`https://jsonplaceholder.typicode.com/orders?_page=${currentPage}&_limit=${limit}`\r\n       //`https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=${limit}&offset=${currentOs}&order_by=created_date&order_direction=desc`,options\r\n       `https://api.opensea.io/api/v1/assets?collection=doodles-official&order_direction=desc&limit=50&cursor=${cursor}&include_orders=true`,options\r\n   \r\n    );\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const handlePageClick = async (cursor) => {\r\n   \r\n    const ordersFormServer = await fetchorders(cursor);\r\n    setItems(ordersFormServer.assets);\r\n    setCursor(ordersFormServer.next)\r\n    console.log(ordersFormServer.assets.sell_orders)\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <button className=\"btn btn-block btn-success join-form-btn\" key=\"submit\" type=\"button\" onClick={() => handlePageClick(cursor)} style={{ fontSize: 16 }} > \r\n          Button\r\n      </button>\r\n      <div className=\"row m-2\">\r\n        {items.map((item) => {\r\n          return (\r\n            <div key={item.tokeId} className=\"col-sm-6 col-md-4 v my-2\">\r\n              <div className=\"card shadow-sm w-100\" style={{ minHeight: 25 }}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title text-center h2\">Id :{item.token_id} </h5>\r\n                  <h6 className=\"card-subtitle mb-2 text-muted text-center\">\r\n                    {item.email}\r\n                  </h6>\r\n                  <p className=\"card-text\">{item.body}</p>\r\n                </div>\r\n              </div>\r\n              {/* <OsPagination \r\n                currentPage ={currentPage}\r\n                ordersPerPage={ordersPerPage}\r\n                totalorders={totalOrders}\r\n                paginate={paginate}\r\n              /> */}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* <Pagination\r\n        previousLabel={\"previous\"}\r\n        nextLabel={\"next\"}\r\n        breakLabel={\"...\"}\r\n        pageCount={pageCount}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={3}\r\n        onPageChange={handlePageClick}\r\n        containerClassName={\"pagination justify-content-center\"}\r\n        pageClassName={\"page-item\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        previousClassName={\"page-item\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        breakClassName={\"page-item\"}\r\n        breakLinkClassName={\"page-link\"}\r\n        activeClassName={\"active\"}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestOsSdk;"]},"metadata":{},"sourceType":"module"}