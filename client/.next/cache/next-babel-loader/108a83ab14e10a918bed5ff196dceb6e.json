{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AccountsContainer.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport MyAddBar from \"./AddressBar.js\";\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport { Drizzle } from \"@drizzle/store\";\nimport options from \"./drizzleOptions\";\nimport { Loader } from 'rimble-ui';\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\nconst {\n  ContractData\n} = newContextComponents;\nconst drizzle = new Drizzle(options);\n\nconst AccountsContainer = () => {\n  return __jsx(DrizzleContext.Provider, {\n    drizzle: drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(DrizzleContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, drizzleContext => {\n    const {\n      drizzle,\n      drizzleState,\n      initialized\n    } = drizzleContext;\n\n    if (!initialized) {\n      return __jsx(Loader, {\n        size: \"30px\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }\n      });\n    } else {\n      const account = drizzleState.accounts[0];\n      return __jsx(ContractData, {\n        drizzle: drizzle,\n        drizzleState: drizzleState,\n        contract: \"UserStorage\",\n        method: \"addresses\",\n        methodArgs: [drizzleState.accounts[0]],\n        render: displayData => {\n          if (typeof displayData === \"object\") {\n            var i = 0;\n            const displayObjectProps = [];\n            Object.keys(displayData).forEach(key => {\n              if (i != key) {\n                displayObjectProps.push(__jsx(\"li\", {\n                  key: i,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 35\n                  }\n                }, __jsx(\"strong\", {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 37\n                  }\n                }, key), pendingSpinner, __jsx(\"br\", {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 37\n                  }\n                }), `${displayData[key]}`));\n              }\n\n              i++;\n            });\n          }\n        } //return <ul>{displayObjectProps}</ul>;\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }\n      });\n    }\n\n    ;\n  }));\n};\n\nexport default AccountsContainer;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AccountsContainer.js"],"names":["React","UserInfo","MyAddBar","DrizzleContext","newContextComponents","Drizzle","options","Loader","JoinButton","ContractData","drizzle","AccountsContainer","drizzleContext","drizzleState","initialized","account","accounts","displayData","i","displayObjectProps","Object","keys","forEach","key","push","pendingSpinner"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAUC,MAAV,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAmBL,oBAAzB;AACA,MAAMM,OAAO,GAAG,IAAIL,OAAJ,CAAYC,OAAZ,CAAhB;;AAEA,MAAMK,iBAAiB,GAAG,MAAM;AAE9B,SACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,OAAO,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,IAAI;AACjB,UAAM;AAACF,MAAAA,OAAD;AAAUG,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,QAAwCF,cAA9C;;AAEA,QAAG,CAACE,WAAJ,EAAiB;AACf,aAAO,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAGM;AACJ,YAAMC,OAAO,GAAGF,YAAY,CAACG,QAAb,CAAsB,CAAtB,CAAhB;AAEC,aACA,MAAC,YAAD;AAAc,QAAA,OAAO,EAAEN,OAAvB;AACa,QAAA,YAAY,EAAEG,YAD3B;AAEa,QAAA,QAAQ,EAAC,aAFtB;AAGa,QAAA,MAAM,EAAC,WAHpB;AAIa,QAAA,UAAU,EAAE,CAACA,YAAY,CAACG,QAAb,CAAsB,CAAtB,CAAD,CAJzB;AAKa,QAAA,MAAM,EAAGC,WAAW,IAAI;AACxB,cAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACnC,gBAAIC,CAAC,GAAG,CAAR;AACA,kBAAMC,kBAAkB,GAAG,EAA3B;AAEAC,YAAAA,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,OAAzB,CAAiCC,GAAG,IAAI;AACtC,kBAAIL,CAAC,IAAIK,GAAT,EAAc;AACZJ,gBAAAA,kBAAkB,CAACK,IAAnB,CACE;AAAI,kBAAA,GAAG,EAAEN,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAASK,GAAT,CADF,EAEGE,cAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAII,GAAER,WAAW,CAACM,GAAD,CAAM,EAJvB,CADF;AAQD;;AAEDL,cAAAA,CAAC;AACF,aAbD;AAaK;AAAC,SAlBF,CAoBJ;AAzBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAiCA;;AAAA;AAOJ,GAlDH,CADF,CADF;AAyDD,CA3DD;;AA4DA,eAAeP,iBAAf","sourcesContent":["import React from \"react\";\r\nimport UserInfo from \"./UserInfo\"; \r\nimport MyAddBar from \"./AddressBar.js\"; \r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { newContextComponents } from \"@drizzle/react-components\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport options from \"./drizzleOptions\";\r\nimport {  Loader } from 'rimble-ui';\r\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\r\n\r\nconst { ContractData } = newContextComponents;\r\nconst drizzle = new Drizzle(options);\r\n\r\nconst AccountsContainer = () => {\r\n \r\n  return  (\r\n    <DrizzleContext.Provider drizzle={drizzle}>\r\n      <DrizzleContext.Consumer>\r\n        {drizzleContext => {\r\n          const {drizzle, drizzleState, initialized } = drizzleContext;\r\n\r\n          if(!initialized) {\r\n            return <Loader size=\"30px\" color=\"white\" />\r\n          }\r\n          else  {\r\n            const account = drizzleState.accounts[0];\r\n\r\n             return (\r\n             <ContractData drizzle={drizzle} \r\n                          drizzleState={drizzleState} \r\n                          contract=\"UserStorage\" \r\n                          method=\"addresses\" \r\n                          methodArgs={[drizzleState.accounts[0]]} \r\n                          render= {displayData => {\r\n                          if (typeof displayData === \"object\") {\r\n                            var i = 0;\r\n                            const displayObjectProps = [];\r\n                      \r\n                            Object.keys(displayData).forEach(key => {\r\n                              if (i != key) {\r\n                                displayObjectProps.push(\r\n                                  <li key={i}>\r\n                                    <strong>{key}</strong>\r\n                                    {pendingSpinner}\r\n                                    <br />\r\n                                    {`${displayData[key]}`}\r\n                                  </li>,\r\n                                );\r\n                              }\r\n                      \r\n                              i++;\r\n                            }); }}\r\n                        \r\n                            //return <ul>{displayObjectProps}</ul>;\r\n                          }\r\n                      \r\n                        \r\n                          \r\n                          />\r\n             )\r\n            };\r\n          \r\n          \r\n            \r\n          \r\n     \r\n\r\n        }}\r\n      </DrizzleContext.Consumer>\r\n    </DrizzleContext.Provider>\r\n);\r\n  \r\n}\r\nexport default AccountsContainer;"]},"metadata":{},"sourceType":"module"}