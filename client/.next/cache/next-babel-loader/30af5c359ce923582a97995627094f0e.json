{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\ContributeForm.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Button, Progress, Row } from \"shards-react\";\nimport Web3 from \"web3\";\nimport { toast } from 'react-toastify';\nimport { Loader } from 'rimble-ui';\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport ApproveDeposit from './ApproveDeposit.js'; //import Approve from \"./Approve.js\";\n\nconst ContractData = newContextComponents.ContractData;\n\nconst Input = ({\n  value,\n  onChange,\n  placeholder\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, __jsx(\"input\", {\n  className: \"form-control form-control-sm\",\n  value: value,\n  onChange: onChange,\n  placeholder: placeholder,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}));\n\nclass ContributeForm extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    _defineProperty(this, \"updateField\", (fieldName, e) => {\n      const newState = {};\n      newState[fieldName] = e.target.value;\n      this.setState(newState);\n    });\n\n    _defineProperty(this, \"approve\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(e) {\n        var web3, _this$props, drizzle, drizzleState, propAddress, proposalStorage, tokenId, assetPrice, nftAddress, getStackId, contribution, account, memberBool, propBalance, currentPropBalance, remainingBalance, convertedContribution, key, manaContract, manaContribution, stackId;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              web3 = new Web3(Web3.givenProvider);\n              _this$props = _this.props, drizzle = _this$props.drizzle, drizzleState = _this$props.drizzleState, propAddress = _this$props.propAddress, proposalStorage = _this$props.proposalStorage, tokenId = _this$props.tokenId, assetPrice = _this$props.assetPrice, nftAddress = _this$props.nftAddress, getStackId = _this$props.getStackId;\n              contribution = _this.state.contribution;\n              _context2.next = 6;\n              return drizzleState.accounts[0];\n\n            case 6:\n              account = _context2.sent;\n              _context2.next = 9;\n              return drizzle.contracts.UserStorage.methods.addresses(account).call();\n\n            case 9:\n              memberBool = _context2.sent;\n              _context2.next = 12;\n              return proposalStorage.methods.getSummary(\"\".concat(tokenId)).call();\n\n            case 12:\n              propBalance = _context2.sent;\n              currentPropBalance = Web3.utils.fromWei(\"\".concat(propBalance), 'ether');\n              remainingBalance = \"\".concat(assetPrice) - \"\".concat(currentPropBalance);\n              convertedContribution = web3.utils.toWei(\"\".concat(contribution), 'ether'); //  toWei(price.toString(), 'ether'),\n\n              _context2.t0 = regeneratorRuntime.keys(_this.state);\n\n            case 17:\n              if ((_context2.t1 = _context2.t0()).done) {\n                _context2.next = 27;\n                break;\n              }\n\n              key = _context2.t1.value;\n\n              if (_this.state[key]) {\n                _context2.next = 23;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", toast.warning(\"You must fill in an amount \".concat(key, \"!\"), {\n                position: toast.POSITION.TOP_RIGHT\n              }));\n\n            case 23:\n              if (!(_this.state[key] > remainingBalance)) {\n                _context2.next = 25;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", toast.warning(\"Your contribution of \".concat(contribution, \" is greater than the amount required.\"), {\n                position: toast.POSITION.TOP_RIGHT\n              }));\n\n            case 25:\n              _context2.next = 17;\n              break;\n\n            case 27:\n              if (!(memberBool && propAddress !== null)) {\n                _context2.next = 44;\n                break;\n              }\n\n              _context2.next = 30;\n              return drizzle.contracts.MANAToken;\n\n            case 30:\n              manaContract = _context2.sent;\n\n              manaContribution = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return manaContract.methods[\"approve\"].cacheSend(propAddress, convertedContribution, {\n                          from: \"\".concat(account),\n                          gas: 300000\n                        });\n\n                      case 2:\n                        return _context.abrupt(\"return\", _context.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n\n                return function manaContribution() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              _context2.prev = 32;\n              _context2.next = 35;\n              return manaContribution();\n\n            case 35:\n              stackId = _context2.sent;\n              getStackId(stackId, convertedContribution);\n              _context2.next = 42;\n              break;\n\n            case 39:\n              _context2.prev = 39;\n              _context2.t2 = _context2[\"catch\"](32);\n              return _context2.abrupt(\"return\", toast.error(\"Sorry, MANA Approval did not go through: \".concat(_context2.t2), {\n                position: toast.POSITION.TOP_RIGHT\n              }));\n\n            case 42:\n              _context2.next = 46;\n              break;\n\n            case 44:\n              if (memberBool) {\n                _context2.next = 46;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", toast.error(\"Sorry, you must join the Consortium to deposit MANA\", {\n                position: toast.POSITION.TOP_RIGHT\n              }));\n\n            case 46:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[32, 39]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(this, \"deposit\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var _this$props2, propAddress, drizzle, convertedContribution, drizzleState, stackId, processingDone, getDepStackId, account, transactionStack, transactions, txHash, propContract, manaDeposit, depStackId;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _this$props2 = _this.props, propAddress = _this$props2.propAddress, drizzle = _this$props2.drizzle, convertedContribution = _this$props2.convertedContribution, drizzleState = _this$props2.drizzleState, stackId = _this$props2.stackId, processingDone = _this$props2.processingDone, getDepStackId = _this$props2.getDepStackId;\n            _context4.next = 3;\n            return drizzleState.accounts[0];\n\n          case 3:\n            account = _context4.sent;\n            transactionStack = drizzleState.transactionStack, transactions = drizzleState.transactions;\n            txHash = transactionStack[stackId];\n\n            if (!txHash) {\n              console.log('Transaction processing...');\n            }\n\n            if (!txHash) {\n              _context4.next = 27;\n              break;\n            }\n\n            if (!processingDone) {\n              _context4.next = 27;\n              break;\n            }\n\n            if (!(transactions[txHash] && transactions[txHash].status)) {\n              _context4.next = 26;\n              break;\n            }\n\n            _context4.next = 12;\n            return drizzle.contracts[\"\".concat(propAddress)];\n\n          case 12:\n            propContract = _context4.sent;\n\n            manaDeposit = /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return propContract.methods[\"deposit\"].cacheSend(convertedContribution, {\n                        from: \"\".concat(account),\n                        gas: 3000000\n                      });\n\n                    case 2:\n                      return _context3.abrupt(\"return\", _context3.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _callee3);\n              }));\n\n              return function manaDeposit() {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            _context4.prev = 14;\n            _context4.next = 17;\n            return manaDeposit();\n\n          case 17:\n            depStackId = _context4.sent;\n            getDepStackId(depStackId, convertedContribution);\n            _context4.next = 24;\n            break;\n\n          case 21:\n            _context4.prev = 21;\n            _context4.t0 = _context4[\"catch\"](14);\n            return _context4.abrupt(\"return\", toast.error(\"Sorry, deposit did not go through: \".concat(_context4.t0), {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 24:\n            _context4.next = 27;\n            break;\n\n          case 26:\n            toast(\"Approval Transaction: \".concat(transactions[txHash].status), {\n              position: toast.POSITION.BOTTOM_LEFT\n            });\n\n          case 27:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[14, 21]]);\n    })));\n\n    this.approve = this.approve.bind(this);\n    this.state = {\n      contribution: \"\"\n    };\n  }\n\n  render() {\n    return __jsx(ApproveDeposit, {\n      props: this.props,\n      approve: approve,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    });\n  }\n\n} //   render() {\n//     const { drizzle, drizzleState, assetPrice, contractBalance, transactionProcessing, propAddress, stackId, processingDone, convertedContribution, depStackId, approvedMana } = this.props;\n//     const { transactionStack } = drizzleState;\n//     const txHash = transactionStack[stackId];\n//     const depTxHash = transactionStack[depStackId];\n//     console.log(approvedMana)\n//     if(contractBalance === null){\n//       return (\n//       <div className=\"mx-auto\">  \n//        ContributeForm 105\n//         <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n//       </div>\n//       )\n//     }\n//     if(contractBalance && propAddress){\n//       let maxRanger =  Web3.utils.fromWei(`${assetPrice}`,'ether');\n//       let currentContractBalance = Web3.utils.fromWei(`${contractBalance}`,'ether');\n//       let minRange = currentContractBalance;\n//       let fundsNeeded = maxRanger - minRange;\n//       return (\n//         <div>\n//           <div className=\"contribution-modal\">\n//             {propAddress === 'undefined' || propAddress === null ? \n//             <div className=\"mx-auto\">   \n//               <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n//             </div>\n//           :\n//             <div>\n//               {/* <ContractData drizzle={drizzle} drizzleState={drizzleState} contract=\"MANAToken\" method=\"allowance\" methodArgs={[drizzleState.accounts[0], `${propAddress}`]} \n//                 render={data => (\n//                   <>\n//                     <p>Your Approved Funds: <span className=\"locked-amount-number\">{Web3.utils.fromWei(`${data}`,'ether')}</span> MANA</p>\n//                   </>\n//                 )}\n//               /> */}\n//               <p className=\"amount-text mt-3 mb-1 text-left\" >Funds Needed: <span className=\"amount-number\">{fundsNeeded}</span> MANA</p>\n//               <p className=\"amount-text mt-1 mb-1 text-left\" >Pool Depth: <span className=\"amount-number\">{minRange}</span> MANA</p>\n//               <Progress value={minRange} max={maxRanger} ></Progress>\n//             </div>\n//           } \n//           </div>\n//         {!txHash ?\n//         //start of txHash\n//             <form onSubmit={this.approve}>\n//               <Row className=\"mt-3 justify-content-center contribute-form-dialog\">\n//                 <div className=\"modal-footer justify-content-center\">\n//                   <div className=\"contribute-form-dialog \">\n//                   <Input \n//                     title=\"Contribute\"\n//                     placeholder=\"MANA\" \n//                     onChange={e => this.updateField(\"contribution\", e)} \n//                     />\n//                   </div> \n//                   <div>\n//                     <Button className=\"contribute-form-btn\" type=\"submit\" onClick={this.approve} theme=\"success\" >\n//                       Approve\n//                     </Button>\n//                   </div>\n//                 </div>\n//               </Row>\n//             </form>\n//           :\n//           //Once MANA Approve txhash produced\n//           <div>\n//             {(() => {\n//               if(drizzleState.transactions[txHash]) {\n//               const status = drizzleState.transactions[txHash].status;\n//               switch (status) {\n//                 case 'pending':\n//                 return(\n//                   <div className=\"mx-auto\">   \n//                     <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n//                   </div>    \n//                 )\n//                 case 'success':\n//                   return (\n//                     <div>\n//                       <Row className=\"mt-2 justify-content-center contribute-form-dialog\">\n//                         <ContractData drizzle={drizzle} drizzleState={drizzleState} contract=\"MANAToken\" method=\"allowance\" methodArgs={[drizzleState.accounts[0], `${propAddress}`]} \n//                           render={data => (\n//                             <>\n//                               <p className=\"mb-1 contribute-form-dialog\">Approved For Deposit: <span className=\"locked-amount-number\">{Web3.utils.fromWei(`${data}`,'ether')}</span> MANA</p>\n//                             </>\n//                             //End of MANA Approve!txhash\n//                           )}\n//                         />\n//                       </Row>\n//                       <form onSubmit={this.deposit}>\n//                       <Row className=\"mt-1 justify-content-center contribute-form-dialog\">\n//                         <div className=\"modal-footer justify-content-center\">\n//                           <div>\n//                             {!transactionProcessing && !depTxHash ? \n//                               <Button className=\"btn-block btn-success contribute-form-btn\"  onClick={this.deposit} theme=\"success\" >\n//                                 Deposit&nbsp;{Web3.utils.fromWei(`${convertedContribution}`,'ether')}&nbsp;MANA\n//                               </Button>\n//                             :\n//                             //MANA Deposit depTxHash produced\n//                             <div>\n//                               {(() => {\n//                                 if(drizzleState.transactions[depTxHash]) {\n//                                 const depStatus = drizzleState.transactions[depTxHash].status;\n//                                 switch (depStatus) {\n//                                   case 'pending':\n//                                     return (\n//                                       <div className=\"mx-auto\">   \n//                                         <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n//                                       </div>   \n//                                     )\n//                                   case 'success':\n//                                     return  (\n//                                       <div className=\"modal-footer text-deposit-complete justify-content-center\">\n//                                         Deposit of&nbsp;{Web3.utils.fromWei(`${convertedContribution}`,'ether')}&nbsp;MANA Complete\n//                                       </div>\n//                                     )\n//                                   case 'error':\n//                                     return'error'\n//                                   default:\n//                                     return null;\n//                                 }\n//                               }\n//                               //End MANA Deposit depTxHash produced\n//                               })()}\n//                             </div>\n//                             }\n//                           </div>\n//                         </div>\n//                       </Row>\n//                     </form>  \n//                   </div>\n//                   )\n//                 case 'error':\n//                   return 'error';\n//                 default:\n//                   return null;\n//               }\n//             }\n//             {\n//               return(\n//                 <div className=\"mx-auto\">  \n//                   <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n//                 </div>   \n//               )\n//             }\n//             })()}\n//           </div>\n//         }\n//           <style jsx>\n//               {`  \n//               .contribution-modal{font-family: Poppins;}\n//               .amount-text {font-size:.9rem;color:#000;font-family: Poppins;}\n//               .amount-number {font-size:.9rem;color:#66a3ff;font-family: Poppins}\n//               .locked-amount-number {font-size:1rem;color:#66a3ff;font-family: Poppins}\n//               .contribute-form-btn {font-family: Poppins;letter-spacing:5.5px;padding:.6rem;}\n//               .contribute-form-dialog {font-family: Poppins; font-size:1rem;}\n//               .text-deposit-complete {font-family: Poppins; font-size:1rem;color:#17c671;}\n//               `}                \n//           </style>\n//         </div>\n//       )\n//   }\n//   else{\n//     return(\n//       <div className=\"mx-auto\">   \n//         contributeform 202\n//         <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n//       </div>     \n//         )\n//       }\n//    }\n// }\n\n\nconst mapStateToProps = state => ({\n  contribComplete: state.appReducers.contribComplete,\n  proposalStorage: state.appReducers.proposalStorage,\n  contractBalance: state.appReducers.contractBalance,\n  nftAddress: state.appReducers.nftAddress,\n  transactionProcessing: state.appReducers.transactionProcessing,\n  stackId: state.appReducers.stackId,\n  depStackId: state.appReducers.depStackId,\n  convertedContribution: state.appReducers.convertedContribution,\n  processingDone: state.appReducers.processingDone,\n  approvedMana: state.appReducers.approvedMana\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //gotContractBalance: (proposalBalance) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${proposalBalance}` }),\n  contributionComplete: () => dispatch({\n    type: \"CONTRIB_COMPLETE\",\n    contribComplete: true\n  }),\n  getStackId: (stackId, convertedContribution) => dispatch({\n    type: \"GOT_STACK_ID\",\n    stackId: stackId,\n    convertedContribution: convertedContribution\n  }),\n  getDepStackId: (depStackId, convertedContribution) => dispatch({\n    type: \"GOT_DEP_STACK_ID\",\n    depStackId: depStackId,\n    convertedContribution: convertedContribution\n  }),\n  runContributeSaga: (propAddress, drizzle, convertedContribution) => dispatch({\n    type: \"RUN_DEPOSIT_SAGA\",\n    convertedContribution: convertedContribution,\n    propAddress: propAddress,\n    drizzle: drizzle\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeForm);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/ContributeForm.js"],"names":["React","connect","Button","Progress","Row","Web3","toast","Loader","newContextComponents","ApproveDeposit","ContractData","Input","value","onChange","placeholder","ContributeForm","Component","constructor","props","fieldName","e","newState","target","setState","preventDefault","web3","givenProvider","drizzle","drizzleState","propAddress","proposalStorage","tokenId","assetPrice","nftAddress","getStackId","contribution","state","accounts","account","contracts","UserStorage","methods","addresses","call","memberBool","getSummary","propBalance","currentPropBalance","utils","fromWei","remainingBalance","convertedContribution","toWei","key","warning","position","POSITION","TOP_RIGHT","MANAToken","manaContract","manaContribution","cacheSend","from","gas","stackId","error","processingDone","getDepStackId","transactionStack","transactions","txHash","console","log","status","propContract","manaDeposit","depStackId","BOTTOM_LEFT","approve","bind","render","mapStateToProps","contribComplete","appReducers","contractBalance","transactionProcessing","approvedMana","mapDispatchToProps","dispatch","contributionComplete","type","runContributeSaga"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Button, Progress, Row } from \"shards-react\";\r\nimport Web3 from \"web3\";\r\nimport { toast } from 'react-toastify';\r\nimport { Loader } from 'rimble-ui';\r\nimport { newContextComponents } from \"@drizzle/react-components\";\r\nimport ApproveDeposit from './ApproveDeposit.js'\r\n\r\n//import Approve from \"./Approve.js\";\r\n\r\nconst { ContractData } = newContextComponents;\r\n\r\nconst Input = ({ value, onChange, placeholder }) => (\r\n  <div>\r\n    <input className=\"form-control form-control-sm\" value={value} onChange={onChange} placeholder={placeholder}  /> \r\n  </div>\r\n) \r\n\r\nclass ContributeForm extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.approve = this.approve.bind(this);\r\n    this.state = {\r\n      contribution:\"\"\r\n    }\r\n  }\r\n  \r\n\r\nupdateField = (fieldName, e) => {\r\n  const newState = {}\r\n  newState[fieldName] = e.target.value\r\n  this.setState(newState)\r\n}\r\n\r\napprove = async (e) => {\r\n  e.preventDefault();\r\n  let web3 = new Web3(Web3.givenProvider);\r\n  const { drizzle, drizzleState, propAddress, proposalStorage, tokenId, assetPrice, nftAddress, getStackId } = this.props;\r\n  const { contribution } = this.state;\r\n  const account = await drizzleState.accounts[0];\r\n  const memberBool = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n  const propBalance = await proposalStorage.methods.getSummary(`${tokenId}`).call();\r\n  const currentPropBalance = Web3.utils.fromWei(`${propBalance}`,'ether');\r\n  const remainingBalance =  `${assetPrice}` - `${currentPropBalance}`;\r\n  const convertedContribution =  web3.utils.toWei(`${contribution}`,'ether');\r\n  //  toWei(price.toString(), 'ether'),\r\n  for (let key in this.state) {    \r\n    if (!this.state[key]) {\r\n      return toast.warning(`You must fill in an amount ${key}!`,{ position: toast.POSITION.TOP_RIGHT })\r\n    } \r\n    else if (this.state[key] > remainingBalance) {\r\n      return toast.warning(`Your contribution of ${contribution} is greater than the amount required.`,{ position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n  if(memberBool && propAddress !== null) {\r\n  //if(memberBool) {\r\n    const manaContract = await drizzle.contracts.MANAToken; \r\n    const manaContribution = async () => await (manaContract.methods[\"approve\"].cacheSend(propAddress,convertedContribution,{from:`${account}`, gas:300000}));\r\n  try { \r\n    const stackId = await manaContribution();\r\n    getStackId(stackId, convertedContribution);\r\n\r\n  } catch (err) {\r\n    return toast.error(`Sorry, MANA Approval did not go through: ${err}`,{ position: toast.POSITION.TOP_RIGHT })\r\n  }\r\n}\r\nelse if(!memberBool) {\r\n    return toast.error(`Sorry, you must join the Consortium to deposit MANA`,{ position: toast.POSITION.TOP_RIGHT })\r\n  }\r\n}\r\n\r\ndeposit = async () => {\r\n  const { propAddress, drizzle, convertedContribution, drizzleState, stackId, processingDone, getDepStackId } = this.props;\r\n  const account = await drizzleState.accounts[0];\r\n  const { transactionStack, transactions } = drizzleState;\r\n\r\n  const txHash = transactionStack[stackId];\r\n  if (!txHash) {\r\n      console.log('Transaction processing...')\r\n    }\r\n  if(txHash){\r\n    if(processingDone){\r\n      if(transactions[txHash] && transactions[txHash].status) {\r\n        const propContract = await drizzle.contracts[`${propAddress}`];\r\n        const manaDeposit = async () => await propContract.methods[\"deposit\"].cacheSend(convertedContribution,{from:`${account}`, gas:3000000});\r\n        try { \r\n          const depStackId = await manaDeposit();\r\n          getDepStackId(depStackId,convertedContribution);\r\n        } catch (err) {\r\n          return toast.error(`Sorry, deposit did not go through: ${err}`,{ position: toast.POSITION.TOP_RIGHT })\r\n        }\r\n      }\r\n      else {\r\n        toast(`Approval Transaction: ${transactions[txHash].status}`, { position: toast.POSITION.BOTTOM_LEFT})\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\nrender() {    \r\n  return (  \r\n    <ApproveDeposit props={this.props} approve={approve} />\r\n  )}\r\n}\r\n\r\n//   render() {\r\n//     const { drizzle, drizzleState, assetPrice, contractBalance, transactionProcessing, propAddress, stackId, processingDone, convertedContribution, depStackId, approvedMana } = this.props;\r\n//     const { transactionStack } = drizzleState;\r\n//     const txHash = transactionStack[stackId];\r\n//     const depTxHash = transactionStack[depStackId];\r\n//     console.log(approvedMana)\r\n\r\n//     if(contractBalance === null){\r\n//       return (\r\n//       <div className=\"mx-auto\">  \r\n//        ContributeForm 105\r\n//         <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n//       </div>\r\n//       )\r\n//     }\r\n//     if(contractBalance && propAddress){\r\n//       let maxRanger =  Web3.utils.fromWei(`${assetPrice}`,'ether');\r\n//       let currentContractBalance = Web3.utils.fromWei(`${contractBalance}`,'ether');\r\n//       let minRange = currentContractBalance;\r\n//       let fundsNeeded = maxRanger - minRange;\r\n\r\n//       return (\r\n//         <div>\r\n//           <div className=\"contribution-modal\">\r\n//             {propAddress === 'undefined' || propAddress === null ? \r\n//             <div className=\"mx-auto\">   \r\n//               <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n//             </div>\r\n//           :\r\n//             <div>\r\n//               {/* <ContractData drizzle={drizzle} drizzleState={drizzleState} contract=\"MANAToken\" method=\"allowance\" methodArgs={[drizzleState.accounts[0], `${propAddress}`]} \r\n//                 render={data => (\r\n//                   <>\r\n//                     <p>Your Approved Funds: <span className=\"locked-amount-number\">{Web3.utils.fromWei(`${data}`,'ether')}</span> MANA</p>\r\n//                   </>\r\n//                 )}\r\n//               /> */}\r\n//               <p className=\"amount-text mt-3 mb-1 text-left\" >Funds Needed: <span className=\"amount-number\">{fundsNeeded}</span> MANA</p>\r\n//               <p className=\"amount-text mt-1 mb-1 text-left\" >Pool Depth: <span className=\"amount-number\">{minRange}</span> MANA</p>\r\n//               <Progress value={minRange} max={maxRanger} ></Progress>\r\n//             </div>\r\n//           } \r\n//           </div>\r\n//         {!txHash ?\r\n//         //start of txHash\r\n//             <form onSubmit={this.approve}>\r\n//               <Row className=\"mt-3 justify-content-center contribute-form-dialog\">\r\n//                 <div className=\"modal-footer justify-content-center\">\r\n//                   <div className=\"contribute-form-dialog \">\r\n//                   <Input \r\n//                     title=\"Contribute\"\r\n//                     placeholder=\"MANA\" \r\n//                     onChange={e => this.updateField(\"contribution\", e)} \r\n//                     />\r\n//                   </div> \r\n//                   <div>\r\n//                     <Button className=\"contribute-form-btn\" type=\"submit\" onClick={this.approve} theme=\"success\" >\r\n//                       Approve\r\n//                     </Button>\r\n//                   </div>\r\n//                 </div>\r\n//               </Row>\r\n//             </form>\r\n//           :\r\n//           //Once MANA Approve txhash produced\r\n//           <div>\r\n//             {(() => {\r\n//               if(drizzleState.transactions[txHash]) {\r\n//               const status = drizzleState.transactions[txHash].status;\r\n//               switch (status) {\r\n//                 case 'pending':\r\n//                 return(\r\n//                   <div className=\"mx-auto\">   \r\n//                     <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n//                   </div>    \r\n//                 )\r\n//                 case 'success':\r\n//                   return (\r\n//                     <div>\r\n//                       <Row className=\"mt-2 justify-content-center contribute-form-dialog\">\r\n//                         <ContractData drizzle={drizzle} drizzleState={drizzleState} contract=\"MANAToken\" method=\"allowance\" methodArgs={[drizzleState.accounts[0], `${propAddress}`]} \r\n//                           render={data => (\r\n//                             <>\r\n//                               <p className=\"mb-1 contribute-form-dialog\">Approved For Deposit: <span className=\"locked-amount-number\">{Web3.utils.fromWei(`${data}`,'ether')}</span> MANA</p>\r\n//                             </>\r\n//                             //End of MANA Approve!txhash\r\n//                           )}\r\n//                         />\r\n//                       </Row>\r\n//                       <form onSubmit={this.deposit}>\r\n//                       <Row className=\"mt-1 justify-content-center contribute-form-dialog\">\r\n//                         <div className=\"modal-footer justify-content-center\">\r\n//                           <div>\r\n//                             {!transactionProcessing && !depTxHash ? \r\n//                               <Button className=\"btn-block btn-success contribute-form-btn\"  onClick={this.deposit} theme=\"success\" >\r\n//                                 Deposit&nbsp;{Web3.utils.fromWei(`${convertedContribution}`,'ether')}&nbsp;MANA\r\n//                               </Button>\r\n//                             :\r\n//                             //MANA Deposit depTxHash produced\r\n//                             <div>\r\n//                               {(() => {\r\n//                                 if(drizzleState.transactions[depTxHash]) {\r\n//                                 const depStatus = drizzleState.transactions[depTxHash].status;\r\n//                                 switch (depStatus) {\r\n//                                   case 'pending':\r\n//                                     return (\r\n//                                       <div className=\"mx-auto\">   \r\n//                                         <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n//                                       </div>   \r\n//                                     )\r\n//                                   case 'success':\r\n//                                     return  (\r\n//                                       <div className=\"modal-footer text-deposit-complete justify-content-center\">\r\n//                                         Deposit of&nbsp;{Web3.utils.fromWei(`${convertedContribution}`,'ether')}&nbsp;MANA Complete\r\n//                                       </div>\r\n//                                     )\r\n//                                   case 'error':\r\n//                                     return'error'\r\n//                                   default:\r\n//                                     return null;\r\n//                                 }\r\n//                               }\r\n//                               //End MANA Deposit depTxHash produced\r\n//                               })()}\r\n//                             </div>\r\n//                             }\r\n//                           </div>\r\n//                         </div>\r\n//                       </Row>\r\n//                     </form>  \r\n//                   </div>\r\n//                   )\r\n//                 case 'error':\r\n//                   return 'error';\r\n//                 default:\r\n//                   return null;\r\n//               }\r\n//             }\r\n//             {\r\n//               return(\r\n//                 <div className=\"mx-auto\">  \r\n//                   <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n//                 </div>   \r\n//               )\r\n//             }\r\n//             })()}\r\n//           </div>\r\n//         }\r\n\r\n//           <style jsx>\r\n//               {`  \r\n//               .contribution-modal{font-family: Poppins;}\r\n//               .amount-text {font-size:.9rem;color:#000;font-family: Poppins;}\r\n//               .amount-number {font-size:.9rem;color:#66a3ff;font-family: Poppins}\r\n//               .locked-amount-number {font-size:1rem;color:#66a3ff;font-family: Poppins}\r\n//               .contribute-form-btn {font-family: Poppins;letter-spacing:5.5px;padding:.6rem;}\r\n//               .contribute-form-dialog {font-family: Poppins; font-size:1rem;}\r\n//               .text-deposit-complete {font-family: Poppins; font-size:1rem;color:#17c671;}\r\n//               `}                \r\n//           </style>\r\n//         </div>\r\n//       )\r\n//   }\r\n//   else{\r\n//     return(\r\n//       <div className=\"mx-auto\">   \r\n//         contributeform 202\r\n//         <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n//       </div>     \r\n//         )\r\n//       }\r\n//    }\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contribComplete: state.appReducers.contribComplete,\r\n  proposalStorage: state.appReducers.proposalStorage,\r\n  contractBalance: state.appReducers.contractBalance,\r\n  nftAddress: state.appReducers.nftAddress,\r\n  transactionProcessing: state.appReducers.transactionProcessing,\r\n  stackId: state.appReducers.stackId,\r\n  depStackId: state.appReducers.depStackId,\r\n  convertedContribution: state.appReducers.convertedContribution,\r\n  processingDone: state.appReducers.processingDone,\r\n  approvedMana: state.appReducers.approvedMana\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  //gotContractBalance: (proposalBalance) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${proposalBalance}` }),\r\n  contributionComplete: () => dispatch({ type: \"CONTRIB_COMPLETE\", contribComplete: true }),\r\n  getStackId: (stackId,convertedContribution) => dispatch({ type: \"GOT_STACK_ID\", stackId:stackId, convertedContribution:convertedContribution}),\r\n  getDepStackId: (depStackId,convertedContribution) => dispatch({ type: \"GOT_DEP_STACK_ID\", depStackId:depStackId, convertedContribution:convertedContribution}),\r\n  runContributeSaga: (propAddress,drizzle,convertedContribution) => dispatch({ type: \"RUN_DEPOSIT_SAGA\",convertedContribution:convertedContribution, propAddress:propAddress, drizzle:drizzle }),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeForm);"]},"metadata":{},"sourceType":"module"}