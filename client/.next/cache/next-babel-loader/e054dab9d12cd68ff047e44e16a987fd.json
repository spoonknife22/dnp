{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '../Pagination';\nimport Nominations from '../Nominations';\nimport moment from \"moment\";\nimport Web3 from \"web3\"; //import { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js'\n\nconst InnerAbCard = ({\n  props,\n  userManaBalance,\n  projectTokenIds,\n  totalTokens\n}) => {\n  // console.log(projectTokenIds);\n  const _useState = useState([]),\n        orders = _useState[0],\n        setOrders = _useState[1];\n\n  const _useState2 = useState(false),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(1),\n        currentPage = _useState3[0],\n        setCurrentPage = _useState3[1];\n\n  const _useState4 = useState(6),\n        parcelsPerPage = _useState4[0];\n\n  const _useState5 = useState(),\n        totalOrders = _useState5[0],\n        setTotalOrders = _useState5[1];\n\n  console.log(orders); //useEffect(() => {\n\n  const fetchPosts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var proxyUrl, targetUrl, contractAddress, i, j, artArray, callsPerProject;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.opensea.io/api/v1/assets?';\n            contractAddress = 'asset_contract_address=0x1A92f7381B9F03921564a437210bB9396471050C&order_by=token_ids&order_direction=desc&offset=0&limit=50'; //asset_contract_address=0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d&event_type=created&only_opensea=false&offset=0&limit=100\n\n            artArray = []; //console.log(artArray);\n            //const callsPerProject = Math.ceil(totalTokens / 50);\n\n            callsPerProject = 3;\n\n            for (i = 0; i < callsPerProject; i++) {\n              //for (j = 0; j < 50; j++) {\n              // const tokenIdObject = result.data.projects[0].tokens[j];\n              // artArray.push(tokenIdObject.tokenId)\n              fetch(targetUrl + contractAddress, {\n                header: 'x-api-key:2f2a0900458f4bdfbb489680a58e7526'\n              }).then(res => res.json()).then(result => {\n                // console.log(result.assets);\n                artArray.push(...result.assets);\n              }, error => {\n                setLoading(true), error;\n              }).then(() => {\n                setOrders(artArray);\n                setLoading(false);\n              }, error => {\n                return error;\n              }); //}             \n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  fetchPosts(); //}, []);\n  // Get current posts\n\n  const indexOfLastParcel = currentPage * parcelsPerPage;\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\n  const currentParcels = orders.slice(indexOfFirstParcel, indexOfLastParcel);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(React.Fragment, null);\n};\n\nexport default InnerAbCard;","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/cards/InnerAbCard.js"],"names":["React","useState","useEffect","Pagination","Nominations","moment","Web3","InnerAbCard","props","userManaBalance","projectTokenIds","totalTokens","orders","setOrders","loading","setLoading","currentPage","setCurrentPage","parcelsPerPage","totalOrders","setTotalOrders","console","log","fetchPosts","proxyUrl","targetUrl","contractAddress","artArray","callsPerProject","i","fetch","header","then","res","json","result","push","assets","error","indexOfLastParcel","indexOfFirstParcel","currentParcels","slice","paginate","pageNumber"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,eAAT;AAA0BC,EAAAA,eAA1B;AAA2CC,EAAAA;AAA3C,CAAD,KAA8D;AAChF;AADgF,oBAEpDV,QAAQ,CAAC,EAAD,CAF4C;AAAA,QAEzEW,MAFyE;AAAA,QAEjEC,SAFiE;;AAAA,qBAGlDZ,QAAQ,CAAC,KAAD,CAH0C;AAAA,QAGzEa,OAHyE;AAAA,QAGhEC,UAHgE;;AAAA,qBAI1Cd,QAAQ,CAAC,CAAD,CAJkC;AAAA,QAIzEe,WAJyE;AAAA,QAI5DC,cAJ4D;;AAAA,qBAKvDhB,QAAQ,CAAC,CAAD,CAL+C;AAAA,QAKzEiB,cALyE;;AAAA,qBAM1CjB,QAAQ,EANkC;AAAA,QAMzEkB,WANyE;AAAA,QAM5DC,cAN4D;;AAOhFC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAPgF,CAQ9E;;AACE,QAAMW,UAAU;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,QADe,GACJ,sCADI,EAEnBC,SAFmB,GAEP,uCAFO;AAGfC,YAAAA,eAHe,GAGG,6HAHH,EAInB;;AAGIC,YAAAA,QAPe,GAOJ,EAPI,EAQnB;AACA;;AACMC,YAAAA,eAVa,GAUK,CAVL;;AAWnB,iBAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,eAAhB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC;AACE;AACA;AACJC,cAAAA,KAAK,CAACL,SAAS,GAAGC,eAAb,EAA6B;AAACK,gBAAAA,MAAM,EAAC;AAAR,eAA7B,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV;AACAR,gBAAAA,QAAQ,CAACS,IAAT,CAAc,GAAGD,MAAM,CAACE,MAAxB;AACD,eANL,EAOKC,KAAD,IAAW;AACTvB,gBAAAA,UAAU,CAAC,IAAD,CAAV,EACAuB,KADA;AAED,eAVL,EAYGN,IAZH,CAYQ,MAAM;AACVnB,gBAAAA,SAAS,CAACc,QAAD,CAAT;AACAZ,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACD,eAfH,EAgBGuB,KAAD,IAAW;AACT,uBAAOA,KAAP;AACC,eAlBL,EAJsC,CAyBtC;AACD;;AArCoB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVf,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAyCAA,EAAAA,UAAU,GAlDkE,CAmD9E;AAEF;;AACA,QAAMgB,iBAAiB,GAAGvB,WAAW,GAAGE,cAAxC;AACA,QAAMsB,kBAAkB,GAAGD,iBAAiB,GAAGrB,cAA/C;AACA,QAAMuB,cAAc,GAAG7B,MAAM,CAAC8B,KAAP,CAAaF,kBAAb,EAAiCD,iBAAjC,CAAvB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAI3B,cAAc,CAAC2B,UAAD,CAA7C;;AAIA,SACE,2BADF;AAeD,CA5ED;;AA8EA,eAAerC,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../Pagination';\r\nimport Nominations from '../Nominations'\r\nimport moment from \"moment\";\r\nimport Web3 from \"web3\";\r\n//import { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js'\r\n\r\nconst InnerAbCard = ({ props, userManaBalance, projectTokenIds, totalTokens }) => {\r\n  // console.log(projectTokenIds);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [parcelsPerPage] = useState(6);\r\n  const [totalOrders, setTotalOrders] = useState();\r\n  console.log(orders);\r\n    //useEffect(() => {\r\n      const fetchPosts = async () => { \r\n      var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n      targetUrl = 'https://api.opensea.io/api/v1/assets?';\r\n      let contractAddress = 'asset_contract_address=0x1A92f7381B9F03921564a437210bB9396471050C&order_by=token_ids&order_direction=desc&offset=0&limit=50'\r\n      //asset_contract_address=0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d&event_type=created&only_opensea=false&offset=0&limit=100\r\n      let i;\r\n      let j;\r\n      let artArray = [];\r\n      //console.log(artArray);\r\n      //const callsPerProject = Math.ceil(totalTokens / 50);\r\n      const callsPerProject = 3\r\n      for (i = 0; i < callsPerProject; i++) {\r\n        //for (j = 0; j < 50; j++) {\r\n          // const tokenIdObject = result.data.projects[0].tokens[j];\r\n          // artArray.push(tokenIdObject.tokenId)\r\n      fetch(targetUrl + contractAddress,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            // console.log(result.assets);\r\n            artArray.push(...result.assets);\r\n          },\r\n          (error) => {\r\n            setLoading(true),\r\n            error;\r\n          }\r\n        )\r\n        .then(() => {\r\n          setOrders(artArray);\r\n          setLoading(false);\r\n        },\r\n        (error) => {\r\n          return error;\r\n          }\r\n        ) \r\n\r\n      //}             \r\n    } \r\n      \r\n        }\r\n  \r\n      fetchPosts();\r\n    //}, []);\r\n\r\n  // Get current posts\r\n  const indexOfLastParcel = currentPage * parcelsPerPage;\r\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\r\n  const currentParcels = orders.slice(indexOfFirstParcel, indexOfLastParcel);\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n        {/* {orders.map((assetData) => \r\n         \r\n         <div key={assetData.id.toString()} className=\"mb-4 col-sm-12 col-md-12 col-lg-4\">\r\n         <div>{console.log(assetData)}\r\n        {assetData.id}\r\n         </div>  \r\n         </div>        \r\n       )} */}\r\n    </>\r\n\r\n\r\n  \r\n  );\r\n};\r\n\r\nexport default InnerAbCard;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}