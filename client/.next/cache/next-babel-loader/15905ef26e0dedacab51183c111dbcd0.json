{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\buttons\\\\CardFooterBtn.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport { Loader } from 'rimble-ui';\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, Button, Row } from \"shards-react\";\nimport NominationModal from '../modals/NominationModal';\nimport FundingModal from '../modals/FundingModal.js';\nimport SaleModal from '../modals/SaleModal.js';\nimport SoldModal from '../modals/PaidOutModal';\nimport PaidOutModal from '../modals/PaidOutModal.js';\nimport PurchaseModal from '../modals/PurchaseModal.js';\nimport NominationDetailsLink from '../NominationDetailsLink.js';\nimport Moment from \"react-moment\";\n\nconst CardFooterButton = ({\n  props,\n  userManaBalance,\n  getSoldStatus,\n  nftAddress,\n  expiresAt,\n  assetPrice,\n  tokenId,\n  orderId,\n  getOrderId,\n  orderStatus\n}) => {\n  _s();\n\n  const _useState = useState(),\n        isStatus = _useState[0],\n        setStatus = _useState[1];\n\n  const _useState2 = useState(null),\n        isStoredOrderId = _useState2[0],\n        setStoredOrderId = _useState2[1];\n\n  console.log(isStatus);\n  useEffect(() => {\n    fetchProposals();\n  }, [tokenId]);\n\n  const fetchProposals = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var proposal, proposalAddress, proposalBalance, propData, statusString, status, soldStatus;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return props.drizzle.contracts.ProposalController.methods.deployedProposals(\"\".concat(tokenId)).call();\n\n          case 2:\n            proposal = _context.sent;\n\n            if (!proposal) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.next = 6;\n            return props.drizzle.contracts.ProposalController.methods.proposalTokenIdMap(\"\".concat(tokenId)).call();\n\n          case 6:\n            proposalAddress = _context.sent;\n            _context.next = 9;\n            return props.drizzle.contracts.MANAToken.methods.balanceOf(\"\".concat(proposalAddress)).call();\n\n          case 9:\n            proposalBalance = _context.sent;\n            _context.next = 12;\n            return props.drizzle.contracts.ProposalController.methods.getPropData(\"\".concat(proposalAddress)).call();\n\n          case 12:\n            propData = _context.sent;\n            statusString = propData[0];\n            setStatus(statusString.toString());\n            status = propData[0];\n            getOrderId(propData[2]);\n            setStoredOrderId(propData[2]); //status 4\n\n            if (status === '4') {\n              if (proposalBalance > assetPrice) {\n                soldStatus = '6';\n                getSoldStatus(proposalBalance, soldStatus);\n                setStatus('6');\n              } else {\n                setStatus(status);\n                getOrderId(orderId);\n              }\n            } //status 4 End\n            else {\n                setStatus(status);\n                getOrderId(orderId);\n              }\n\n            _context.next = 22;\n            break;\n\n          case 21:\n            if (!proposal) {\n              setStatus();\n              getOrderId(orderId);\n              setStoredOrderId(null);\n            }\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposals() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // {(() => {\n\n\n  if (isStatus === '0' && \"\\\"\".concat(orderId, \"\\\"\") === \"\\\"\".concat(isStoredOrderId, \"\\\"\")) {\n    //0-FUNDING\n    return __jsx(CardFooter, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"stored:\", isStoredOrderId, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 39\n      }\n    }), \"current:\", orderId, __jsx(FundingModal, {\n      nftAddress: nftAddress,\n      tokenId: tokenId,\n      assetPrice: assetPrice,\n      expiresAt: expiresAt,\n      props: props,\n      userManaBalance: userManaBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }));\n  } else if (isStatus === '0' && \"\\\"\".concat(orderId, \"\\\"\") !== \"\\\"\".concat(isStoredOrderId, \"\\\"\")) {\n    return __jsx(CardFooter, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"stored:\", isStoredOrderId, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 39\n      }\n    }), \"current:\", orderId, __jsx(FundingModal, {\n      nftAddress: nftAddress,\n      tokenId: tokenId,\n      assetPrice: assetPrice,\n      expiresAt: expiresAt,\n      props: props,\n      userManaBalance: userManaBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }\n    }));\n  } else if (isStatus === '1') {\n    return __jsx(CardFooter, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, __jsx(PurchaseModal, {\n      nftAddress: nftAddress,\n      tokenId: tokenId,\n      assetPrice: assetPrice,\n      expiresAt: expiresAt,\n      props: props,\n      userManaBalance: userManaBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }));\n  } else if (isStatus === '4') {\n    return __jsx(CardFooter, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, __jsx(SaleModal, {\n      nftAddress: nftAddress,\n      tokenId: tokenId,\n      assetPrice: assetPrice,\n      expiresAt: expiresAt,\n      props: props,\n      userManaBalance: userManaBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }));\n  } else if (isStatus === '6') {\n    return __jsx(CardFooter, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, __jsx(SoldModal, {\n      nftAddress: nftAddress,\n      tokenId: tokenId,\n      assetPrice: assetPrice,\n      expiresAt: expiresAt,\n      props: props,\n      userManaBalance: userManaBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }));\n  } else if (isStatus === '7') {\n    return __jsx(CardFooter, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, __jsx(PaidOutModal, {\n      nftAddress: nftAddress,\n      tokenId: tokenId,\n      assetPrice: assetPrice,\n      expiresAt: expiresAt,\n      props: props,\n      userManaBalance: userManaBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }));\n  } else {\n    return __jsx(CardFooter, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, isStatus, __jsx(NominationModal, {\n      nftAddress: nftAddress,\n      tokenId: tokenId,\n      assetPrice: assetPrice,\n      expiresAt: expiresAt,\n      props: props,\n      orderId: orderId,\n      userManaBalance: userManaBalance,\n      orderStatus: orderStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }));\n  } //})}\n\n};\n\n_s(CardFooterButton, \"zKJHPHHYHDy0uH1mTfUQ/zAkTE0=\");\n\n_c = CardFooterButton;\nexport default CardFooterButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardFooterButton\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/buttons/CardFooterBtn.js"],"names":["React","useState","useEffect","connect","Web3","Loader","Card","CardHeader","CardBody","CardFooter","CardTitle","Button","Row","NominationModal","FundingModal","SaleModal","SoldModal","PaidOutModal","PurchaseModal","NominationDetailsLink","Moment","CardFooterButton","props","userManaBalance","getSoldStatus","nftAddress","expiresAt","assetPrice","tokenId","orderId","getOrderId","orderStatus","isStatus","setStatus","isStoredOrderId","setStoredOrderId","console","log","fetchProposals","drizzle","contracts","ProposalController","methods","deployedProposals","call","proposal","proposalTokenIdMap","proposalAddress","MANAToken","balanceOf","proposalBalance","getPropData","propData","statusString","toString","status","soldStatus"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport { Loader } from 'rimble-ui';\r\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, Button, Row } from \"shards-react\";\r\nimport NominationModal from '../modals/NominationModal';\r\nimport FundingModal from '../modals/FundingModal.js';\r\nimport SaleModal from '../modals/SaleModal.js';\r\nimport SoldModal from '../modals/PaidOutModal';\r\nimport PaidOutModal from '../modals/PaidOutModal.js';\r\nimport PurchaseModal from '../modals/PurchaseModal.js';\r\nimport NominationDetailsLink from '../NominationDetailsLink.js';\r\nimport Moment from \"react-moment\";\r\n\r\n\r\nconst CardFooterButton = ({ props, userManaBalance, getSoldStatus, nftAddress, expiresAt, assetPrice, tokenId, orderId, getOrderId, orderStatus }) => {\r\n\r\n  const [isStatus, setStatus] = useState();\r\n   const [isStoredOrderId, setStoredOrderId] = useState(null);\r\n   console.log(isStatus)\r\n  useEffect(() => {\r\n    fetchProposals();\r\n  }, [tokenId]);\r\n\r\n  const fetchProposals = async () => {\r\n    const proposal = await props.drizzle.contracts.ProposalController.methods.deployedProposals(`${tokenId}`).call();\r\n    if(proposal){\r\n      const proposalAddress = await props.drizzle.contracts.ProposalController.methods.proposalTokenIdMap(`${tokenId}`).call();\r\n      const proposalBalance = await props.drizzle.contracts.MANAToken.methods.balanceOf(`${proposalAddress}`).call();\r\n      const propData = await props.drizzle.contracts.ProposalController.methods.getPropData(`${proposalAddress}`).call();\r\n      const statusString = (propData[0])\r\n      setStatus(statusString.toString());\r\n      const status = propData[0];\r\n      getOrderId(propData[2]);\r\n      setStoredOrderId(propData[2])\r\n      //status 4\r\n      if(status === '4'){\r\n        if(proposalBalance > assetPrice){\r\n          const soldStatus = '6';\r\n          getSoldStatus(proposalBalance, soldStatus);\r\n          setStatus('6');\r\n        }\r\n        else{\r\n            setStatus(status);\r\n            getOrderId(orderId);\r\n        }\r\n      }\r\n      //status 4 End\r\n        else {\r\n          setStatus(status);\r\n          getOrderId(orderId);\r\n        }\r\n      }\r\n      else if (!proposal){\r\n        setStatus()\r\n        getOrderId(orderId);\r\n        setStoredOrderId(null)\r\n      }\r\n    }\r\n\r\n    // {(() => {\r\n      if(isStatus === '0' && `\"${orderId}\"` === `\"${isStoredOrderId}\"`){\r\n        //0-FUNDING\r\n        return (\r\n            <CardFooter className=\"p-0\">  \r\n              stored:{isStoredOrderId}<br></br>\r\n              current:{orderId}\r\n              <FundingModal \r\n                nftAddress={nftAddress}\r\n                tokenId={tokenId}\r\n                assetPrice={assetPrice}\r\n                expiresAt={expiresAt}  \r\n                props={props} \r\n                userManaBalance={userManaBalance}\r\n              />\r\n            </CardFooter> \r\n          )\r\n        }\r\n\r\n      else if(isStatus === '0' && `\"${orderId}\"` !== `\"${isStoredOrderId}\"`) {\r\n        return (\r\n            <CardFooter className=\"p-0\">  \r\n              stored:{isStoredOrderId}<br></br>\r\n              current:{orderId}\r\n               <FundingModal \r\n                nftAddress={nftAddress}\r\n                tokenId={tokenId}\r\n                assetPrice={assetPrice}\r\n                expiresAt={expiresAt}  \r\n                props={props} \r\n                userManaBalance={userManaBalance}\r\n              />\r\n            </CardFooter> \r\n        )\r\n      }\r\n      else if(isStatus === '1') {\r\n        return (\r\n            <CardFooter className=\"p-0\">\r\n              <PurchaseModal \r\n                nftAddress={nftAddress}\r\n                tokenId={tokenId}\r\n                assetPrice={assetPrice}\r\n                expiresAt={expiresAt} \r\n                props={props} \r\n                userManaBalance={userManaBalance}\r\n              />\r\n            </CardFooter> \r\n          )\r\n      }\r\n      else if(isStatus === '4') {\r\n        return (\r\n            <CardFooter className=\"p-0\">\r\n              <SaleModal \r\n                nftAddress={nftAddress}\r\n                tokenId={tokenId}\r\n                assetPrice={assetPrice}\r\n                expiresAt={expiresAt} \r\n                props={props} \r\n                userManaBalance={userManaBalance}\r\n              />\r\n            </CardFooter> \r\n        )\r\n    }\r\n      else if(isStatus === '6') {\r\n        return (\r\n                <CardFooter className=\"p-0\">\r\n                  <SoldModal \r\n                    nftAddress={nftAddress}\r\n                    tokenId={tokenId}\r\n                    assetPrice={assetPrice}\r\n                    expiresAt={expiresAt} \r\n                    props={props} \r\n                    userManaBalance={userManaBalance}\r\n                  />\r\n                </CardFooter> \r\n            )\r\n      }\r\n      else if(isStatus === '7') {\r\n        return (\r\n                <CardFooter className=\"p-0\">\r\n                  <PaidOutModal\r\n                    nftAddress={nftAddress}\r\n                    tokenId={tokenId}\r\n                    assetPrice={assetPrice}\r\n                    expiresAt={expiresAt} \r\n                    props={props} \r\n                    userManaBalance={userManaBalance}\r\n                  />\r\n                </CardFooter> \r\n            )\r\n      }\r\n      else{\r\n        return (\r\n          <CardFooter className=\"p-0\">\r\n            {isStatus}\r\n            <NominationModal\r\n              nftAddress={nftAddress}\r\n              tokenId={tokenId}\r\n              assetPrice={assetPrice}\r\n              expiresAt={expiresAt} \r\n              props={props} \r\n              orderId={orderId}\r\n              userManaBalance={userManaBalance}\r\n              orderStatus={orderStatus}\r\n            />\r\n          </CardFooter> \r\n        )\r\n      }\r\n    //})}\r\n  }\r\n  \r\n  export default CardFooterButton;"]},"metadata":{},"sourceType":"module"}