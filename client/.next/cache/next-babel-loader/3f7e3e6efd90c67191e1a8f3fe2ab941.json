{"ast":null,"code":"import { EventActions } from \"@drizzle/store\";\nimport { toast } from 'react-toastify'; // import { newContextComponents } from \"@drizzle/react-components\";\n// const { AccountData, ContractData, ContractForm } = newContextComponents;\n\nconst GET_PROP_ADDRESS = 'GET_PROP_ADDRESS';\nexport const joinTransactionSaga = store => next => action => {\n  if (action.type === 'TX_SUCCESSFUL') {\n    const transactionHash = action.txHash;\n    const transactionNumber = \"\".concat(transactionHash);\n    toast(transactionNumber, {\n      position: toast.POSITION.BOTTOM_LEFT,\n      className: 'successful-transaction'\n    });\n  }\n\n  return next(action);\n};\nexport const contractEventSaga = lastSeenEventId => store => next => action => {\n  if (action.type === EventActions.EVENT_FIRED) {\n    if (action.event.id !== lastSeenEventId) {\n      lastSeenEventId = action.event.id;\n\n      if (action.event.returnValues._proposalAddress) {\n        const propAddress = action.event.returnValues._proposalAddress;\n        const proposalAddress = \"\".concat(propAddress);\n        const display = \"\".concat(message);\n        store.dispatch({\n          type: \"GOT_PROP_ADDRESS\",\n          proposalAddress: proposalAddress\n        });\n        toast.info(display, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      if (action.event.returnValues._contribution) {\n        const message = action.event.returnValues._message;\n        const contribution = action.event.returnValues._contribution;\n        const poolDepth = action.event.returnValues.currentContractBalance;\n        store.dispatch({\n          type: \"PROPOSAL_BALANCE\",\n          balance: \"\".concat(poolDepth)\n        });\n        toast.info(\"\".concat(message, \" \").concat(contribution, \" MANA has been accepted.\"), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    }\n  }\n\n  return next(action);\n};","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/capMiddleWare.js"],"names":["EventActions","toast","GET_PROP_ADDRESS","joinTransactionSaga","store","next","action","type","transactionHash","txHash","transactionNumber","position","POSITION","BOTTOM_LEFT","className","contractEventSaga","lastSeenEventId","EVENT_FIRED","event","id","returnValues","_proposalAddress","propAddress","proposalAddress","display","message","dispatch","info","TOP_RIGHT","_contribution","_message","contribution","poolDepth","currentContractBalance","balance"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CACA;AACA;;AAEA,MAAMC,gBAAgB,GAAE,kBAAxB;AAEA,OAAO,MAAMC,mBAAmB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAC5D,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC,UAAMC,eAAe,GAAGF,MAAM,CAACG,MAA/B;AACA,UAAMC,iBAAiB,aAAMF,eAAN,CAAvB;AACAP,IAAAA,KAAK,CAACS,iBAAD,EAAoB;AAAEC,MAAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,CAAeC,WAA3B;AAAuCC,MAAAA,SAAS,EAAC;AAAjD,KAApB,CAAL;AACD;;AACD,SAAOT,IAAI,CAACC,MAAD,CAAX;AACD,CAPM;AAUP,OAAO,MAAMS,iBAAiB,GAAGC,eAAe,IAAIZ,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAC7E,MAAIA,MAAM,CAACC,IAAP,KAAgBP,YAAY,CAACiB,WAAjC,EAA8C;AAC5C,QAAIX,MAAM,CAACY,KAAP,CAAaC,EAAb,KAAoBH,eAAxB,EAAyC;AACvCA,MAAAA,eAAe,GAAGV,MAAM,CAACY,KAAP,CAAaC,EAA/B;;AACA,UAAGb,MAAM,CAACY,KAAP,CAAaE,YAAb,CAA0BC,gBAA7B,EAA8C;AAC7C,cAAMC,WAAW,GAAGhB,MAAM,CAACY,KAAP,CAAaE,YAAb,CAA0BC,gBAA9C;AACA,cAAME,eAAe,aAAMD,WAAN,CAArB;AACA,cAAME,OAAO,aAAMC,OAAN,CAAb;AACArB,QAAAA,KAAK,CAACsB,QAAN,CAAe;AAACnB,UAAAA,IAAI,EAAC,kBAAN;AAA0BgB,UAAAA,eAAe,EAACA;AAA1C,SAAf;AACAtB,QAAAA,KAAK,CAAC0B,IAAN,CAAWH,OAAX,EAAoB;AAAEb,UAAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,CAAegB;AAA3B,SAApB;AACC;;AACD,UAAGtB,MAAM,CAACY,KAAP,CAAaE,YAAb,CAA0BS,aAA7B,EAA2C;AAC1C,cAAMJ,OAAO,GAAGnB,MAAM,CAACY,KAAP,CAAaE,YAAb,CAA0BU,QAA1C;AACA,cAAMC,YAAY,GAAGzB,MAAM,CAACY,KAAP,CAAaE,YAAb,CAA0BS,aAA/C;AACA,cAAMG,SAAS,GAAG1B,MAAM,CAACY,KAAP,CAAaE,YAAb,CAA0Ba,sBAA5C;AACA7B,QAAAA,KAAK,CAACsB,QAAN,CAAe;AAACnB,UAAAA,IAAI,EAAC,kBAAN;AAA0B2B,UAAAA,OAAO,YAAIF,SAAJ;AAAjC,SAAf;AACA/B,QAAAA,KAAK,CAAC0B,IAAN,WAAcF,OAAd,cAAyBM,YAAzB,+BAAiE;AAAEpB,UAAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,CAAegB;AAA3B,SAAjE;AACA;AACH;AACF;;AACD,SAAOvB,IAAI,CAACC,MAAD,CAAX;AACD,CArBM","sourcesContent":["import { EventActions } from \"@drizzle/store\";\r\nimport { toast } from 'react-toastify';\r\n// import { newContextComponents } from \"@drizzle/react-components\";\r\n// const { AccountData, ContractData, ContractForm } = newContextComponents;\r\n\r\nconst GET_PROP_ADDRESS ='GET_PROP_ADDRESS';\r\n\r\nexport const joinTransactionSaga = store => next => action => {\r\n  if (action.type === 'TX_SUCCESSFUL') { \r\n    const transactionHash = action.txHash\r\n    const transactionNumber = `${transactionHash}`\r\n    toast(transactionNumber, { position: toast.POSITION.BOTTOM_LEFT,className:'successful-transaction' })\r\n  }\r\n  return next(action)\r\n}\r\n\r\n   \r\nexport const contractEventSaga = lastSeenEventId => store => next => action => {\r\n  if (action.type === EventActions.EVENT_FIRED) {\r\n    if (action.event.id !== lastSeenEventId) {\r\n      lastSeenEventId = action.event.id\r\n      if(action.event.returnValues._proposalAddress){\r\n       const propAddress = action.event.returnValues._proposalAddress\r\n       const proposalAddress = `${propAddress}`\r\n       const display = `${message}`\r\n       store.dispatch({type:\"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress})\r\n       toast.info(display, { position: toast.POSITION.TOP_RIGHT })\r\n       }\r\n       if(action.event.returnValues._contribution){\r\n        const message = action.event.returnValues._message\r\n        const contribution = action.event.returnValues._contribution\r\n        const poolDepth = action.event.returnValues.currentContractBalance\r\n        store.dispatch({type:\"PROPOSAL_BALANCE\", balance:`${poolDepth}`})\r\n        toast.info(`${message} ${contribution} MANA has been accepted.`, { position: toast.POSITION.TOP_RIGHT })\r\n       }\r\n    }\r\n  }\r\n  return next(action)\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}