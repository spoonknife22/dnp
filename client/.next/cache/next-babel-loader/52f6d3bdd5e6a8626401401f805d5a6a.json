{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { drizzleReducers } from '@drizzle/store';\nimport dappReducer from './transactionReducer';\nconst reducer = combineReducers(_objectSpread({\n  dappReducer\n}, drizzleReducers));\nexport default reducer; // const reducer = combineReducers({\n//   routing: routerReducer,\n//   todos,\n//   user,\n//   ...drizzleReducers\n// })\n// export default reducer","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/reducers/index.js"],"names":["combineReducers","drizzleReducers","dappReducer","reducer"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,MAAMC,OAAO,GAAIH,eAAe;AAC9BE,EAAAA;AAD8B,GAE3BD,eAF2B,EAAhC;AAKA,eAAeE,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { drizzleReducers } from '@drizzle/store';\r\nimport dappReducer from './transactionReducer';\r\n\r\nconst reducer =  combineReducers({\r\n  dappReducer,\r\n  ...drizzleReducers\r\n})\r\n\r\nexport default reducer;\r\n\r\n// const reducer = combineReducers({\r\n//   routing: routerReducer,\r\n//   todos,\r\n//   user,\r\n//   ...drizzleReducers\r\n// })\r\n// export default reducer"]},"metadata":{},"sourceType":"module"}