{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\OsSdk.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network, OpenSeaAsset } from 'opensea-js';\nimport React, { Component } from 'react';\nimport OpenSeaApi from \"./OpenSeaApi.js\";\nimport { OrderSide } from 'opensea-js/lib/types';\n\nconst OsSdk = () => {\n  const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\n  const seaport = new OpenSeaPort(provider, {\n    networkName: Network.Main,\n    apiKey: '2f2a0900458f4bdfbb489680a58e7526'\n  }); // let orderArray = [];\n  // console.log(orderArray)\n  // let i;\n  // let offsetNum=0;\n  // const callsPerProject = 3;\n  // console.log(offsetNum)\n  // Get offers (bids), a.k.a. orders where `side == 0`\n\n  useEffect(() => {\n    const fetchParcels = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$seaport$api$ge, orders, count;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return seaport.api.getOrders({\n                asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n                token_id: ['9876', '9997', '9996', '9995', '9994', '9993', '9992', '9991', '9998'],\n                side: OrderSide.Sell\n              });\n\n            case 2:\n              _yield$seaport$api$ge = _context.sent;\n              orders = _yield$seaport$api$ge.orders;\n              count = _yield$seaport$api$ge.count;\n              console.log(orders);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchParcels() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }); // for (i = 0; i < callsPerProject; i++, offsetNum+=20) { \n  //  seaport.api.getOrders({\n  //   asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n  //   side: OrderSide.Sell\n  // })\n  // .then(function(res) {\n  //     orderArray.push(...res.assets);\n  // },\n  //   (error) => {\n  //    //setLoading(true),\n  //     error;\n  //   }\n  // )   \n  // }\n\n  return __jsx(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Hi Joe\"));\n};\n\nexport default OsSdk; //https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=20&offset=0&order_by=created_date&order_direction=desc', options)","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/OsSdk.js"],"names":["Web3","OpenSeaPort","Network","OpenSeaAsset","React","Component","OpenSeaApi","OrderSide","OsSdk","provider","providers","HttpProvider","seaport","networkName","Main","apiKey","useEffect","fetchParcels","api","getOrders","asset_contract_address","token_id","side","Sell","orders","count","console","log"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,YAA/B,QAAoD,YAApD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAKA,MAAMC,KAAK,GAAI,MAAM;AAErB,QAAMC,QAAQ,GAAG,IAAIT,IAAI,CAACU,SAAL,CAAeC,YAAnB,CAAgC,2BAAhC,CAAjB;AAEA,QAAMC,OAAO,GAAG,IAAIX,WAAJ,CAAgBQ,QAAhB,EAA0B;AACxCI,IAAAA,WAAW,EAAEX,OAAO,CAACY,IADmB;AAExCC,IAAAA,MAAM,EAAE;AAFgC,GAA1B,CAAhB,CAJqB,CASrB;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,YAAY;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQL,OAAO,CAACM,GAAR,CAAYC,SAAZ,CAAsB;AACnDC,gBAAAA,sBAAsB,EAAE,4CAD2B;AAEnDC,gBAAAA,QAAQ,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,EAA6B,MAA7B,EAAoC,MAApC,EAA2C,MAA3C,EAAkD,MAAlD,EAAyD,MAAzD,CAFyC;AAGnDC,gBAAAA,IAAI,EAAEf,SAAS,CAACgB;AAHmC,eAAtB,CADR;;AAAA;AAAA;AAChBC,cAAAA,MADgB,yBAChBA,MADgB;AACRC,cAAAA,KADQ,yBACRA,KADQ;AAOvBC,cAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAPuB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZP,YAAY;AAAA;AAAA;AAAA,OAAlB;AAQE,GATG,CAAT,CAlBqB,CA6BrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADJ;AAQC,CApDD;;AAsDA,eAAeT,KAAf,C,CAKA","sourcesContent":["import * as Web3 from 'web3';\r\nimport { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js';\r\nimport React, { Component } from 'react';\r\nimport OpenSeaApi from \"./OpenSeaApi.js\";\r\nimport { OrderSide } from 'opensea-js/lib/types';\r\n\r\n\r\n\r\n\r\nconst OsSdk =  () => {\r\n\r\nconst provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\r\n\r\nconst seaport = new OpenSeaPort(provider, {\r\n  networkName: Network.Main,\r\n  apiKey: '2f2a0900458f4bdfbb489680a58e7526'\r\n});\r\n\r\n// let orderArray = [];\r\n// console.log(orderArray)\r\n\r\n// let i;\r\n// let offsetNum=0;\r\n// const callsPerProject = 3;\r\n// console.log(offsetNum)\r\n\r\n// Get offers (bids), a.k.a. orders where `side == 0`\r\nuseEffect(() => {\r\n    const fetchParcels = async () => {\r\nconst  { orders, count } = await seaport.api.getOrders({\r\n    asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n    token_id: ['9876','9997','9996','9995','9994','9993','9992','9991','9998'],\r\n    side: OrderSide.Sell\r\n  })\r\n\r\n  console.log(orders);\r\n    }})\r\n\r\n// for (i = 0; i < callsPerProject; i++, offsetNum+=20) { \r\n//  seaport.api.getOrders({\r\n//   asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n//   side: OrderSide.Sell\r\n\r\n// })\r\n// .then(function(res) {\r\n//     orderArray.push(...res.assets);\r\n// },\r\n//   (error) => {\r\n//    //setLoading(true),\r\n//     error;\r\n//   }\r\n// )   \r\n// }\r\nreturn (\r\n    <div className=\"container2\">\r\n    <div className=\"container1\">\r\n        Hi Joe\r\n    </div>\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nexport default OsSdk;\r\n\r\n\r\n\r\n\r\n//https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=20&offset=0&order_by=created_date&order_direction=desc', options)"]},"metadata":{},"sourceType":"module"}