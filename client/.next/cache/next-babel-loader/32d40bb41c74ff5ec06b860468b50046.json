{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ForSaleModal.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport NominationForm from '../forms/NominationForm';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\nimport ProposalForm from '../forms/ProposalForm';\nimport { Loader } from 'rimble-ui';\n\nconst ForSaleModal = ({\n  drizzle,\n  propAddress,\n  assetPrice\n}) => {\n  //const tokenId = parcel.parcel.tokenId;\n  const _useState = useState([]),\n        deposits = _useState[0],\n        setDespositInfo = _useState[1];\n\n  const _useState2 = useState(false),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  console.log(deposits);\n  useEffect(() => {\n    fetchProposalInfo();\n  }, [propAddress]);\n\n  const fetchProposalInfo = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var state, proposalContract, depositInfoLength, i, depositInfo;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            state = drizzle.store.getState();\n\n            if (!state.drizzleStatus.initialized) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 4;\n            return drizzle.contracts[\"\".concat(propAddress)];\n\n          case 4:\n            proposalContract = _context.sent;\n            _context.next = 7;\n            return proposalContract.methods.countDepositers().call();\n\n          case 7:\n            depositInfoLength = _context.sent;\n            i = 0;\n\n          case 9:\n            if (!(i < depositInfoLength)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 12;\n            return proposalContract.methods.depositers([i]).call();\n\n          case 12:\n            depositInfo = _context.sent;\n            setDespositInfo([depositInfo, {\n              amount: depositInfo.amount,\n              address: depositInfo.depositer\n            }]); //setDespositInfo(depositel => [...depositel, `${depositInfo.length}`]);\n            //console.log(depositInfo);\n\n          case 14:\n            i++;\n            _context.next = 9;\n            break;\n\n          case 17:\n            return _context.abrupt(\"return\", 'Loading....');\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalInfo() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //const proposalContract = await drizzle.contracts[`${propAddress}`];\n  // const contractData = await proposalContract.methods.proposals(`${tokenId}`).call();\n  // const { listPrice, balance, expiresAt } = contractData;\n  // const depositAmount = await proposalContract.methods.depositedAmount(drizzleState.accounts[0]).call();\n  // const proposalContract = drizzle.contracts[`${propAddress}`];\n\n\n  return __jsx(React.Fragment, null, propAddress ? //  {[assetData.asset].map((sub)=> \n  __jsx(\"div\", {\n    className: \"jsx-799425733\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }) // <ProposalForm                  \n  //   assetPrice={parcel.activeOrder.price}\n  //   expiresAt={parcel.activeOrder.expiresAt}  \n  //   nftAddress={parcel.activeOrder.nftAddress}  \n  //   props={props}\n  //   drizzle={drizzle}\n  //   drizzleState={drizzleState}\n  //   tokenId={tokenId}\n  //   userManaBalance={userManaBalance}\n  // /> \n  : __jsx(\"div\", {\n    className: \"jsx-799425733\" + \" \" + \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(Loader, {\n    className: \"mx-auto\",\n    color: \"#007bff\",\n    size: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"799425733\",\n    __self: this\n  }, \".current-price-title.jsx-799425733{font-size:1.3rem;}.nomintation-modal.jsx-799425733{font-family:Poppins;}.card-footer-btn.jsx-799425733{background:#17c671;color:#ffffff;}.btn-lg.jsx-799425733{border-radius:0rem;border-top-left-radius:0rem;border-top-right-radius:0rem;border-bottom-right-radius:.5rem;border-bottom-left-radius:.5rem;}.card-footer-btn.jsx-799425733:hover{background:#e6e6e6;color:#000000;}.mana-balance.jsx-799425733{font-size:.9rem;color:#000;font-weight:200;text-align:left;}.amount-number.jsx-799425733{font-family:Poppins;color:#66a3ff;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxjb21wb25lbnRzXFxtb2RhbHNcXEZvclNhbGVNb2RhbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RlcsQUFFbUQsQUFDRSxBQUNKLEFBQ1IsQUFLYyxBQUNaLEFBQ0ssZ0JBREssQ0FURCxFQUVVLEFBRWpCLEFBSXVCLENBUGQsQUFTTyxPQURRLE1BUE4sQUFNTSxDQUVQLFNBRHFCLElBSnJDLFlBSXNDLGlCQUhsQyxpQ0FDRCxnQ0FBQyIsImZpbGUiOiJDOlxcVXNlcnNcXFNhbXN1bmdcXGNvZGVcXGNhY3BcXGNsaWVudFxcY29tcG9uZW50c1xcbW9kYWxzXFxGb3JTYWxlTW9kYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgIFxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IE1vZGFsIGZyb20gJ3JlYWN0LWJvb3RzdHJhcC9Nb2RhbCc7XHJcbmltcG9ydCBOb21pbmF0aW9uRm9ybSBmcm9tICcuLi9mb3Jtcy9Ob21pbmF0aW9uRm9ybSc7XHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCBXZWIzIGZyb20gJ3dlYjMnO1xyXG5pbXBvcnQgUHJvcG9zYWxGb3JtIGZyb20gJy4uL2Zvcm1zL1Byb3Bvc2FsRm9ybSc7XHJcbmltcG9ydCB7IExvYWRlciB9IGZyb20gJ3JpbWJsZS11aSc7XHJcblxyXG5jb25zdCBGb3JTYWxlTW9kYWwgPSAoeyBkcml6emxlLCBwcm9wQWRkcmVzcywgYXNzZXRQcmljZSB9KSA9PiB7XHJcbiAgXHJcbiAgLy9jb25zdCB0b2tlbklkID0gcGFyY2VsLnBhcmNlbC50b2tlbklkO1xyXG5cclxuICBjb25zdCBbZGVwb3NpdHMsIHNldERlc3Bvc2l0SW5mb10gPSB1c2VTdGF0ZShbXSk7XHJcbiAgY29uc3QgW3Nob3csIHNldFNob3ddID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IGhhbmRsZVNob3cgPSAoKSA9PiBzZXRTaG93KHRydWUpO1xyXG4gIGNvbnN0IGhhbmRsZUNsb3NlID0gKCkgPT4gc2V0U2hvdyhmYWxzZSk7XHJcblxyXG4gIGNvbnNvbGUubG9nKGRlcG9zaXRzKVxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBmZXRjaFByb3Bvc2FsSW5mbygpO1xyXG4gIH0sIFtwcm9wQWRkcmVzc10pXHJcblxyXG4gIGNvbnN0IGZldGNoUHJvcG9zYWxJbmZvID0gYXN5bmMgKCkgPT4geyBcclxuICAgIGxldCBzdGF0ZSA9IGRyaXp6bGUuc3RvcmUuZ2V0U3RhdGUoKVxyXG4gICAgaWYoc3RhdGUuZHJpenpsZVN0YXR1cy5pbml0aWFsaXplZCl7XHJcbiAgICBjb25zdCBwcm9wb3NhbENvbnRyYWN0ID0gYXdhaXQgZHJpenpsZS5jb250cmFjdHNbYCR7cHJvcEFkZHJlc3N9YF07XHJcbiAgICBjb25zdCBkZXBvc2l0SW5mb0xlbmd0aCA9IGF3YWl0IHByb3Bvc2FsQ29udHJhY3QubWV0aG9kcy5jb3VudERlcG9zaXRlcnMoKS5jYWxsKCk7XHJcbiAgICB2YXIgaTtcclxuICAgIGZvciAoaSA9IDA7IGkgPCBkZXBvc2l0SW5mb0xlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGRlcG9zaXRJbmZvID0gYXdhaXQgcHJvcG9zYWxDb250cmFjdC5tZXRob2RzLmRlcG9zaXRlcnMoW2ldKS5jYWxsKCk7XHJcbiAgICAgIHNldERlc3Bvc2l0SW5mbyhbZGVwb3NpdEluZm8sIHtcclxuICAgICAgICBhbW91bnQ6IGRlcG9zaXRJbmZvLmFtb3VudCxcclxuICAgICAgICBhZGRyZXNzOiBkZXBvc2l0SW5mby5kZXBvc2l0ZXJcclxuICAgICAgfV0pO1xyXG4gICAgICAvL3NldERlc3Bvc2l0SW5mbyhkZXBvc2l0ZWwgPT4gWy4uLmRlcG9zaXRlbCwgYCR7ZGVwb3NpdEluZm8ubGVuZ3RofWBdKTtcclxuICAgXHJcbiAgICAgIC8vY29uc29sZS5sb2coZGVwb3NpdEluZm8pO1xyXG4gICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICB9XHJcbiAgIHJldHVybiAnTG9hZGluZy4uLi4nXHJcblxyXG4gIH1cclxuXHJcbiAgXHJcblxyXG4gIC8vY29uc3QgcHJvcG9zYWxDb250cmFjdCA9IGF3YWl0IGRyaXp6bGUuY29udHJhY3RzW2Ake3Byb3BBZGRyZXNzfWBdO1xyXG5cclxuICAvLyBjb25zdCBjb250cmFjdERhdGEgPSBhd2FpdCBwcm9wb3NhbENvbnRyYWN0Lm1ldGhvZHMucHJvcG9zYWxzKGAke3Rva2VuSWR9YCkuY2FsbCgpO1xyXG4gIC8vIGNvbnN0IHsgbGlzdFByaWNlLCBiYWxhbmNlLCBleHBpcmVzQXQgfSA9IGNvbnRyYWN0RGF0YTtcclxuICAvLyBjb25zdCBkZXBvc2l0QW1vdW50ID0gYXdhaXQgcHJvcG9zYWxDb250cmFjdC5tZXRob2RzLmRlcG9zaXRlZEFtb3VudChkcml6emxlU3RhdGUuYWNjb3VudHNbMF0pLmNhbGwoKTtcclxuICAvLyBjb25zdCBwcm9wb3NhbENvbnRyYWN0ID0gZHJpenpsZS5jb250cmFjdHNbYCR7cHJvcEFkZHJlc3N9YF07XHJcblxyXG5cclxuXHJcbiBcclxucmV0dXJuICggICBcclxuICAgICAgPD4gICBcclxuICBcclxuICAgICAgICB7LyogPE1vZGFsIGNsYXNzTmFtZT1cIm5vbWludGF0aW9uLW1vZGFsXCIgc2hvdz17c2hvd30gb25IaWRlPXtoYW5kbGVDbG9zZX0+XHJcbiAgICAgICAgPGRpdj4ge2RlcG9zaXRzfWJiYmJiYmJiPC9kaXY+ICAgIFxyXG4gICAgICAgICAgPE1vZGFsLkJvZHkgY2xhc3NOYW1lPVwicHQtMSBhbGlnbi1pdGVtcy1jZW50ZXJcIj4gKi99XHJcbiAgICAgICAgICB7cHJvcEFkZHJlc3MgPyAgIFxyXG4vLyAge1thc3NldERhdGEuYXNzZXRdLm1hcCgoc3ViKT0+IFxyXG5cclxuICAgICAgICA8ZGl2PiBcclxuICAgICAgIHsvKiB7ZGVwb3NpdHMuYW1vdW50fSAqL31cclxuICAgICAgICAgIHsvKiB7ZGVwb3NpdHMubWFwKChkZXBvc2l0KSA9PiB7XHJcbiAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgPGxpPntkZXBvc2l0LmFtb3VudH08L2xpPlxyXG4gICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgfSl9ICovfVxyXG5cclxuICAgICAgICAgIDwvZGl2PiAgICBcclxuICAgICAgICAgICAgLy8gPFByb3Bvc2FsRm9ybSAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyAgIGFzc2V0UHJpY2U9e3BhcmNlbC5hY3RpdmVPcmRlci5wcmljZX1cclxuICAgICAgICAgICAgLy8gICBleHBpcmVzQXQ9e3BhcmNlbC5hY3RpdmVPcmRlci5leHBpcmVzQXR9ICBcclxuICAgICAgICAgICAgLy8gICBuZnRBZGRyZXNzPXtwYXJjZWwuYWN0aXZlT3JkZXIubmZ0QWRkcmVzc30gIFxyXG4gICAgICAgICAgICAvLyAgIHByb3BzPXtwcm9wc31cclxuICAgICAgICAgICAgLy8gICBkcml6emxlPXtkcml6emxlfVxyXG4gICAgICAgICAgICAvLyAgIGRyaXp6bGVTdGF0ZT17ZHJpenpsZVN0YXRlfVxyXG4gICAgICAgICAgICAvLyAgIHRva2VuSWQ9e3Rva2VuSWR9XHJcbiAgICAgICAgICAgIC8vICAgdXNlck1hbmFCYWxhbmNlPXt1c2VyTWFuYUJhbGFuY2V9XHJcbiAgICAgICAgICAgIC8vIC8+IFxyXG4gICAgICAgICAgOlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFsaWduLWl0ZW1zLWNlbnRlclwiPiAgIFxyXG4gICAgICAgICAgICAgIDxMb2FkZXIgY2xhc3NOYW1lPVwibXgtYXV0b1wiIGNvbG9yPVwiIzAwN2JmZlwiIHNpemU9XCI0MHB4XCIgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICB9IFxyXG4gICAgICAgICAgey8qIDwvTW9kYWwuQm9keT5cclxuICAgICAgICA8L01vZGFsPiAqL31cclxuICAgICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgICAge2AgXHJcbiAgICAgICAgICAgICAgLmN1cnJlbnQtcHJpY2UtdGl0bGV7Zm9udC1zaXplOjEuM3JlbTt9XHJcbiAgICAgICAgICAgICAgLm5vbWludGF0aW9uLW1vZGFse2ZvbnQtZmFtaWx5OiBQb3BwaW5zO31cclxuICAgICAgICAgICAgICAuY2FyZC1mb290ZXItYnRue2JhY2tncm91bmQ6IzE3YzY3MTtjb2xvcjojZmZmZmZmO31cclxuICAgICAgICAgICAgICAuYnRuLWxne2JvcmRlci1yYWRpdXM6IDByZW07XHJcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwcmVtO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDByZW07XHJcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogLjVyZW07XHJcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAuNXJlbTt9XHJcbiAgICAgICAgICAgICAgLmNhcmQtZm9vdGVyLWJ0bjpob3ZlcntiYWNrZ3JvdW5kOiNlNmU2ZTY7Y29sb3I6IzAwMDAwMDt9XHJcbiAgICAgICAgICAgICAgLm1hbmEtYmFsYW5jZXtmb250LXNpemU6LjlyZW07Y29sb3I6IzAwMDtmb250LXdlaWdodDogMjAwO3RleHQtYWxpZ246bGVmdH1cclxuICAgICAgICAgICAgICAuYW1vdW50LW51bWJlcntmb250LWZhbWlseTpQb3BwaW5zO2NvbG9yOiM2NmEzZmY7fVxyXG4gICAgICAgICAgYH0gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgPC9zdHlsZT5cclxuICAgICAgPC8+XHJcbiAgICAgICAgKTsgICAgXHJcbiAgICAgIH0gXHJcblxyXG4vLyAgICAgICBjb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XHJcbi8vICAgICAgICAgcHJvcEFkZHJlc3M6IHN0YXRlLmFwcFJlZHVjZXJzLnByb3BBZGRyZXNzLFxyXG4vLyAgICAgICAgIHByb3Bvc2FsU3RvcmFnZTogc3RhdGUuYXBwUmVkdWNlcnMucHJvcG9zYWxTdG9yYWdlXHJcbi8vICAgICAgIH0pXHJcbiAgICAgICAgICAgXHJcbi8vICAgICAgIGNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IChkaXNwYXRjaCkgPT4gKHtcclxuLy8gICAgICAgICBnZXRUb2tlbklkOiAodG9rZW5JZCkgPT4gIGRpc3BhdGNoKHsgdHlwZTogXCJTRVRfVE9LRU5fSURcIiwgdG9rZW5JZDp0b2tlbklkIH0pLFxyXG4vLyAgICAgICAgIC8vZ2V0TmZ0QWRkcmVzczogKG5mdEFkZHJlc3MpID0+ICBkaXNwYXRjaCh7IHR5cGU6IFwiU0VUX05mdEFkZHJlc3NcIiwgTmZ0QWRkcmVzczpuZnRBZGRyZXNzIH0pLFxyXG4vLyAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICBcclxuLy8gZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoRm9yU2FsZU1vZGFsKTtcclxuZXhwb3J0IGRlZmF1bHQgRm9yU2FsZU1vZGFsOyJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Samsung\\\\\\\\code\\\\\\\\cacp\\\\\\\\client\\\\\\\\components\\\\\\\\modals\\\\\\\\ForSaleModal.js */\"));\n}; //       const mapStateToProps = (state) => ({\n//         propAddress: state.appReducers.propAddress,\n//         proposalStorage: state.appReducers.proposalStorage\n//       })\n//       const mapDispatchToProps = (dispatch) => ({\n//         getTokenId: (tokenId) =>  dispatch({ type: \"SET_TOKEN_ID\", tokenId:tokenId }),\n//         //getNftAddress: (nftAddress) =>  dispatch({ type: \"SET_NftAddress\", NftAddress:nftAddress }),\n//       });\n// export default connect(mapStateToProps, mapDispatchToProps)(ForSaleModal);\n\n\nexport default ForSaleModal;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ForSaleModal.js"],"names":["React","useState","useEffect","Modal","NominationForm","connect","Web3","ProposalForm","Loader","ForSaleModal","drizzle","propAddress","assetPrice","deposits","setDespositInfo","show","setShow","handleShow","handleClose","console","log","fetchProposalInfo","state","store","getState","drizzleStatus","initialized","contracts","proposalContract","methods","countDepositers","call","depositInfoLength","i","depositers","depositInfo","amount","address","depositer"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA;AAAxB,CAAD,KAA0C;AAE7D;AAF6D,oBAIzBX,QAAQ,CAAC,EAAD,CAJiB;AAAA,QAItDY,QAJsD;AAAA,QAI5CC,eAJ4C;;AAAA,qBAKrCb,QAAQ,CAAC,KAAD,CAL6B;AAAA,QAKtDc,IALsD;AAAA,QAKhDC,OALgD;;AAM7D,QAAMC,UAAU,GAAG,MAAMD,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAME,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC;;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACV,WAAD,CAFM,CAAT;;AAIA,QAAMU,iBAAiB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,KADoB,GACZZ,OAAO,CAACa,KAAR,CAAcC,QAAd,EADY;;AAAA,iBAErBF,KAAK,CAACG,aAAN,CAAoBC,WAFC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGOhB,OAAO,CAACiB,SAAR,WAAqBhB,WAArB,EAHP;;AAAA;AAGlBiB,YAAAA,gBAHkB;AAAA;AAAA,mBAIQA,gBAAgB,CAACC,OAAjB,CAAyBC,eAAzB,GAA2CC,IAA3C,EAJR;;AAAA;AAIlBC,YAAAA,iBAJkB;AAMnBC,YAAAA,CAAC,GAAG,CANe;;AAAA;AAAA,kBAMZA,CAAC,GAAGD,iBANQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOIJ,gBAAgB,CAACC,OAAjB,CAAyBK,UAAzB,CAAoC,CAACD,CAAD,CAApC,EAAyCF,IAAzC,EAPJ;;AAAA;AAOhBI,YAAAA,WAPgB;AAQtBrB,YAAAA,eAAe,CAAC,CAACqB,WAAD,EAAc;AAC5BC,cAAAA,MAAM,EAAED,WAAW,CAACC,MADQ;AAE5BC,cAAAA,OAAO,EAAEF,WAAW,CAACG;AAFO,aAAd,CAAD,CAAf,CARsB,CAYtB;AAEA;;AAdsB;AAMWL,YAAAA,CAAC,EANZ;AAAA;AAAA;;AAAA;AAAA,6CAmBlB,aAnBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBZ,iBAAiB;AAAA;AAAA;AAAA,KAAvB,CAd6D,CAuC7D;AAEA;AACA;AACA;AACA;;;AAKF,SACM,4BAKKV,WAAW,GACtB;AAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHc,CAYV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBU,IAuBV;AAAA,uCAAe,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BN;AAAA;AAAA;AAAA,+yOADN;AAoDO,CArGP,C,CAuGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;AACA,eAAeF,YAAf","sourcesContent":["  \r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport NominationForm from '../forms/NominationForm';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from 'web3';\r\nimport ProposalForm from '../forms/ProposalForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ForSaleModal = ({ drizzle, propAddress, assetPrice }) => {\r\n  \r\n  //const tokenId = parcel.parcel.tokenId;\r\n\r\n  const [deposits, setDespositInfo] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n\r\n  console.log(deposits)\r\n  useEffect(() => {\r\n    fetchProposalInfo();\r\n  }, [propAddress])\r\n\r\n  const fetchProposalInfo = async () => { \r\n    let state = drizzle.store.getState()\r\n    if(state.drizzleStatus.initialized){\r\n    const proposalContract = await drizzle.contracts[`${propAddress}`];\r\n    const depositInfoLength = await proposalContract.methods.countDepositers().call();\r\n    var i;\r\n    for (i = 0; i < depositInfoLength; i++) {\r\n      const depositInfo = await proposalContract.methods.depositers([i]).call();\r\n      setDespositInfo([depositInfo, {\r\n        amount: depositInfo.amount,\r\n        address: depositInfo.depositer\r\n      }]);\r\n      //setDespositInfo(depositel => [...depositel, `${depositInfo.length}`]);\r\n   \r\n      //console.log(depositInfo);\r\n     \r\n    }\r\n    \r\n    }\r\n   return 'Loading....'\r\n\r\n  }\r\n\r\n  \r\n\r\n  //const proposalContract = await drizzle.contracts[`${propAddress}`];\r\n\r\n  // const contractData = await proposalContract.methods.proposals(`${tokenId}`).call();\r\n  // const { listPrice, balance, expiresAt } = contractData;\r\n  // const depositAmount = await proposalContract.methods.depositedAmount(drizzleState.accounts[0]).call();\r\n  // const proposalContract = drizzle.contracts[`${propAddress}`];\r\n\r\n\r\n\r\n \r\nreturn (   \r\n      <>   \r\n  \r\n        {/* <Modal className=\"nomintation-modal\" show={show} onHide={handleClose}>\r\n        <div> {deposits}bbbbbbbb</div>    \r\n          <Modal.Body className=\"pt-1 align-items-center\"> */}\r\n          {propAddress ?   \r\n//  {[assetData.asset].map((sub)=> \r\n\r\n        <div> \r\n       {/* {deposits.amount} */}\r\n          {/* {deposits.map((deposit) => {\r\n            <ul>\r\n            <li>{deposit.amount}</li>\r\n            </ul>\r\n          })} */}\r\n\r\n          </div>    \r\n            // <ProposalForm                  \r\n            //   assetPrice={parcel.activeOrder.price}\r\n            //   expiresAt={parcel.activeOrder.expiresAt}  \r\n            //   nftAddress={parcel.activeOrder.nftAddress}  \r\n            //   props={props}\r\n            //   drizzle={drizzle}\r\n            //   drizzleState={drizzleState}\r\n            //   tokenId={tokenId}\r\n            //   userManaBalance={userManaBalance}\r\n            // /> \r\n          :\r\n            <div className=\"align-items-center\">   \r\n              <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n            </div>\r\n          } \r\n          {/* </Modal.Body>\r\n        </Modal> */}\r\n        <style jsx>\r\n          {` \r\n              .current-price-title{font-size:1.3rem;}\r\n              .nomintation-modal{font-family: Poppins;}\r\n              .card-footer-btn{background:#17c671;color:#ffffff;}\r\n              .btn-lg{border-radius: 0rem;\r\n                border-top-left-radius: 0rem;\r\n                border-top-right-radius: 0rem;\r\n                border-bottom-right-radius: .5rem;\r\n                border-bottom-left-radius: .5rem;}\r\n              .card-footer-btn:hover{background:#e6e6e6;color:#000000;}\r\n              .mana-balance{font-size:.9rem;color:#000;font-weight: 200;text-align:left}\r\n              .amount-number{font-family:Poppins;color:#66a3ff;}\r\n          `}                \r\n        </style>\r\n      </>\r\n        );    \r\n      } \r\n\r\n//       const mapStateToProps = (state) => ({\r\n//         propAddress: state.appReducers.propAddress,\r\n//         proposalStorage: state.appReducers.proposalStorage\r\n//       })\r\n           \r\n//       const mapDispatchToProps = (dispatch) => ({\r\n//         getTokenId: (tokenId) =>  dispatch({ type: \"SET_TOKEN_ID\", tokenId:tokenId }),\r\n//         //getNftAddress: (nftAddress) =>  dispatch({ type: \"SET_NftAddress\", NftAddress:nftAddress }),\r\n//       });\r\n        \r\n        \r\n// export default connect(mapStateToProps, mapDispatchToProps)(ForSaleModal);\r\nexport default ForSaleModal;"]},"metadata":{},"sourceType":"module"}