{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\NominationModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport NominationForm from '../forms/NominationForm';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\n\nconst NominationModal = ({\n  drizzleState,\n  drizzle,\n  parcel,\n  props,\n  userManaBalance,\n  getTokenId\n}) => {\n  _s();\n\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const {\n    0: tokenId,\n    1: setTokenId\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true); // let web3 = drizzle.web3;\n\n  let state = drizzle.store.getState();\n  let transactProcessing = state.transactionProcessing; // useEffect(  () => {\n  //   if(transactProcessing){ \n  //     setShow(true);\n  //   }\n  //   else{\n  //   setShow(false);\n  //   }\n  // }, [transactProcessing]);   \n\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  useEffect(() => {\n    if (transactProcessing) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n\n    const fetchDetailsLink = async () => {\n      const graphql = JSON.stringify({\n        query: `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) { tokenId }}`\n      });\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n            targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace';\n      fetch(proxyUrl + targetUrl, {\n        method: \"POST\",\n        headers: myHeaders,\n        body: graphql,\n        variables: {},\n        redirect: 'follow'\n      }).then(res => res.json()).then(result => {\n        const parcelData = result.data.parcels[0];\n        return parcelData;\n      }).then(result => {\n        const {\n          tokenId\n        } = result;\n\n        if (tokenId === null) {\n          setLoading(true);\n        }\n\n        setLoading(false);\n        return tokenId;\n      }).then(result => {\n        setTokenId(result);\n        getTokenId(result);\n      });\n    };\n\n    fetchDetailsLink();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-lg btn-block card-footer-btn\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Nominate Asset\"), __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    className: \"text-center justify-content-center\",\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    className: \"text-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Asset Price:\\xA0\", parcel.publication.price, \"\\xA0MANA\")), __jsx(Modal.Body, {\n    className: \"pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(NominationForm, {\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    assetPrice: parcel.publication.price,\n    props: props,\n    tokenId: tokenId,\n    userManaBalance: userManaBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }))));\n};\n\n_s(NominationModal, \"0IZIldQ2wRnkX0/p+j9ruYY9oLg=\");\n\n_c = NominationModal;\n\nconst mapStateToProps = state => ({\n  tokenIdState: state.tokenId,\n  txSuccessful: state.txSuccessful\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTokenId: result => dispatch({\n    type: \"TOKEN_ID_FETCH\",\n    tokenId: result\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NominationModal); //export default NominationModal;      \n\nvar _c;\n\n$RefreshReg$(_c, \"NominationModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/NominationModal.js"],"names":["React","useState","useEffect","Modal","NominationForm","connect","Web3","NominationModal","drizzleState","drizzle","parcel","props","userManaBalance","getTokenId","show","setShow","handleShow","handleClose","tokenId","setTokenId","loading","setLoading","state","store","getState","transactProcessing","transactionProcessing","myHeaders","Headers","append","fetchDetailsLink","graphql","JSON","stringify","query","x","y","proxyUrl","targetUrl","fetch","method","headers","body","variables","redirect","then","res","json","result","parcelData","data","parcels","publication","price","mapStateToProps","tokenIdState","txSuccessful","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["  \r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport NominationForm from '../forms/NominationForm';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from 'web3';\r\nconst NominationModal = ({ drizzleState, drizzle, parcel, props, userManaBalance, getTokenId }) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n  const [tokenId, setTokenId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // let web3 = drizzle.web3;\r\n  let state = drizzle.store.getState();\r\n  let transactProcessing = state.transactionProcessing;\r\n \r\n  // useEffect(  () => {\r\n\r\n  //   if(transactProcessing){ \r\n  //     setShow(true);\r\n  //   }\r\n  //   else{\r\n  //   setShow(false);\r\n  //   }\r\n  // }, [transactProcessing]);   \r\n\r\n\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  useEffect(() => {\r\n\r\n    if(transactProcessing){ \r\n      setShow(true);\r\n    }\r\n    else{\r\n    setShow(false);\r\n    }\r\n \r\n  const fetchDetailsLink = async () => {\r\n\r\n  const graphql= JSON.stringify({ query: \r\n  `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) { tokenId }}`\r\n})\r\n\r\n  const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n  targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\r\n\r\n  fetch(proxyUrl + targetUrl, {\r\n    method: \"POST\",\r\n    headers:myHeaders,  \r\n    body:graphql, variables:{},\r\n    redirect: 'follow'\r\n  })\r\n    .then(res => res.json())\r\n    .then((result) => {\r\n      const parcelData = result.data.parcels[0];\r\n      return parcelData;\r\n    })\r\n    .then((result) => { \r\n      const { tokenId } = result;\r\n      if(tokenId === null){\r\n        setLoading(true)\r\n      }\r\n      setLoading(false);\r\n      return tokenId;\r\n    })\r\n    .then((result) => {  \r\n      setTokenId(result);\r\n      getTokenId(result);\r\n    }) \r\n  };\r\nfetchDetailsLink();\r\n}, []);\r\n\r\n   \r\nreturn (   \r\n      <> \r\n        <button type=\"button\" className=\"btn btn-lg btn-block card-footer-btn\" onClick={handleShow}>Nominate Asset</button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header className=\"text-center justify-content-center\" closeButton>\r\n            <Modal.Title className=\"text-center justify-content-center\">Asset Price:&nbsp;{parcel.publication.price}&nbsp;MANA</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"pt-1\">\r\n            {/* <div className=\"text-center justify-content-center\">\r\n              Your Balance:&nbsp;{Web3.utils.fromWei(userManaBalance,'ether')}&nbsp;MANA\r\n            </div>   */}\r\n              <NominationForm                   \r\n                drizzle={drizzle}\r\n                drizzleState ={drizzleState}  \r\n                assetPrice={parcel.publication.price}  \r\n                props={props}\r\n                tokenId={tokenId}\r\n                userManaBalance ={userManaBalance}\r\n                /> \r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n        );    \r\n        } \r\n\r\n\r\n        const mapStateToProps = (state) => ({\r\n          tokenIdState: state.tokenId,\r\n          txSuccessful: state.txSuccessful,\r\n        })\r\n        \r\n        const mapDispatchToProps = (dispatch) => ({\r\n          getTokenId: (result) =>  dispatch({ type: \"TOKEN_ID_FETCH\", tokenId:result })\r\n        });\r\n        \r\n        \r\nexport default connect(mapStateToProps, mapDispatchToProps)(NominationModal);\r\n\r\n    //export default NominationModal;      "]},"metadata":{},"sourceType":"module"}