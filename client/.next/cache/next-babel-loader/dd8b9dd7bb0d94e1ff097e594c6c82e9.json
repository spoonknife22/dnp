{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\OsSdk.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network, OpenSeaAsset } from 'opensea-js';\nimport React, { Component, useEffect } from 'react';\nimport OpenSeaApi from \"./OpenSeaApi.js\";\nimport { OrderSide } from 'opensea-js/lib/types';\n\nconst OsSdk = tokenIdArray => {\n  _s();\n\n  const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\n  const seaport = new OpenSeaPort(provider, {\n    networkName: Network.Main,\n    apiKey: '2f2a0900458f4bdfbb489680a58e7526'\n  });\n  const idArray = tokenIdArray.tokenIdArray; //calls to reach collection total\n\n  useEffect(() => {\n    let orderArray = []; //console.log(tokenIdArray.tokenIdArray)\n\n    console.log(orderArray); //let tokenIdArray = [];\n\n    let i;\n    let j;\n    let offsetNum = 0;\n    const callsPerProject = Math.ceil(tokenIdArray.length / 50);\n\n    const fetchParcels = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$seaport$api$ge, orders;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              i = 0;\n\n            case 1:\n              if (!(i < callsPerProject)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 4;\n              return seaport.api.getOrders({\n                asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n                token_ids: tokenIdArray.tokenIdArray,\n                offset: offsetNum,\n                limit: 50,\n                side: 0,\n                sale_kind: 0\n              });\n\n            case 4:\n              _yield$seaport$api$ge = _context.sent;\n              orders = _yield$seaport$api$ge.orders;\n              orderArray.push(orders);\n              console.log(orders); //   .then(function(orders) {\n              //     orderArray.push(...orders.assets);\n              // },\n              //   (error) => {\n              //    //setLoading(true),\n              //     error;\n              //   }\n              // ) \n\n            case 8:\n              i++, offsetNum += 50;\n              _context.next = 1;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchParcels() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchParcels();\n  }, []); // for (i = 0; i < callsPerProject; i++, offsetNum+=20) { \n  //  seaport.api.getOrders({\n  //   asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n  //   side: OrderSide.Sell\n  // })\n  // .then(function(res) {\n  //     orderArray.push(...res.assets);\n  // },\n  //   (error) => {\n  //    //setLoading(true),\n  //     error;\n  //   }\n  // )   \n  // }\n\n  return __jsx(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, \"Hi Joe\"));\n};\n\n_s(OsSdk, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = OsSdk;\nexport default OsSdk; //https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=20&offset=0&order_by=created_date&order_direction=desc', options)\n\nvar _c;\n\n$RefreshReg$(_c, \"OsSdk\");","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/OsSdk.js"],"names":["Web3","OpenSeaPort","Network","OpenSeaAsset","React","Component","useEffect","OpenSeaApi","OrderSide","OsSdk","tokenIdArray","provider","providers","HttpProvider","seaport","networkName","Main","apiKey","idArray","orderArray","console","log","i","j","offsetNum","callsPerProject","Math","ceil","length","fetchParcels","api","getOrders","asset_contract_address","token_ids","offset","limit","side","sale_kind","orders","push"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,YAA/B,QAAoD,YAApD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAKA,MAAMC,KAAK,GAAIC,YAAD,IAAkB;AAAA;;AAEhC,QAAMC,QAAQ,GAAG,IAAIX,IAAI,CAACY,SAAL,CAAeC,YAAnB,CAAgC,2BAAhC,CAAjB;AAEA,QAAMC,OAAO,GAAG,IAAIb,WAAJ,CAAgBU,QAAhB,EAA0B;AACxCI,IAAAA,WAAW,EAAEb,OAAO,CAACc,IADmB;AAExCC,IAAAA,MAAM,EAAE;AAFgC,GAA1B,CAAhB;AAKA,QAAMC,OAAO,GAAGR,YAAY,CAACA,YAA7B,CATgC,CAYhC;;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AAChB,QAAIa,UAAU,GAAG,EAAjB,CADgB,CAGhB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAJgB,CAKhB;;AACA,QAAIG,CAAJ;AACA,QAAIC,CAAJ;AACA,QAAIC,SAAS,GAAC,CAAd;AAEA,UAAMC,eAAe,GAAGC,IAAI,CAACC,IAAL,CAAUjB,YAAY,CAACkB,MAAb,GAAsB,EAAhC,CAAxB;;AAEI,UAAMC,YAAY;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAEZP,cAAAA,CAAC,GAAG,CAFQ;;AAAA;AAAA,oBAELA,CAAC,GAAGG,eAFC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAISX,OAAO,CAACgB,GAAR,CAAYC,SAAZ,CAAsB;AAE5CC,gBAAAA,sBAAsB,EAAE,4CAFoB;AAG5CC,gBAAAA,SAAS,EAAEvB,YAAY,CAACA,YAHoB;AAI5CwB,gBAAAA,MAAM,EAAEV,SAJoC;AAK5CW,gBAAAA,KAAK,EAAE,EALqC;AAM5CC,gBAAAA,IAAI,EAAE,CANsC;AAO5CC,gBAAAA,SAAS,EAAE;AAPiC,eAAtB,CAJT;;AAAA;AAAA;AAIRC,cAAAA,MAJQ,yBAIRA,MAJQ;AAajBnB,cAAAA,UAAU,CAACoB,IAAX,CAAgBD,MAAhB;AACAlB,cAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAZ,EAdiB,CAejB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtBiB;AAEgBhB,cAAAA,CAAC,IAAIE,SAAS,IAAE,EAFhC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZK,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAyBAA,IAAAA,YAAY;AACf,GAtCQ,EAsCN,EAtCM,CAAT,CAfgC,CAuDhC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADJ;AAQC,CA9ED;;GAAMpB,K;;KAAAA,K;AAgFN,eAAeA,KAAf,C,CAKA","sourcesContent":["import * as Web3 from 'web3';\r\nimport { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js';\r\nimport React, { Component, useEffect } from 'react';\r\nimport OpenSeaApi from \"./OpenSeaApi.js\";\r\nimport { OrderSide } from 'opensea-js/lib/types';\r\n\r\n\r\n\r\n\r\nconst OsSdk = (tokenIdArray) => {\r\n\r\nconst provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\r\n\r\nconst seaport = new OpenSeaPort(provider, {\r\n  networkName: Network.Main,\r\n  apiKey: '2f2a0900458f4bdfbb489680a58e7526'\r\n});\r\n\r\nconst idArray = tokenIdArray.tokenIdArray;\r\n\r\n\r\n//calls to reach collection total\r\n\r\n\r\nuseEffect(() => {\r\nlet orderArray = [];\r\n\r\n//console.log(tokenIdArray.tokenIdArray)\r\nconsole.log(orderArray)\r\n//let tokenIdArray = [];\r\nlet i;\r\nlet j;\r\nlet offsetNum=0;\r\n\r\nconst callsPerProject = Math.ceil(tokenIdArray.length / 50);\r\n\r\n    const fetchParcels = async () => {\r\n\r\n        for (i = 0; i < callsPerProject; i++, offsetNum+=50) {\r\n\r\n        const  { orders } = await seaport.api.getOrders({\r\n     \r\n            asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n            token_ids: tokenIdArray.tokenIdArray,\r\n            offset: offsetNum,\r\n            limit: 50,\r\n            side: 0,\r\n            sale_kind: 0,\r\n        })\r\n        orderArray.push(orders);\r\n        console.log(orders)\r\n        //   .then(function(orders) {\r\n        //     orderArray.push(...orders.assets);\r\n        // },\r\n        //   (error) => {\r\n        //    //setLoading(true),\r\n        //     error;\r\n        //   }\r\n        // ) \r\n        }\r\n    }\r\n    fetchParcels();\r\n}, []);\r\n\r\n// for (i = 0; i < callsPerProject; i++, offsetNum+=20) { \r\n//  seaport.api.getOrders({\r\n//   asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n//   side: OrderSide.Sell\r\n\r\n// })\r\n// .then(function(res) {\r\n//     orderArray.push(...res.assets);\r\n// },\r\n//   (error) => {\r\n//    //setLoading(true),\r\n//     error;\r\n//   }\r\n// )   \r\n// }\r\nreturn (\r\n    <div className=\"container2\">\r\n    <div className=\"container1\">\r\n        Hi Joe\r\n    </div>\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nexport default OsSdk;\r\n\r\n\r\n\r\n\r\n//https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=20&offset=0&order_by=created_date&order_direction=desc', options)"]},"metadata":{},"sourceType":"module"}