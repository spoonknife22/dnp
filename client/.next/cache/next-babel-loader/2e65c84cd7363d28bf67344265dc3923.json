{"ast":null,"code":"import { generateStore, EventActions, TX_BROADCASTE } from '@drizzle/store';\nimport drizzleOptions from '../drizzleOptions';\nimport { toast } from 'react-toastify'; // const contractEventNotifier = store => next => action => {\n//   if (action.type === EventActions.EVENT_FIRED) {\n//     const contract = action.name\n//     const contractEvent = action.event.event\n//     const message = action.event.returnValues._message\n//     const display = `${message}`\n//     toast.success(display, { position: toast.POSITION.BOTTOM_RIGHT })\n//   }\n//   return next(action)\n// }\n\nconst joinTransactionNotifier = store => next => action => {\n  if (action.type === TX_BROADCASTE) {\n    const broadcast = action.txHash; //const txStatus = action.event.event\n\n    const message = action.txHash;\n    console.log(message);\n    const display = `${message}`;\n    toast.success(display, {\n      position: toast.POSITION.BOTTOM_RIGHT\n    });\n  }\n\n  return next(action);\n};\n\nconst appMiddlewares = [joinTransactionNotifier];\nexport default generateStore({\n  drizzleOptions,\n  appMiddlewares,\n  disableReduxDevTools: false // enable ReduxDevTools!\n\n});","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/middleware/index.js"],"names":["generateStore","EventActions","TX_BROADCASTE","drizzleOptions","toast","joinTransactionNotifier","store","next","action","type","broadcast","txHash","message","console","log","display","success","position","POSITION","BOTTOM_RIGHT","appMiddlewares","disableReduxDevTools"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,aAAtC,QAA2D,gBAA3D;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,uBAAuB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgBP,aAApB,EAAmC;AACjC,UAAMQ,SAAS,GAAGF,MAAM,CAACG,MAAzB,CADiC,CAEjC;;AACA,UAAMC,OAAO,GAAGJ,MAAM,CAACG,MAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,UAAMG,OAAO,GAAI,GAAEH,OAAQ,EAA3B;AAEAR,IAAAA,KAAK,CAACY,OAAN,CAAcD,OAAd,EAAuB;AAAEE,MAAAA,QAAQ,EAAEb,KAAK,CAACc,QAAN,CAAeC;AAA3B,KAAvB;AACD;;AACD,SAAOZ,IAAI,CAACC,MAAD,CAAX;AACD,CAXD;;AAaA,MAAMY,cAAc,GAAG,CAAGf,uBAAH,CAAvB;AAEA,eAAeL,aAAa,CAAC;AAC3BG,EAAAA,cAD2B;AAE3BiB,EAAAA,cAF2B;AAG3BC,EAAAA,oBAAoB,EAAE,KAHK,CAGE;;AAHF,CAAD,CAA5B","sourcesContent":["import { generateStore, EventActions, TX_BROADCASTE } from '@drizzle/store'\r\nimport drizzleOptions from '../drizzleOptions'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\n \r\n// const contractEventNotifier = store => next => action => {\r\n//   if (action.type === EventActions.EVENT_FIRED) {\r\n//     const contract = action.name\r\n//     const contractEvent = action.event.event\r\n//     const message = action.event.returnValues._message\r\n//     const display = `${message}`\r\n \r\n//     toast.success(display, { position: toast.POSITION.BOTTOM_RIGHT })\r\n//   }\r\n//   return next(action)\r\n// }\r\n\r\nconst joinTransactionNotifier = store => next => action => {\r\n  if (action.type === TX_BROADCASTE) {\r\n    const broadcast = action.txHash\r\n    //const txStatus = action.event.event\r\n    const message = action.txHash\r\n    console.log(message)\r\n    const display = `${message}`\r\n \r\n    toast.success(display, { position: toast.POSITION.BOTTOM_RIGHT })\r\n  }\r\n  return next(action)\r\n}\r\n\r\nconst appMiddlewares = [  joinTransactionNotifier ]\r\n\r\nexport default generateStore({\r\n  drizzleOptions,\r\n  appMiddlewares,\r\n  disableReduxDevTools: false  // enable ReduxDevTools!\r\n})"]},"metadata":{},"sourceType":"module"}