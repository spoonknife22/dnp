{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2({\n    props,\n    gotContractBalance,\n    gotPropContract,\n    proposalStorageAbi\n  }) {\n    var drizzleState, drizzle, propAddress, tokenId, assetPrice, web3, account, manaContract, approvedMana, fetchProposalAddress;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _s();\n\n          drizzleState = props.drizzleState, drizzle = props.drizzle, propAddress = props.propAddress, tokenId = props.tokenId, assetPrice = props.assetPrice;\n          web3 = new Web3(Web3.givenProvider);\n          account = drizzleState.accounts[0];\n          manaContract = drizzle.contracts.MANAToken;\n          _context2.next = 7;\n          return manaContract.methods.allowance.cacheCall(account, propAddress);\n\n        case 7:\n          approvedMana = _context2.sent;\n          ;\n          console.log(approvedMana);\n\n          if (!(tokenId === null)) {\n            _context2.next = 12;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", __jsx(\"div\", {\n            className: \"mx-auto\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 7\n            }\n          }, \"TokenId\", console.log(tokenId), __jsx(Loader, {\n            color: \"#007bff\",\n            size: \"40px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 9\n            }\n          })));\n\n        case 12:\n          propAddress && proposalStorageAbi ? useEffect(() => {\n            fetchProposalAddress();\n          }, [propAddress]) : __jsx(\"div\", {\n            className: \"mx-auto\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 5\n            }\n          }, propAddress, \" ContributeInnerModal 27\", __jsx(Loader, {\n            color: \"#007bff\",\n            size: \"40px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 7\n            }\n          }));\n\n          fetchProposalAddress = /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              var proposalAddress, contractConfig, events, proposalContract, propBalance, manaContract, approvedMana;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    proposalAddress = \"\".concat(propAddress);\n                    contractConfig = {\n                      contractName: \"\".concat(propAddress),\n                      web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\n                    };\n\n                    if (!drizzle.contracts[\"\".concat(propAddress)]) {\n                      events = ['ContributionSuccess', 'ProposalEvent', 'LogNewProvableQuery', 'RandomFailure'];\n                      drizzle.addContract(contractConfig, events);\n                    }\n\n                    if (!drizzle.contracts[\"\".concat(propAddress)]) {\n                      _context.next = 14;\n                      break;\n                    }\n\n                    proposalContract = drizzle.contracts[\"\".concat(propAddress)];\n                    _context.next = 7;\n                    return proposalContract.methods.getSummary(\"\".concat(tokenId)).call();\n\n                  case 7:\n                    propBalance = _context.sent;\n                    manaContract = drizzle.contracts.MANAToken;\n                    _context.next = 11;\n                    return manaContract.methods.allowance.cacheCall(account, propAddress);\n\n                  case 11:\n                    approvedMana = _context.sent;\n                    gotContractBalance(propBalance, approvedMana);\n                    gotPropContract(proposalContract);\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n\n            return function fetchProposalAddress() {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n\n          if (!(propAddress === null || propAddress === 'undefined')) {\n            _context2.next = 18;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", __jsx(\"div\", {\n            className: \"mx-auto\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 5\n            }\n          }, propAddress, \" ContributeInnerModal 52\", __jsx(Loader, {\n            className: \"mx-auto\",\n            color: \"#007bff\",\n            size: \"40px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 7\n            }\n          })));\n\n        case 18:\n          return _context2.abrupt(\"return\", __jsx(React.Fragment, null, __jsx(ContributeForm, {\n            drizzle: drizzle,\n            drizzleState: drizzleState,\n            assetPrice: assetPrice,\n            propAddress: propAddress,\n            tokenId: tokenId,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 11\n            }\n          })));\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }), \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n\n  return function ContributeInnnerModal(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = ContributeInnnerModal;\n\nconst mapStateToProps = state => ({\n  proposalStorageAbi: state.appReducers.proposalStorageAbi\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gotContractBalance: (propBalance, approvedMana) => dispatch({\n    type: 'PROPOSAL_BALANCE',\n    balance: \"\".concat(propBalance),\n    approvedMana: approvedMana\n  }),\n  gotPropContract: proposalContract => dispatch({\n    type: 'PROPOSAL_STORAGE_CONTRACT',\n    proposalStorage: proposalContract\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeInnnerModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","connect","Web3","ContributeForm","Loader","ContributeInnnerModal","props","gotContractBalance","gotPropContract","proposalStorageAbi","drizzleState","drizzle","propAddress","tokenId","assetPrice","web3","givenProvider","account","accounts","manaContract","contracts","MANAToken","methods","allowance","cacheCall","approvedMana","console","log","fetchProposalAddress","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","events","addContract","proposalContract","getSummary","call","propBalance","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","type","balance","proposalStorage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal = async ({ props, gotContractBalance, gotPropContract, proposalStorageAbi }) => {\r\n  const { drizzleState, drizzle, propAddress, tokenId, assetPrice } = props;\r\n  let web3 = new Web3(Web3.givenProvider);\r\n  const account = drizzleState.accounts[0];\r\n  const manaContract = drizzle.contracts.MANAToken; \r\n  const approvedMana = await manaContract.methods.allowance.cacheCall(account,propAddress);;\r\n  console.log(approvedMana)\r\n\r\n  if(tokenId === null){\r\n    return(\r\n      <div className=\"mx-auto\">   \r\n      TokenId{console.log(tokenId)}\r\n        <Loader color=\"#007bff\" size=\"40px\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  {propAddress && proposalStorageAbi ? \r\n    useEffect(() => {\r\n      fetchProposalAddress();\r\n    }, [propAddress])\r\n\r\n  :\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 27\r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\nconst fetchProposalAddress = async () => {\r\n      let proposalAddress = `${propAddress}`;\r\n      const contractConfig = {\r\n        contractName: `${propAddress}`,\r\n        web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\r\n      };\r\n      if (!drizzle.contracts[`${propAddress}`]) {\r\n      let events = ['ContributionSuccess','ProposalEvent','LogNewProvableQuery','RandomFailure'] ;  \r\n      drizzle.addContract(contractConfig, events);\r\n      }\r\n      if(drizzle.contracts[`${propAddress}`]){\r\n        const proposalContract = drizzle.contracts[`${propAddress}`];\r\n        const propBalance = await proposalContract.methods.getSummary(`${tokenId}`).call();\r\n        const manaContract = drizzle.contracts.MANAToken; \r\n        const approvedMana = await manaContract.methods.allowance.cacheCall(account,propAddress);\r\n  \r\n        gotContractBalance(propBalance, approvedMana); \r\n        gotPropContract(proposalContract);\r\n    }\r\n}\r\n\r\nif(propAddress === null || propAddress === 'undefined') {\r\n  return (\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 52\r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  )\r\n}  \r\nelse {\r\n  return ( \r\n        <>\r\n          <ContributeForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} propAddress={propAddress} tokenId={tokenId} />\r\n        </>\r\n      );    \r\n  } \r\n}\r\n\r\n  const mapStateToProps = (state) => ({\r\n    proposalStorageAbi: state.appReducers.proposalStorageAbi\r\n  })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  gotContractBalance: (propBalance,approvedMana) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${propBalance}`, approvedMana:approvedMana }),\r\n  gotPropContract: (proposalContract) => dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:proposalContract})\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);"]},"metadata":{},"sourceType":"module"}