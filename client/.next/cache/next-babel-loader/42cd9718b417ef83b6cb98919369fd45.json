{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\InterMediateForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass InterMediateForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataKey: null\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          drizzle = _this$props.drizzle,\n          drizzleState = _this$props.drizzleState,\n          propAddress = _this$props.propAddress,\n          tokenId = _this$props.tokenId; // let state = drizzle.store.getState();\n    // if (state.drizzleStatus.initialized && propAddress ) {\n\n    const contract = drizzle.contracts[\"\".concat(propAddress)];\n    const dataKey = contract.methods['getSummary'].cacheCall(tokenId);\n    this.setState({\n      dataKey\n    }); // const propContracts = state.contracts[`${propAddress}`];\n    // const displayData = await propContracts.methods['getSummary'][this.state.dataKey]; \n    // const userId =  displayData && displayData.value;\n    // }\n    // else{\n    //   console.log('loading')\n    // }\n  }\n\n  render() {\n    // const { drizzle, propAddress } = this.props;\n    // let state = drizzle.store.getState();\n    // if (state.drizzleStatus.initialized) {\n    //   const propContract = state.contracts[`${propAddress}`];\n    // const displayData = propContract.methods['getSummary'][this.state.dataKey]; \n    // const userId =  displayData && displayData.value;\n    // console.log(userId)\n    //}\n    // console.log(this.state.dataKey)\n    // const { propAddress } = this.props.drizzleState.contracts;\n    // const displayData = this.props.drizzleState.contractspropAddress.getSummary[this.state.dataKey]; \n    // const userId =  displayData && displayData.value;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    }, \"'dddd'\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  proposalStorage: state.appReducers.proposalStorage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPropAbi: ProposalStorageAbi => dispatch({\n    type: \"GOT_PROP_ABI\",\n    proposalStorageAbi: ProposalStorageAbi\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InterMediateForm);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/InterMediateForm.js"],"names":["React","Component","connect","InterMediateForm","constructor","props","state","dataKey","componentDidMount","drizzle","drizzleState","propAddress","tokenId","contract","contracts","methods","cacheCall","setState","render","mapStateToProps","proposalStorage","appReducers","mapDispatchToProps","dispatch","getPropAbi","ProposalStorageAbi","type","proposalStorageAbi"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACvCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC;AADG,KAAb;AAGD;;AAEHC,EAAAA,iBAAiB,GAAG;AAAA,wBACwC,KAAKH,KAD7C;AAAA,UACRI,OADQ,eACRA,OADQ;AAAA,UACCC,YADD,eACCA,YADD;AAAA,UACeC,WADf,eACeA,WADf;AAAA,UAC4BC,OAD5B,eAC4BA,OAD5B,EAEhB;AACA;;AACA,UAAMC,QAAQ,GAAGJ,OAAO,CAACK,SAAR,WAAqBH,WAArB,EAAjB;AACA,UAAMJ,OAAO,GAAGM,QAAQ,CAACE,OAAT,CAAiB,YAAjB,EAA+BC,SAA/B,CAAyCJ,OAAzC,CAAhB;AACA,SAAKK,QAAL,CAAc;AACZV,MAAAA;AADY,KAAd,EANgB,CAShB;AACA;AACA;AACF;AACA;AACA;AACA;AACC;;AAEDW,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAKD;;AA5CsC;;AAgDzC,MAAMC,eAAe,GAAIb,KAAD,KAAY;AAClCc,EAAAA,eAAe,EAAEd,KAAK,CAACe,WAAN,CAAkBD;AADD,CAAZ,CAAxB;;AAIA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,UAAU,EAAGC,kBAAD,IAAyBF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,kBAAkB,EAACF;AAA3C,GAAD;AADL,CAAf,CAA3B;;AAIA,eAAevB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n   \r\nclass InterMediateForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataKey:null\r\n    }\r\n  }\r\n\r\ncomponentDidMount() {   \r\n    const { drizzle, drizzleState, propAddress, tokenId } = this.props;\r\n    // let state = drizzle.store.getState();\r\n    // if (state.drizzleStatus.initialized && propAddress ) {\r\n    const contract = drizzle.contracts[`${propAddress}`];\r\n    const dataKey = contract.methods['getSummary'].cacheCall(tokenId);\r\n    this.setState({\r\n      dataKey\r\n    });\r\n    // const propContracts = state.contracts[`${propAddress}`];\r\n    // const displayData = await propContracts.methods['getSummary'][this.state.dataKey]; \r\n    // const userId =  displayData && displayData.value;\r\n  // }\r\n  // else{\r\n  //   console.log('loading')\r\n  // }\r\n  }\r\n  \r\n  render() {\r\n    // const { drizzle, propAddress } = this.props;\r\n    // let state = drizzle.store.getState();\r\n    // if (state.drizzleStatus.initialized) {\r\n    //   const propContract = state.contracts[`${propAddress}`];\r\n    // const displayData = propContract.methods['getSummary'][this.state.dataKey]; \r\n    // const userId =  displayData && displayData.value;\r\n    // console.log(userId)\r\n    //}\r\n    // console.log(this.state.dataKey)\r\n    // const { propAddress } = this.props.drizzleState.contracts;\r\n    // const displayData = this.props.drizzleState.contractspropAddress.getSummary[this.state.dataKey]; \r\n    // const userId =  displayData && displayData.value;\r\n    return (\r\n     <div>\r\n       'dddd'\r\n     </div>\r\n    )\r\n  }\r\n}   \r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  proposalStorage: state.appReducers.proposalStorage\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getPropAbi: (ProposalStorageAbi) =>  dispatch({ type: \"GOT_PROP_ABI\", proposalStorageAbi:ProposalStorageAbi })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InterMediateForm);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}