{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\InitialContributeModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { CardFooter, Button, Progress, Slider } from \"shards-react\";\nimport Web3 from \"web3\";\nimport CppContribSlider from '../sliders/CppContributeSlider';\nimport ContributeForm from '../forms/ContributeForm';\n\nconst ContributeModal = ({\n  drizzle,\n  state,\n  handleSlide,\n  propAddress,\n  tokenId,\n  assetPrice\n}) => {\n  _s();\n\n  const _useState = useState(false),\n        show = _useState[0],\n        setShow = _useState[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  let value = state.value;\n  let valueSlider = state.valueSlider;\n  let maxRanger = Web3.utils.fromWei(\"\".concat(assetPrice), 'ether');\n  let maxRange = parseInt(maxRanger);\n  let minRange = 3;\n  let progressMax = maxRange - minRange;\n  return __jsx(React.Fragment, null, __jsx(CardFooter, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-lg btn-block card-footer-btn\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Fund Purchase\")), __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Fund Asset Purchase\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"current-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }\n  }, __jsx(Progress, {\n    value: minRange,\n    max: Web3.utils.fromWei(assetPrice, 'ether'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, minRange), __jsx(\"p\", {\n    className: \"mt-2 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"Current Price:\\xA0\", Web3.utils.fromWei(assetPrice, 'ether'), \"\\xA0ETH\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }, __jsx(\"p\", {\n    className: \"mt-4 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }\n  }, \"Current Pool Depth: \", minRange, \" ETH\"), __jsx(Slider, {\n    theme: \"success\",\n    step: .01,\n    pips: {\n      mode: \"range\",\n      stepped: true,\n      density: 3\n    },\n    onSlide: handleSlide,\n    connect: [true, false],\n    start: [valueSlider],\n    range: {\n      min: 0,\n      max: progressMax\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, valueSlider, \" ETH \")))), __jsx(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })));\n}; //export default ContributeModal;      \n\n\n_s(ContributeModal, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = ContributeModal;\nexport default class InitialContributeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSlide = this.handleSlide.bind(this), this.state = {\n      error: null,\n      isLoaded: false,\n      value: 0,\n      valueSlider: 0,\n      contribAmount: 0,\n      assetData: []\n    };\n  }\n\n  handleSlide(e) {\n    this.setState({\n      valueSlider: parseFloat(e[0])\n    });\n  }\n\n  render() {\n    return __jsx(ContributeModal, {\n      propAddress: this.props.propAddress,\n      userManaBalance: this.props.serManaBalance,\n      assetPrice: this.props.assetPrice,\n      drizzleState: this.props.drizzleState,\n      drizzle: this.props.drizzle,\n      tokenId: this.props.tokenId,\n      handleSlide: this.handleSlide,\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/InitialContributeModal.js"],"names":["React","Component","useState","Modal","CardFooter","Button","Progress","Slider","Web3","CppContribSlider","ContributeForm","ContributeModal","drizzle","state","handleSlide","propAddress","tokenId","assetPrice","show","setShow","handleClose","handleShow","value","valueSlider","maxRanger","utils","fromWei","maxRange","parseInt","minRange","progressMax","mode","stepped","density","min","max","InitialContributeModal","constructor","props","bind","error","isLoaded","contribAmount","assetData","e","setState","parseFloat","render","serManaBalance","drizzleState"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,cAArD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAGA,MAAMC,eAAe,GAAG,CAAE;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,WAAjB;AAA8BC,EAAAA,WAA9B;AAA2CC,EAAAA,OAA3C;AAAoDC,EAAAA;AAApD,CAAF,KAAuE;AAAA;;AAAA,oBAGrEf,QAAQ,CAAC,KAAD,CAH6D;AAAA,QAGtFgB,IAHsF;AAAA,QAGhFC,OAHgF;;AAI7F,QAAMC,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,MAAIG,KAAK,GAAIT,KAAK,CAACS,KAAnB;AACA,MAAIC,WAAW,GAAGV,KAAK,CAACU,WAAxB;AACA,MAAIC,SAAS,GAAGhB,IAAI,CAACiB,KAAL,CAAWC,OAAX,WAAsBT,UAAtB,GAAmC,OAAnC,CAAhB;AACA,MAAIU,QAAQ,GAAGC,QAAQ,CAACJ,SAAD,CAAvB;AACA,MAAIK,QAAQ,GAAG,CAAf;AACA,MAAIC,WAAW,GAAGH,QAAQ,GAACE,QAA3B;AAEA,SAEM,4BACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sCAAhC;AAAuE,IAAA,OAAO,EAAER,UAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAKE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,MAAM,EAAEE,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAES,QAAjB;AAA2B,IAAA,GAAG,EAAErB,IAAI,CAACiB,KAAL,CAAWC,OAAX,CAAmBT,UAAnB,EAA8B,OAA9B,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0EY,QAA1E,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA+CrB,IAAI,CAACiB,KAAL,CAAWC,OAAX,CAAmBT,UAAnB,EAA8B,OAA9B,CAA/C,YAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA+CY,QAA/C,SADA,EAEE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAE,GAFR;AAGE,IAAA,IAAI,EAAE;AAAEE,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE,IAA1B;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAHR;AAIE,IAAA,OAAO,EAAEnB,WAJX;AAKE,IAAA,OAAO,EAAE,CAAC,IAAD,EAAO,KAAP,CALX;AAME,IAAA,KAAK,EAAE,CAACS,WAAD,CANT;AAOE,IAAA,KAAK,EAAE;AAAEW,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAEL;AAAf,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EAiBA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBP,WAAvB,UAjBA,CAFZ,CADA,CAJF,EA8BE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,CALF,CAFN;AA2CO,CAzDT,C,CA2DI;;;GA3DEZ,e;;KAAAA,e;AA8DF,eAAe,MAAMyB,sBAAN,SAAqCnC,SAArC,CAA+C;AAC1DoC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AACA,SAAKxB,WAAL,GAAmB,KAAKA,WAAL,CAAiByB,IAAjB,CAAsB,IAAtB,CAAnB,EAEA,KAAK1B,KAAL,GAAa;AACX2B,MAAAA,KAAK,EAAC,IADK;AAEXC,MAAAA,QAAQ,EAAC,KAFE;AAGXnB,MAAAA,KAAK,EAAE,CAHI;AAIXC,MAAAA,WAAW,EAAC,CAJD;AAKXmB,MAAAA,aAAa,EAAC,CALH;AAMXC,MAAAA,SAAS,EAAE;AANA,KAFb;AAUD;;AAGD7B,EAAAA,WAAW,CAAC8B,CAAD,EAAI;AACb,SAAKC,QAAL,CAAc;AACZtB,MAAAA,WAAW,EAAEuB,UAAU,CAACF,CAAC,CAAC,CAAD,CAAF;AADX,KAAd;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACA,MAAC,eAAD;AACE,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWvB,WAD1B;AAEE,MAAA,eAAe,EAAE,KAAKuB,KAAL,CAAWU,cAF9B;AAGE,MAAA,UAAU,EAAE,KAAKV,KAAL,CAAWrB,UAHzB;AAIE,MAAA,YAAY,EAAE,KAAKqB,KAAL,CAAWW,YAJ3B;AAKE,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAW1B,OALtB;AAME,MAAA,OAAO,EAAE,KAAK0B,KAAL,CAAWtB,OANtB;AAOE,MAAA,WAAW,EAAE,KAAKF,WAPpB;AAQE,MAAA,KAAK,EAAI,KAAKD,KARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAYD;;AAnC2D","sourcesContent":["\r\nimport React, { Component, useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CardFooter, Button, Progress, Slider } from \"shards-react\";\r\nimport Web3 from \"web3\";\r\nimport CppContribSlider from '../sliders/CppContributeSlider';\r\nimport ContributeForm from '../forms/ContributeForm';\r\n\r\n\r\nconst ContributeModal = ( {drizzle, state, handleSlide, propAddress, tokenId, assetPrice} ) => {\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  let value  = state.value;\r\n  let valueSlider = state.valueSlider;\r\n  let maxRanger = Web3.utils.fromWei(`${assetPrice}`,'ether')\r\n  let maxRange = parseInt(maxRanger);\r\n  let minRange = 3;\r\n  let progressMax = maxRange-minRange;\r\n\r\n  return ( \r\n  \r\n        <>\r\n          <CardFooter className=\"p-0\">\r\n            <button type=\"button\" className=\"btn btn-lg btn-block card-footer-btn\" onClick={handleShow}>Fund Purchase</button>\r\n          </CardFooter>\r\n          \r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Fund Asset Purchase</Modal.Title>   \r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <div>\r\n                  \r\n                        <div>\r\n                          <div className=\"current-price\">\r\n                            <Progress value={minRange} max={Web3.utils.fromWei(assetPrice,'ether')} >{minRange}</Progress>\r\n                            <p className=\"mt-2 mb-1\" >Current Price:&nbsp;{Web3.utils.fromWei(assetPrice,'ether')}&nbsp;ETH</p>\r\n                          </div>\r\n                          <div>\r\n                          <p className=\"mt-4 mb-1\" >Current Pool Depth: {minRange} ETH</p>\r\n                            <Slider\r\n                              theme=\"success\"\r\n                              step={.01}\r\n                              pips={{ mode: \"range\", stepped: true, density: 3 }}\r\n                              onSlide={handleSlide}\r\n                              connect={[true, false]}\r\n                              start={[valueSlider]}\r\n                              range={{ min: 0, max: progressMax }}\r\n                            />\r\n                          </div>  \r\n                        <div className=\"mt-4\">{valueSlider} ETH </div>                 \r\n                        </div>\r\n                        \r\n          \r\n                </div>\r\n            </Modal.Body>\r\n            <div className=\"modal-footer\">\r\n              {/* <ContributeForm state={state} valueSlider={valueSlider} drizzle ={drizzle} handleSlide={handleClose} /> */}\r\n            </div>\r\n          </Modal>\r\n        </>\r\n         );    \r\n        } \r\n\r\n    //export default ContributeModal;      \r\n\r\n\r\n    export default class InitialContributeModal extends Component {\r\n        constructor(props){\r\n        super(props);\r\n        this.handleSlide = this.handleSlide.bind(this),\r\n     \r\n        this.state = {\r\n          error:null,\r\n          isLoaded:false,\r\n          value: 0,\r\n          valueSlider:0,\r\n          contribAmount:0,\r\n          assetData: []\r\n        }\r\n      }\r\n    \r\n\r\n      handleSlide(e) {\r\n        this.setState({\r\n          valueSlider: parseFloat(e[0])\r\n        });\r\n      }\r\n\r\n      render() {\r\n        return (\r\n        <ContributeModal\r\n          propAddress={this.props.propAddress} \r\n          userManaBalance={this.props.serManaBalance}\r\n          assetPrice={this.props.assetPrice} \r\n          drizzleState={this.props.drizzleState} \r\n          drizzle={this.props.drizzle} \r\n          tokenId={this.props.tokenId} \r\n          handleSlide={this.handleSlide} \r\n          state = {this.state}\r\n        />\r\n        )\r\n      }\r\n\r\n    }"]},"metadata":{},"sourceType":"module"}