{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst NOM_TX_PROCESSING = 'NOM_TX_PROCESSING';\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\nconst TX_PROCESSING = \"TX_PROCESSING\";\nconst TOKEN_ID_FETCHED = 'TOKEN_ID_FETCHED';\nconst TX_SUCCESSFUL = 'TX_SUCCESSFUL';\nconst TX_BROADCASTED = 'TX_BROADCASTED';\nconst SET_DRIZZLE_STATE = \"SET_DRIZZLE_STATE\";\nconst GOT_PROP_ADDRESS = \"GOT_PROP_ADDRESS\";\nconst SET_TOKEN_ID = \"SET_TOKEN_ID\";\nconst TESTED_SAGA = 'TESTED_SAGA';\nconst PROPOSAL_BALANCE = 'PROPOSAL_BALANCE';\nconst GOT_PROP_ABI = \"GOT_PROP_ABI\";\nconst PROPOSAL_STORAGE_CONTRACT = 'PROPOSAL_STORAGE_CONTRACT';\nconst GOT_CURRENT_CONTRIB = \"GOT_CURRENT_CONTRIB\";\nconst CONTRIB_COMPLETE = \"CONTRIB_COMPLETE\";\nconst SET_NftAddress = \"SET_NftAddress\";\nconst GOT_STACK_ID = \"GOT_STACK_ID\";\nconst GOT_DEP_STACK_ID = \"GOT_DEP_STACK_ID\";\nconst APROVED_AMOUNT = \"APROVED_AMOUNT\";\nconst GOT_ASSET_DATA = \"GOT_ASSET_DATA\";\nconst initialState = {\n  transactionProcessing: false,\n  processingDone: null,\n  txSuccessful: false,\n  tokenId: null,\n  drizzle: null,\n  drizzleContracts: null,\n  propAddress: null,\n  testedSega: false,\n  contractBalance: null,\n  proposalStorageAbi: null,\n  proposalStorage: null,\n  userContribBalance: null,\n  contribComplete: null,\n  NftAddress: null,\n  stackId: null,\n  depStackId: null,\n  convertedContribution: null,\n  approvedAmount: null,\n  depositAmount: 0,\n  listPrice: 0,\n  assetPrice: null,\n  expiresAt: null,\n  currentExpiresAt: null\n};\n\nfunction appReducer(state = initialState, action) {\n  switch (action.type) {\n    case PROPOSAL_BALANCE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contractBalance: action.balance,\n        depositAmount: action.depositAmount,\n        listPrice: action.listPrice,\n        expiresAt: action.expiresAt\n      });\n\n    case GOT_ASSET_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        assetPrice: action.assetPrice,\n        currentExpiresAt: action.currentExpiresAt\n      });\n\n    case GOT_PROP_ABI:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        proposalStorageAbi: action.proposalStorageAbi\n      });\n\n    case PROPOSAL_STORAGE_CONTRACT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        proposalStorage: action.proposalStorage\n      });\n\n    case SET_NftAddress:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        nftAddress: \"0x3f27363c9f86E8ac151a0D332abC2C3b60B7bCf5\"\n      });\n\n    case GOT_CURRENT_CONTRIB:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userContribBalance: action.userContribBalance\n      });\n\n    case CONTRIB_COMPLETE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contribComplete: false\n      });\n\n    case TX_BROADCASTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        transactionProcessing: true,\n        processingDone: false\n      });\n\n    case APROVED_AMOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        approvedAmount: action.approvedAmount\n      });\n\n    case TX_SUCCESSFUL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        txSuccessful: true,\n        transactionProcessing: false,\n        processingDone: true\n      });\n    // case TX_PROCESSING_DONE:\n    //   return { ...state,transactionProcessing: false, txSuccessful: true };\n\n    case GOT_STACK_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        stackId: action.stackId,\n        convertedContribution: action.convertedContribution\n      });\n\n    case GOT_DEP_STACK_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        depStackId: action.depStackId,\n        convertedContribution: action.convertedContribution\n      });\n\n    case SET_TOKEN_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tokenId: action.tokenId\n      });\n\n    case SET_DRIZZLE_STATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        drizzle: action.drizzle\n      });\n\n    case GOT_PROP_ADDRESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        propAddress: action.proposalAddress\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/reducers/appReducers.js"],"names":["NOM_TX_PROCESSING","TX_PROCESSING_DONE","TX_PROCESSING","TOKEN_ID_FETCHED","TX_SUCCESSFUL","TX_BROADCASTED","SET_DRIZZLE_STATE","GOT_PROP_ADDRESS","SET_TOKEN_ID","TESTED_SAGA","PROPOSAL_BALANCE","GOT_PROP_ABI","PROPOSAL_STORAGE_CONTRACT","GOT_CURRENT_CONTRIB","CONTRIB_COMPLETE","SET_NftAddress","GOT_STACK_ID","GOT_DEP_STACK_ID","APROVED_AMOUNT","GOT_ASSET_DATA","initialState","transactionProcessing","processingDone","txSuccessful","tokenId","drizzle","drizzleContracts","propAddress","testedSega","contractBalance","proposalStorageAbi","proposalStorage","userContribBalance","contribComplete","NftAddress","stackId","depStackId","convertedContribution","approvedAmount","depositAmount","listPrice","assetPrice","expiresAt","currentExpiresAt","appReducer","state","action","type","balance","nftAddress","proposalAddress"],"mappings":"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","sourcesContent":["const NOM_TX_PROCESSING = 'NOM_TX_PROCESSING'\r\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\r\nconst TX_PROCESSING = \"TX_PROCESSING\";\r\nconst TOKEN_ID_FETCHED = 'TOKEN_ID_FETCHED';\r\nconst TX_SUCCESSFUL = 'TX_SUCCESSFUL';\r\nconst TX_BROADCASTED = 'TX_BROADCASTED'\r\nconst SET_DRIZZLE_STATE = \"SET_DRIZZLE_STATE\";  \r\nconst GOT_PROP_ADDRESS = \"GOT_PROP_ADDRESS\";\r\nconst SET_TOKEN_ID = \"SET_TOKEN_ID\";\r\nconst TESTED_SAGA = 'TESTED_SAGA';\r\nconst PROPOSAL_BALANCE = 'PROPOSAL_BALANCE';\r\nconst GOT_PROP_ABI = \"GOT_PROP_ABI\";\r\nconst PROPOSAL_STORAGE_CONTRACT = 'PROPOSAL_STORAGE_CONTRACT';\r\nconst GOT_CURRENT_CONTRIB = \"GOT_CURRENT_CONTRIB\";\r\nconst CONTRIB_COMPLETE = \"CONTRIB_COMPLETE\";\r\nconst SET_NftAddress = \"SET_NftAddress\";\r\nconst GOT_STACK_ID =\"GOT_STACK_ID\";\r\nconst GOT_DEP_STACK_ID = \"GOT_DEP_STACK_ID\";\r\nconst APROVED_AMOUNT = \"APROVED_AMOUNT\";\r\nconst GOT_ASSET_DATA = \"GOT_ASSET_DATA\"\r\n\r\nconst initialState = {\r\n  transactionProcessing:false,\r\n  processingDone: null,\r\n  txSuccessful: false, \r\n  tokenId: null,\r\n  drizzle: null,\r\n  drizzleContracts:null,\r\n  propAddress:null, \r\n  testedSega:false,\r\n  contractBalance:null,\r\n  proposalStorageAbi:null,\r\n  proposalStorage:null,\r\n  userContribBalance:null,\r\n  contribComplete:null,\r\n  NftAddress: null, \r\n  stackId:null,\r\n  depStackId:null,\r\n  convertedContribution:null,\r\n  approvedAmount:null,\r\n  depositAmount:0,\r\n  listPrice:0,\r\n  assetPrice:null,\r\n  expiresAt:null,\r\n  currentExpiresAt:null\r\n};   \r\n \r\nfunction appReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case PROPOSAL_BALANCE:\r\n      return { ...state, contractBalance: action.balance, depositAmount:action.depositAmount, listPrice: action.listPrice, expiresAt: action.expiresAt}; \r\n    case GOT_ASSET_DATA:\r\n      return { ...state, assetPrice: action.assetPrice, currentExpiresAt:action.currentExpiresAt}; \r\n    case GOT_PROP_ABI:\r\n        return { ...state, proposalStorageAbi: action.proposalStorageAbi }; \r\n    case PROPOSAL_STORAGE_CONTRACT:\r\n      return { ...state, proposalStorage: action.proposalStorage }; \r\n    case SET_NftAddress:\r\n      return { ...state, nftAddress:`0x3f27363c9f86E8ac151a0D332abC2C3b60B7bCf5`}; \r\n    case GOT_CURRENT_CONTRIB:\r\n      return { ...state, userContribBalance: action.userContribBalance }; \r\n    case CONTRIB_COMPLETE:\r\n      return { ...state, contribComplete: false }; \r\n    case TX_BROADCASTED:\r\n      return { ...state, transactionProcessing: true, processingDone:false };\r\n    case APROVED_AMOUNT:\r\n      return { ...state, approvedAmount: action.approvedAmount };\r\n    case TX_SUCCESSFUL:\r\n      return { ...state,  txSuccessful: true, transactionProcessing: false, processingDone:true };\r\n    // case TX_PROCESSING_DONE:\r\n    //   return { ...state,transactionProcessing: false, txSuccessful: true };\r\n    case GOT_STACK_ID:\r\n      return { ...state,stackId: action.stackId, convertedContribution:action.convertedContribution};\r\n    case GOT_DEP_STACK_ID:\r\n      return { ...state,depStackId: action.depStackId, convertedContribution:action.convertedContribution};\r\n    case SET_TOKEN_ID:\r\n        return { ...state, tokenId:action.tokenId};\r\n    case SET_DRIZZLE_STATE:\r\n        return { ...state, drizzle: action.drizzle };\r\n    case GOT_PROP_ADDRESS:\r\n        return { ...state, propAddress:action.proposalAddress};    \r\n    default:\r\n      return state;\r\n  }\r\n}   \r\nexport default appReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}