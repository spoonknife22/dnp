{"ast":null,"code":"import { generateStore, EventActions, drizzleReducers } from '@drizzle/store';\nimport drizzleOptions from '../drizzleOptions';\nimport { toast } from 'react-toastify'; //\n\nconst contractEventNotifier = store => next => action => {\n  if (action.type === EventActions.EVENT_FIRED) {\n    const message = action.event.returnValues._message;\n    const display = `${message}`;\n    toast.success(display, {\n      position: toast.POSITION.BOTTOM_RIGHT\n    });\n  }\n\n  return next(action);\n}; // const joinTransactionNotifier = store => next => action => {\n//   if (action.type === drizzleReducers.transactionsReducer) {\n//     const broadcast = action.txHash\n//     //const txStatus = action.event.event\n//     const message = action.status\n//     console.log({broadcast})\n//     //const display = `${message}`\n//     toast.success(display, { position: toast.POSITION.BOTTOM_LEFT })\n//   }\n//   return next(action)\n// }\n\n\nconst appMiddlewares = [contractEventNotifier];\nexport default generateStore({\n  drizzleOptions,\n  appMiddlewares,\n  disableReduxDevTools: false // enable ReduxDevTools!\n\n});","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/middleware/index.js"],"names":["generateStore","EventActions","drizzleReducers","drizzleOptions","toast","contractEventNotifier","store","next","action","type","EVENT_FIRED","message","event","returnValues","_message","display","success","position","POSITION","BOTTOM_RIGHT","appMiddlewares","disableReduxDevTools"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,eAAtC,QAA6D,gBAA7D;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CACC;;AACD,MAAMC,qBAAqB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgBR,YAAY,CAACS,WAAjC,EAA8C;AAC5C,UAAMC,OAAO,GAAGH,MAAM,CAACI,KAAP,CAAaC,YAAb,CAA0BC,QAA1C;AACA,UAAMC,OAAO,GAAI,GAAEJ,OAAQ,EAA3B;AAEAP,IAAAA,KAAK,CAACY,OAAN,CAAcD,OAAd,EAAuB;AAAEE,MAAAA,QAAQ,EAAEb,KAAK,CAACc,QAAN,CAAeC;AAA3B,KAAvB;AACD;;AACD,SAAOZ,IAAI,CAACC,MAAD,CAAX;AACD,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMY,cAAc,GAAG,CAAEf,qBAAF,CAAvB;AAEA,eAAeL,aAAa,CAAC;AAC3BG,EAAAA,cAD2B;AAE3BiB,EAAAA,cAF2B;AAG3BC,EAAAA,oBAAoB,EAAE,KAHK,CAGE;;AAHF,CAAD,CAA5B","sourcesContent":["import { generateStore, EventActions, drizzleReducers } from '@drizzle/store'\r\nimport drizzleOptions from '../drizzleOptions'\r\nimport { toast } from 'react-toastify'\r\n //\r\nconst contractEventNotifier = store => next => action => {\r\n  if (action.type === EventActions.EVENT_FIRED) {\r\n    const message = action.event.returnValues._message\r\n    const display = `${message}`\r\n \r\n    toast.success(display, { position: toast.POSITION.BOTTOM_RIGHT })\r\n  }\r\n  return next(action)\r\n}\r\n\r\n// const joinTransactionNotifier = store => next => action => {\r\n//   if (action.type === drizzleReducers.transactionsReducer) {\r\n//     const broadcast = action.txHash\r\n//     //const txStatus = action.event.event\r\n//     const message = action.status\r\n//     console.log({broadcast})\r\n//     //const display = `${message}`\r\n \r\n//     toast.success(display, { position: toast.POSITION.BOTTOM_LEFT })\r\n//   }\r\n//   return next(action)\r\n// }\r\n\r\nconst appMiddlewares = [ contractEventNotifier ]\r\n\r\nexport default generateStore({\r\n  drizzleOptions,\r\n  appMiddlewares,\r\n  disableReduxDevTools: false  // enable ReduxDevTools!\r\n})"]},"metadata":{},"sourceType":"module"}