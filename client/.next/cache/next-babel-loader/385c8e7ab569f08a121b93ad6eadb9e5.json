{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\OutterOsSdk.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport OsSdk from './OsSdk.js';\n\nfunction OtterSkd() {\n  _s();\n\n  const _useState = useState(0),\n        count = _useState[0],\n        setCount = _useState[1];\n\n  const _useState2 = useState([]),\n        projectTokenIds = _useState2[0],\n        setprojectTokenIds = _useState2[1];\n\n  useEffect(() => {\n    const fetchStats = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var proxyUrl, targetUrl, i, artArray, callsPerProject;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.opensea.io/api/v1/collection/';\n              collectionSlug = 'doodles-official/stats';\n              collection = 'stats';\n              artArray = [];\n              console.log(orders);\n              callsPerProject = 2;\n              console.log(offset);\n\n              for (i = 0; i < callsPerProject; i++) {\n                fetch(targetUrl + collectionSlug + collection, {\n                  header: 'x-api-key:2f2a0900458f4bdfbb489680a58e7526'\n                }).then(res => res.json()).then(res => {\n                  console.log(res.count);\n                  setCount(res.count); //if(result.length >= 20){\n                  //artArray.push(...res.assets);\n                  // }\n                  // else{\n                  //   //break;\n                  // }\n                }, error => {\n                  setLoading(true), error;\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchStats() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchStats();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"jjjjj\", __jsx(OsSdk, {\n    drizzleState: this.props.drizzleState,\n    drizzle: this.propsdrizzle,\n    count: count,\n    projectTokenIds: projectTokenIds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(OtterSkd, \"9U8h+B18bWIHubtO3iayUnFHBtg=\");\n\n_c = OtterSkd;\nexport default OtterSkd;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtterSkd\");","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/OutterOsSdk.js"],"names":["React","useState","useEffect","OsSdk","OtterSkd","count","setCount","projectTokenIds","setprojectTokenIds","fetchStats","proxyUrl","targetUrl","collectionSlug","collection","artArray","console","log","orders","callsPerProject","offset","i","fetch","header","then","res","json","error","setLoading","props","drizzleState","propsdrizzle"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAAA,oBACUH,QAAQ,CAAC,CAAD,CADlB;AAAA,QACTI,KADS;AAAA,QACFC,QADE;;AAAA,qBAE8BL,QAAQ,CAAC,EAAD,CAFtC;AAAA,QAETM,eAFS;AAAA,QAEQC,kBAFR;;AAIhBN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAEXC,cAAAA,QAFW,GAEA,sCAFA,EAGfC,SAHe,GAGH,2CAHG;AAIfC,cAAAA,cAAc,GAAE,wBAAhB;AACAC,cAAAA,UAAU,GAAC,OAAX;AAIIC,cAAAA,QATW,GASA,EATA;AAUfC,cAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACMC,cAAAA,eAXS,GAWS,CAXT;AAYfH,cAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;;AACA,mBAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,eAAhB,EAAiCE,CAAC,EAAlC,EAAsC;AAEtCC,gBAAAA,KAAK,CAACV,SAAS,GAAGC,cAAZ,GAA6BC,UAA9B,EAAyC;AAACS,kBAAAA,MAAM,EAAC;AAAR,iBAAzC,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKC,GAAD,IAAS;AAENT,kBAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACnB,KAAhB;AACAC,kBAAAA,QAAQ,CAACkB,GAAG,CAACnB,KAAL,CAAR,CAHM,CAIP;AAEA;AACA;AACA;AACA;AACA;AAED,iBAfL,EAgBKqB,KAAD,IAAW;AACTC,kBAAAA,UAAU,CAAC,IAAD,CAAV,EACAD,KADA;AAED,iBAnBL;AAqBD;;AApCgB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVjB,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAsCAA,IAAAA,UAAU;AACX,GAxCM,EAwCJ,EAxCI,CAAT;AA2CA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE,MAAC,KAAD;AAAQ,IAAA,YAAY,EAAE,KAAKmB,KAAL,CAAWC,YAAjC;AAA+C,IAAA,OAAO,EAAE,KAAKC,YAA7D;AAA2E,IAAA,KAAK,EAAEzB,KAAlF;AAAyF,IAAA,eAAe,EAAEE,eAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;GArDMH,Q;;KAAAA,Q;AAuDP,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport OsSdk from './OsSdk.js';\r\n\r\n\r\nfunction OtterSkd() {\r\n    const [count, setCount] = useState(0);\r\n    const [projectTokenIds, setprojectTokenIds] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchStats = async () => { \r\n   \r\n            var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n            targetUrl = 'https://api.opensea.io/api/v1/collection/';\r\n            collectionSlug= 'doodles-official/stats';\r\n            collection='stats';\r\n           \r\n        \r\n            let i;\r\n            let artArray = [];\r\n            console.log(orders)\r\n            const callsPerProject = 2;\r\n            console.log(offset)\r\n            for (i = 0; i < callsPerProject; i++) {\r\n        \r\n            fetch(targetUrl + collectionSlug + collection,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\r\n              .then(res => res.json())\r\n              .then(\r\n                (res) => {\r\n        \r\n                   console.log(res.count);\r\n                   setCount(res.count)\r\n                  //if(result.length >= 20){\r\n              \r\n                  //artArray.push(...res.assets);\r\n                  // }\r\n                  // else{\r\n                  //   //break;\r\n                  // }\r\n        \r\n                },\r\n                (error) => {\r\n                  setLoading(true),\r\n                  error;\r\n                }\r\n              )         \r\n          } \r\n        }\r\n        fetchStats();\r\n      }, []);\r\n    \r\n  \r\n    return (\r\n      <div>\r\n          jjjjj\r\n        <OsSdk  drizzleState={this.props.drizzleState} drizzle={this.propsdrizzle} count={count} projectTokenIds={projectTokenIds}   />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default OtterSkd;"]},"metadata":{},"sourceType":"module"}