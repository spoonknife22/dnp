{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\TestOsSdk.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n//import ReactPaginate from \"react-paginate\";\nimport OsPagination from '../OsPagination.js';\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network, OpenSeaAsset } from 'opensea-js';\nimport React, { Component, useEffect, useState } from 'react';\nimport { OrderSide } from 'opensea-js/lib/types';\nimport { Button, Form } from \"shards-react\";\n\nfunction TestOsSdk({\n  tokenIdArray,\n  projectTotal\n}) {\n  _s();\n\n  const _useState = useState([]),\n        items = _useState[0],\n        setItems = _useState[1];\n\n  const _useState2 = useState(),\n        cursor = _useState2[0],\n        setCursor = _useState2[1];\n\n  const _useState3 = useState(1),\n        currentPage = _useState3[0],\n        setCurrentPage = _useState3[1];\n\n  const _useState4 = useState(6),\n        ordersPerPage = _useState4[0];\n\n  const _useState5 = useState(),\n        totalOrders = _useState5[0],\n        setTotalOrders = _useState5[1];\n\n  let i;\n  let offsetNum = 0;\n  const callsPerProject = 3;\n  console.log(offsetNum);\n  let tokenArray = [];\n\n  for (i = 0; i < callsPerProject; i++, offsetNum += 50) {\n    getorders(offsetNum);\n    console.log(tokenIdArray);\n    const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\n    const seaport = new OpenSeaPort(provider, {\n      networkName: Network.Main,\n      apiKey: '2f2a0900458f4bdfbb489680a58e7526'\n    });\n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'X-API-KEY': '2f2a0900458f4bdfbb489680a58e7526'\n      }\n    };\n    let limit = 50;\n    useEffect(() => {\n      const getorders = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenIds) {\n          var _yield$seaport$api$ge, orders, count, data, total;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return seaport.api.getOrders({\n                  asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n                  //token_ids: [tokenIds],\n                  side: 1,\n                  sale_kind: 0\n                });\n\n              case 2:\n                _yield$seaport$api$ge = _context.sent;\n                orders = _yield$seaport$api$ge.orders;\n                count = _yield$seaport$api$ge.count;\n                console.log(orders);\n                data = orders; // const total = res.headers.get(\"x-total-count\");\n\n                total = data.count; //setpageCount(Math.ceil(projectTotal / limit));\n                // console.log(Math.ceil(total/12));\n                //setCursor(data.next)\n                //console.log(data)\n\n                setItems(orders);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n\n        return function getorders(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      let i;\n      let offsetNum = 0;\n      const callsPerProject = 3;\n      console.log(offsetNum);\n\n      for (i = 0; i < callsPerProject; i++, offsetNum += 50) {}\n    }, [limit]);\n\n    const fetchorders = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cursor) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch( //`http://localhost:3004/orders?_page=${currentPage}&_limit=${limit}`\n              //`https://jsonplaceholder.typicode.com/orders?_page=${currentPage}&_limit=${limit}`\n              //`https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=${limit}&offset=${currentOs}&order_by=created_date&order_direction=desc`,options\n              \"https://api.opensea.io/api/v1/assets?collection=doodles-official&order_direction=desc&limit=50&cursor=\".concat(cursor, \"&include_orders=true\"), options);\n\n            case 2:\n              res = _context2.sent;\n              _context2.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function fetchorders(_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    const handlePageClick = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(cursor) {\n        var ordersFormServer;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetchorders(cursor);\n\n            case 2:\n              ordersFormServer = _context3.sent;\n              setItems(ordersFormServer.assets);\n              setCursor(ordersFormServer.next);\n              console.log(ordersFormServer.assets.sell_orders);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function handlePageClick(_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-block btn-success join-form-btn\",\n      key: \"submit\",\n      type: \"button\",\n      onClick: () => handlePageClick(cursor),\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, \"Button\"), __jsx(\"div\", {\n      className: \"row m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, items.map(item => {\n      return __jsx(\"div\", {\n        key: item.asset.tokeId,\n        className: \"col-sm-6 col-md-4 v my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"card shadow-sm w-100\",\n        style: {\n          minHeight: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, __jsx(\"h5\", {\n        className: \"card-title text-center h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, \"Id :\", item.asset.tokenId, \" \"), __jsx(\"h6\", {\n        className: \"card-subtitle mb-2 text-muted text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, item.email), __jsx(\"p\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, item.body))));\n    })));\n  }\n}\n\n_s(TestOsSdk, \"WMEe9tfooTAoLsuYYlSmJ6CucYI=\");\n\n_c = TestOsSdk;\nexport default TestOsSdk;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestOsSdk\");","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/TestOsSdk.js"],"names":["OsPagination","Web3","OpenSeaPort","Network","OpenSeaAsset","React","Component","useEffect","useState","OrderSide","Button","Form","TestOsSdk","tokenIdArray","projectTotal","items","setItems","cursor","setCursor","currentPage","setCurrentPage","ordersPerPage","totalOrders","setTotalOrders","i","offsetNum","callsPerProject","console","log","tokenArray","getorders","provider","providers","HttpProvider","seaport","networkName","Main","apiKey","options","method","headers","Accept","limit","tokenIds","api","getOrders","asset_contract_address","side","sale_kind","orders","count","data","total","fetchorders","fetch","res","json","handlePageClick","ordersFormServer","assets","next","sell_orders","fontSize","map","item","asset","tokeId","minHeight","tokenId","email","body"],"mappings":"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","sourcesContent":["//import ReactPaginate from \"react-paginate\";\r\nimport OsPagination from '../OsPagination.js';\r\nimport * as Web3 from 'web3';\r\nimport { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js';\r\nimport React, { Component, useEffect, useState } from 'react';\r\n\r\nimport { OrderSide } from 'opensea-js/lib/types';\r\nimport { Button, Form } from \"shards-react\";\r\n\r\nfunction TestOsSdk({tokenIdArray, projectTotal}) {\r\n  const [items, setItems] = useState([]);\r\n  const [cursor, setCursor] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [ordersPerPage] = useState(6);\r\n  const [totalOrders, setTotalOrders] = useState();\r\n\r\n\r\n\r\n  let i;\r\n  let offsetNum=0;\r\n  const callsPerProject = 3;\r\n  console.log(offsetNum)\r\n\r\n  let tokenArray = [];\r\n  for (i = 0; i < callsPerProject; i++, offsetNum+=50) {\r\n\r\n \r\n  getorders(offsetNum);\r\n\r\n  \r\nconsole.log(tokenIdArray)\r\n  const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\r\n\r\n  const seaport = new OpenSeaPort(provider, {\r\n    networkName: Network.Main,\r\n    apiKey: '2f2a0900458f4bdfbb489680a58e7526'\r\n  });\r\n\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {Accept: 'application/json', 'X-API-KEY': '2f2a0900458f4bdfbb489680a58e7526'}\r\n};\r\n\r\n  let limit = 50;\r\n  \r\n\r\n  useEffect(() => {\r\n \r\n    const getorders = async (tokenIds) => {\r\n  \r\n      const  { orders, count } = await seaport.api.getOrders({\r\n        asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n        //token_ids: [tokenIds],\r\n        side: 1,\r\n        sale_kind: 0,\r\n  \r\n      })\r\n      console.log(orders)\r\n      const data = orders;\r\n  \r\n      // const total = res.headers.get(\"x-total-count\");\r\n      const total = data.count;\r\n      //setpageCount(Math.ceil(projectTotal / limit));\r\n      // console.log(Math.ceil(total/12));\r\n      //setCursor(data.next)\r\n      //console.log(data)\r\n      setItems(orders);\r\n    };\r\n    let i;\r\n    let offsetNum=0;\r\n    const callsPerProject = 3;\r\n    console.log(offsetNum)\r\n    for (i = 0; i < callsPerProject; i++, offsetNum+=50) {\r\n    \r\n \r\n \r\n    }\r\n  }, [limit]);\r\n\r\n  const fetchorders = async (cursor) => {\r\n    const res = await fetch(\r\n      //`http://localhost:3004/orders?_page=${currentPage}&_limit=${limit}`\r\n       //`https://jsonplaceholder.typicode.com/orders?_page=${currentPage}&_limit=${limit}`\r\n       //`https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=${limit}&offset=${currentOs}&order_by=created_date&order_direction=desc`,options\r\n       `https://api.opensea.io/api/v1/assets?collection=doodles-official&order_direction=desc&limit=50&cursor=${cursor}&include_orders=true`,options\r\n    );\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const handlePageClick = async (cursor) => {\r\n   \r\n    const ordersFormServer = await fetchorders(cursor);\r\n    setItems(ordersFormServer.assets);\r\n    setCursor(ordersFormServer.next)\r\n    console.log(ordersFormServer.assets.sell_orders)\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <button className=\"btn btn-block btn-success join-form-btn\" key=\"submit\" type=\"button\" onClick={() => handlePageClick(cursor)} style={{ fontSize: 16 }} > \r\n          Button\r\n      </button>\r\n      <div className=\"row m-2\">\r\n        {items.map((item) => {\r\n          return (\r\n            <div key={item.asset.tokeId} className=\"col-sm-6 col-md-4 v my-2\">\r\n              <div className=\"card shadow-sm w-100\" style={{ minHeight: 25 }}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title text-center h2\">Id :{item.asset.tokenId} </h5>\r\n                  <h6 className=\"card-subtitle mb-2 text-muted text-center\">\r\n                    {item.email}\r\n                  </h6>\r\n                  <p className=\"card-text\">{item.body}</p>\r\n                </div>\r\n              </div>\r\n       \r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default TestOsSdk;"]},"metadata":{},"sourceType":"module"}