{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(testSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(appRootSaga);\n\nimport { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\nconst TEST_SAGA = 'TEST_SAGA';\n\nfunction testSaga() {\n  return _regeneratorRuntime.wrap(function testSaga$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return put({\n          type: 'TESTED_SAGA'\n        });\n\n      case 2:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}\n\nfunction appRootSaga() {\n  return _regeneratorRuntime.wrap(function appRootSaga$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.next = 2;\n        return takeLatest('TEST_SAGA', testSaga);\n\n      case 2:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2);\n}\n\nexport default [appRootSaga];","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/appSagas.js"],"names":["testSaga","appRootSaga","all","fork","takeLatest","put","call","take","race","select","takeEvery","TEST_SAGA","type"],"mappings":";;oDAIUA,Q;qDAKAC,W;;AATV,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+DC,SAA/D,QAAgF,oBAAhF;AAEA,MAAMC,SAAS,GAAG,WAAlB;;AAEA,SAAUX,QAAV;AAAA;AAAA;AAAA;AAAA;AACE,eAAMK,GAAG,CAAC;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAUX,WAAV;AAAA;AAAA;AAAA;AAAA;AACE,eAAMG,UAAU,CAAC,WAAD,EAAcJ,QAAd,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,CAACC,WAAD,CAAf","sourcesContent":["import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\r\n\r\nconst TEST_SAGA = 'TEST_SAGA';\r\n\r\nfunction* testSaga () {\r\n  yield put({ type: 'TESTED_SAGA' });\r\n  //console.log('Hello Sagas!');\r\n}\r\n\r\nfunction* appRootSaga() {\r\n  yield takeLatest('TEST_SAGA', testSaga);\r\n}\r\n\r\nexport default [appRootSaga];"]},"metadata":{},"sourceType":"module"}