{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\ProposalForm.js\";\n\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // import {Col, Button} from 'react-bootstrap'\n\nimport { Col } from \"shards-react\";\nimport { toast } from 'react-toastify';\nimport NominationButton from '../buttons/NominateButton';\nimport ContributeForm from './ContributeForm';\nimport { Loader } from 'rimble-ui';\nimport InitialContributeModal from '../modals/InitialContibModal';\nimport InnerPropForm from './InnerPropForm';\n\nconst ProposalForm = ({\n  drizzle,\n  drizzleState,\n  props,\n  propAddress,\n  getCurrentProp,\n  tokenId,\n  assetPrice,\n  userManaBalance\n}) => {\n  const _useState = useState(null),\n        tokenIdState = _useState[0],\n        setTokenId = _useState[1];\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var proposalAddress;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setTokenId(tokenId);\n\n            if (!tokenIdState) {\n              {\n                console.log(propAddress, '!tokenIdState');\n              }\n\n              __jsx(\"div\", {\n                className: \"mx-auto align-items-center\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 5\n                }\n              }, __jsx(Loader, {\n                color: \"#007bff\",\n                size: \"40px\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 7\n                }\n              }));\n            }\n\n            if (!tokenIdState) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 5;\n            return drizzle.contracts.ProposalController.methods.getPropTokenIdMap(\"\".concat(tokenIdState)).call();\n\n          case 5:\n            proposalAddress = _context.sent;\n            getCurrentProp(proposalAddress);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    fetchProposalAddress();\n  }, [tokenIdState]);\n  return __jsx(InnerPropForm //propAddress={propAddress}\n  , {\n    assetPrice: assetPrice,\n    props: props,\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    tokenId: tokenId,\n    userManaBalance: userManaBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentProp: proposalAddress => dispatch({\n    type: \"GOT_PROP_ADDRESS\",\n    proposalAddress: proposalAddress\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/ProposalForm.js"],"names":["React","useState","useEffect","Modal","connect","Form","Formik","Yup","Col","toast","NominationButton","ContributeForm","Loader","InitialContributeModal","InnerPropForm","ProposalForm","drizzle","drizzleState","props","propAddress","getCurrentProp","tokenId","assetPrice","userManaBalance","tokenIdState","setTokenId","fetchProposalAddress","console","log","contracts","ProposalController","methods","getPropTokenIdMap","call","proposalAddress","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAQ,KAAKC,GAAb,MAAsB,KAAtB,C,CACA;;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,sBAAP,MAAmC,8BAAnC;AACA,OAAOC,aAAP,MAA2B,iBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA,WAAhC;AAA6CC,EAAAA,cAA7C;AAA6DC,EAAAA,OAA7D;AAAsEC,EAAAA,UAAtE;AAAkFC,EAAAA;AAAlF,CAAD,KAAyG;AAAA,oBAE3FtB,QAAQ,CAAC,IAAD,CAFmF;AAAA,QAEvHuB,YAFuH;AAAA,QAEzGC,UAFyG;;AAI9H,QAAMC,oBAAoB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAC3BD,YAAAA,UAAU,CAACJ,OAAD,CAAV;;AAEA,gBAAG,CAACG,YAAJ,EAAiB;AACf;AAACG,gBAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ,EAAyB,eAAzB;AAA0C;;AAC3C;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,MAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAwB,gBAAA,IAAI,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;;AAR0B,iBASxBK,YATwB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUKR,OAAO,CAACa,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6CC,iBAA7C,WAAkER,YAAlE,GAAkFS,IAAlF,EAVL;;AAAA;AAUnBC,YAAAA,eAVmB;AAWzBd,YAAAA,cAAc,CAACc,eAAD,CAAd;;AAXyB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApBR,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AAeAxB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,CAACF,YAAD,CAFM,CAAT;AAKA,SACA,MAAC,aAAD,CACA;AADA;AAEA,IAAA,UAAU,EAAEF,UAFZ;AAGA,IAAA,KAAK,EAAEJ,KAHP;AAIA,IAAA,OAAO,EAAEF,OAJT;AAKA,IAAA,YAAY,EAAEC,YALd;AAMA,IAAA,OAAO,EAAEI,OANT;AAOA,IAAA,eAAe,EAAEE,eAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAYC,CApCD;;AAsCA,MAAMY,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,WAAW,EAAEiB,KAAK,CAACC,WAAN,CAAkBlB;AADG,CAAZ,CAAxB;;AAIA,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,cAAc,EAAGc,eAAD,IAAsBK,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BN,IAAAA,eAAe,EAACA;AAA5C,GAAD;AADN,CAAf,CAA3B;;AAKA,eAAe9B,OAAO,CAAC+B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvB,YAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Formik} from 'formik';\r\nimport  * as Yup from 'yup';\r\n// import {Col, Button} from 'react-bootstrap'\r\nimport { Col } from \"shards-react\";\r\nimport { toast } from 'react-toastify';\r\nimport NominationButton from '../buttons/NominateButton';\r\nimport ContributeForm from './ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\nimport InitialContributeModal from '../modals/InitialContibModal';\r\nimport InnerPropForm  from './InnerPropForm'\r\n\r\nconst ProposalForm = ({ drizzle, drizzleState, props, propAddress, getCurrentProp, tokenId, assetPrice, userManaBalance }) => {     \r\n\r\nconst [tokenIdState, setTokenId] = useState(null);\r\n\r\nconst fetchProposalAddress = async () => {\r\n  setTokenId(tokenId);\r\n\r\n  if(!tokenIdState){\r\n    {console.log(propAddress, '!tokenIdState')}\r\n    <div className=\"mx-auto align-items-center\">   \r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\n  if(tokenIdState){\r\n    const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenIdState}`).call(); \r\n    getCurrentProp(proposalAddress);\r\n    }\r\n  };\r\n\r\nuseEffect(() => {\r\n  fetchProposalAddress();\r\n}, [tokenIdState]);\r\n\r\n\r\nreturn (\r\n<InnerPropForm\r\n//propAddress={propAddress}\r\nassetPrice={assetPrice}  \r\nprops={props}\r\ndrizzle={drizzle}\r\ndrizzleState={drizzleState}\r\ntokenId={tokenId}\r\nuserManaBalance={userManaBalance}\r\n/>\r\n\r\n)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  propAddress: state.appReducers.propAddress\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCurrentProp: (proposalAddress) =>  dispatch({ type: \"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress })\r\n});\r\n      \r\n      \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm);"]},"metadata":{},"sourceType":"module"}