{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\ProposalForm.js\";\n\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // import {Col, Button} from 'react-bootstrap'\n\nimport { Col } from \"shards-react\";\nimport { toast } from 'react-toastify';\nimport NominationButton from '../buttons/NominateButton';\nimport ContributeForm from './ContributeForm';\nimport { Loader } from 'rimble-ui';\nimport InitialContributeModal from '../modals/InitialContibModal';\n\nconst ProposalForm = ({\n  drizzle,\n  drizzleState,\n  props,\n  propAddress,\n  getCurrentProp,\n  tokenId,\n  assetPrice,\n  userManaBalance\n}) => {\n  const _useState = useState(null),\n        currentProp = _useState[0],\n        setCurrentProp = _useState[1];\n\n  const _useState2 = useState(null),\n        tokenIdState = _useState2[0],\n        setTokenId = _useState2[1]; // <ProposalAddress drizzle={drizzle} drizzleState={drizzleState} tokenIdState={tokenId} />\n\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var proposalAddress;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setTokenId(tokenId);\n\n            if (!tokenIdState) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return drizzle.contracts.ProposalController.methods.getPropTokenIdMap(\"\".concat(tokenIdState)).call();\n\n          case 4:\n            proposalAddress = _context.sent;\n            getCurrentProp(proposalAddress);\n            _context.next = 9;\n            break;\n\n          case 8:\n            __jsx(\"div\", {\n              className: \"mx-auto\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 5\n              }\n            }, __jsx(Loader, {\n              color: \"#007bff\",\n              size: \"40px\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 7\n              }\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    fetchProposalAddress();\n  }, [tokenIdState]);\n\n  const nominateAsset = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(values) {\n      var text, reSalePrice, listPrice, account, memberBool, user, userId, contract;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            text = values.text, reSalePrice = values.reSalePrice;\n            listPrice = \"\".concat(assetPrice);\n            account = drizzleState.accounts[0];\n            _context2.next = 5;\n            return drizzle.contracts.UserStorage.methods.addresses(account).call();\n\n          case 5:\n            memberBool = _context2.sent;\n\n            if (!memberBool) {\n              _context2.next = 23;\n              break;\n            }\n\n            _context2.next = 9;\n            return drizzle.contracts.UserStorage.methods.profiles(account).call();\n\n          case 9:\n            user = _context2.sent;\n            userId = user.userId;\n            _context2.next = 13;\n            return drizzle.contracts.ProposalController;\n\n          case 13:\n            contract = _context2.sent;\n            _context2.prev = 14;\n            contract.methods[\"createProposal\"].cacheSend(userId, listPrice, reSalePrice, text, tokenId);\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](14);\n            return _context2.abrupt(\"return\", toast.error(\"Sorry, we couldn't create asset nomination: \".concat(_context2.t0), {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 21:\n            _context2.next = 24;\n            break;\n\n          case 23:\n            return _context2.abrupt(\"return\", toast.warning(\"Join the Consortium and nominate this asset\", {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[14, 18]]);\n    }));\n\n    return function nominateAsset(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  let yup = require('yup');\n\n  const schema = yup.object({\n    text: yup.string().max(100, 'To many characters').required('Required'),\n    reSalePrice: yup.number().typeError(\"Must be a number\").moreThan(assetPrice.toString(), 'Must be more than current price.').required('Required'),\n    termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\n  });\n\n  if (propAddress === null) {\n    __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }\n    }, __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  if (propAddress === '0x0000000000000000000000000000000000000000') {\n    return __jsx(React.Fragment, null, __jsx(Formik, {\n      initialValues: {\n        text: '',\n        reSalePrice: '',\n        termsOfService: false\n      },\n      validationSchema: schema,\n      onSubmit: (values, actions) => {\n        nominateAsset(values);\n        addReview(values);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      errors\n    }) => __jsx(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"validationFormik01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Pitch\"), __jsx(Form.Control, {\n      type: \"text\",\n      as: \"textarea\",\n      rows: 3,\n      name: \"text\",\n      placeholder: \"100 Character Max\",\n      value: values.text,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: values.text,\n      isInvalid: touched.text && !!errors.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, errors.text)), __jsx(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Resale Price\"), __jsx(Form.Control, {\n      type: \"text\",\n      name: \"reSalePrice\",\n      placeholder: \"Resale Price\",\n      value: values.reSalePrice,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: touched.reSalePrice && !!errors.reSalePrice,\n      isValid: values.reSalePrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, errors.reSalePrice))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Check, {\n      required: true,\n      name: \"termsOfService\",\n      label: \"Agree to terms and conditions\",\n      onChange: handleChange,\n      isInvalid: !!errors.termsOfService,\n      feedback: errors.termsOfService,\n      id: \"validationFormik0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    })), __jsx(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(NominationButton, {\n      props: props,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  if (propAddress !== '0x0000000000000000000000000000000000000000') {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }\n    }, __jsx(InitialContributeModal, {\n      propAddress: propAddress,\n      userManaBalance: userManaBalance,\n      assetPrice: assetPrice,\n      drizzleState: drizzleState,\n      drizzle: drizzle,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => ({\n  propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentProp: proposalAddress => dispatch({\n    type: \"GOT_PROP_ADDRESS\",\n    proposalAddress: proposalAddress\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm); //export default ProposalForm;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/ProposalForm.js"],"names":["React","useState","useEffect","Modal","connect","Form","Formik","Yup","Col","toast","NominationButton","ContributeForm","Loader","InitialContributeModal","ProposalForm","drizzle","drizzleState","props","propAddress","getCurrentProp","tokenId","assetPrice","userManaBalance","currentProp","setCurrentProp","tokenIdState","setTokenId","fetchProposalAddress","contracts","ProposalController","methods","getPropTokenIdMap","call","proposalAddress","nominateAsset","values","text","reSalePrice","listPrice","account","accounts","UserStorage","addresses","memberBool","profiles","user","userId","contract","cacheSend","error","position","POSITION","TOP_RIGHT","warning","yup","require","schema","object","string","max","required","number","typeError","moreThan","toString","termsOfService","bool","oneOf","actions","addReview","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Formik} from 'formik';\r\nimport  * as Yup from 'yup';\r\n// import {Col, Button} from 'react-bootstrap'\r\nimport { Col } from \"shards-react\";\r\nimport { toast } from 'react-toastify';\r\nimport NominationButton from '../buttons/NominateButton';\r\nimport ContributeForm from './ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\nimport InitialContributeModal from '../modals/InitialContibModal';\r\n\r\n      \r\n\r\n\r\nconst ProposalForm = ({ drizzle, drizzleState, props, propAddress, getCurrentProp, tokenId, assetPrice, userManaBalance }) => {\r\n  const [currentProp, setCurrentProp] = useState(null);\r\n  const [tokenIdState, setTokenId] = useState(null);\r\n  // <ProposalAddress drizzle={drizzle} drizzleState={drizzleState} tokenIdState={tokenId} />\r\n\r\nconst fetchProposalAddress = async () => {\r\n  setTokenId(tokenId);\r\n  if(tokenIdState){\r\n  const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenIdState}`).call(); \r\n  getCurrentProp(proposalAddress);\r\n  }\r\n  else{\r\n    <div className=\"mx-auto\">   \r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\n  };\r\nuseEffect(() => {\r\n  fetchProposalAddress();\r\n}, [tokenIdState]);\r\n\r\n  const nominateAsset = async (values) => {\r\n      \r\n    const { text, reSalePrice } = values;\r\n    const listPrice = `${assetPrice}`;\r\n    const account = drizzleState.accounts[0];\r\n    const memberBool = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n   \r\n    if(memberBool) {\r\n      const user = await drizzle.contracts.UserStorage.methods.profiles(account).call();\r\n      const { userId } = user;\r\n      const contract = await drizzle.contracts.ProposalController;\r\n    try {\r\n      contract.methods[\"createProposal\"].cacheSend(userId, listPrice, reSalePrice, text, tokenId );\r\n \r\n    } catch (err) {\r\n        return toast.error(`Sorry, we couldn't create asset nomination: ${err}`,{ position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n    else {\r\n      return toast.warning( `Join the Consortium and nominate this asset`, { position: toast.POSITION.TOP_RIGHT });\r\n  }\r\n}\r\n\r\nlet yup = require('yup');\r\nconst schema = yup.object({\r\n  text: yup.string()\r\n  .max(100, 'To many characters')\r\n  .required('Required'),\r\n  reSalePrice: yup.number()\r\n  .typeError(\"Must be a number\")\r\n  .moreThan(assetPrice.toString(), 'Must be more than current price.')\r\n  .required('Required'),\r\n  termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\nif(propAddress === null ) {\r\n  <div className=\"mx-auto\">   \r\n    <Loader color=\"#007bff\" size=\"40px\" />\r\n  </div>\r\n}\r\n\r\nif(propAddress === '0x0000000000000000000000000000000000000000' ) {\r\nreturn (   \r\n    <> \r\n      <Formik\r\n        initialValues={{\r\n        text: '',\r\n        reSalePrice: '',\r\n        termsOfService:false,\r\n        }}\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n        nominateAsset(values);\r\n        addReview(values);\r\n      }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n                <Form.Label>Pitch</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  as=\"textarea\" \r\n                  rows={3}\r\n                  name=\"text\"\r\n                  placeholder='100 Character Max'\r\n                  value={values.text}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={values.text}\r\n                  isInvalid={touched.text && !!errors.text}\r\n                  />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.text}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                <Form.Label>Resale Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\" \r\n                  name=\"reSalePrice\"\r\n                  placeholder=\"Resale Price\"\r\n                  value={values.reSalePrice}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.reSalePrice && !!errors.reSalePrice}\r\n                  isValid={values.reSalePrice}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">  \r\n                {errors.reSalePrice}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Group>\r\n              <Form.Check\r\n                required\r\n                name=\"termsOfService\"\r\n                label=\"Agree to terms and conditions\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.termsOfService}\r\n                feedback={errors.termsOfService}\r\n                id=\"validationFormik0\"\r\n              />\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n              <NominationButton props={props} tokenId={tokenId} />\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );   \r\n}       \r\n  if(propAddress !== '0x0000000000000000000000000000000000000000'){\r\n    return (\r\n    <div>\r\n      <InitialContributeModal \r\n        propAddress={propAddress} \r\n        userManaBalance={userManaBalance}\r\n        assetPrice={assetPrice} \r\n        drizzleState={drizzleState} \r\n        drizzle={drizzle} \r\n        tokenId={tokenId} \r\n      />\r\n    </div>\r\n    )\r\n  }\r\n} \r\n\r\n  const mapStateToProps = (state) => ({\r\n    propAddress: state.appReducers.propAddress,\r\n  })\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    getCurrentProp: (proposalAddress) =>  dispatch({ type: \"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress })\r\n  });\r\n        \r\n        \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm);\r\n\r\n    //export default ProposalForm;      "]},"metadata":{},"sourceType":"module"}