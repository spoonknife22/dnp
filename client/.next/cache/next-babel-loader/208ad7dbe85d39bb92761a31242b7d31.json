{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\cards\\\\NominateAssetCards.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport { Loader } from 'rimble-ui';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, Button, Row, Progress } from \"shards-react\";\nimport NominationModal from '../modals/NominationModal';\nimport Pagination from '../../components/Pagination';\nimport Nominations from '../../components/Nominations';\n\nconst Cards = () => {\n  const {\n    0: parcels,\n    1: setParcels\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: parcelsPerPage\n  } = useState(6);\n  useEffect(() => {\n    const fetchParcels = async () => {\n      let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n          targetUrl = 'https://api.decentraland.org/v1/parcels?status=open&sort_by=price&sort_order=desc&limit=40&offset=0';\n      fetch(proxyUrl + targetUrl).then(res => res.json()).then(result => {\n        setParcels(result.data.parcels);\n        setLoading(false);\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    fetchParcels();\n  }, []); // Get current Parcels\n\n  const indexOfLastParcel = currentPage * parcelsPerPage;\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\n  const currentParcels = parcels.slice(indexOfFirstParcel, indexOfLastParcel); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(React.Fragment, null, __jsx(Nominations, {\n    parcels: currentParcels,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    parcelsPerPage: parcelsPerPage,\n    totalParcels: 40,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Cards;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/cards/NominateAssetCards.js"],"names":["React","Component","useState","useEffect","Web3","Loader","Accordion","Card","CardHeader","CardBody","CardFooter","CardTitle","Button","Row","Progress","NominationModal","Pagination","Nominations","Cards","parcels","setParcels","loading","setLoading","currentPage","setCurrentPage","parcelsPerPage","fetchParcels","proxyUrl","targetUrl","fetch","then","res","json","result","data","error","setState","isLoaded","indexOfLastParcel","indexOfFirstParcel","currentParcels","slice","paginate","pageNumber"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,MAA5D,EAAoEC,GAApE,EAAyEC,QAAzE,QAAyF,cAAzF;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAElB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACmB,OAAD;AAAA,OAAUC;AAAV,MAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACqB,WAAD;AAAA,OAAcC;AAAd,MAAgCtB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACuB;AAAD,MAAmBvB,QAAQ,CAAC,CAAD,CAAjC;AAEAC,EAAAA,SAAS,CACP,MAAM;AACF,UAAMuB,YAAY,GAAG,YAAY;AACjC,UAAIC,QAAQ,GAAG,sCAAf;AAAA,UACAC,SAAS,GAAG,qGADZ;AAEAC,MAAAA,KAAK,CAACF,QAAQ,GAAGC,SAAZ,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVb,QAAAA,UAAU,CAACa,MAAM,CAACC,IAAP,CAAYf,OAAb,CAAV;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AAED,OAPL,EAQKa,KAAD,IAAW;AACT,aAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZF,UAAAA;AAFY,SAAd;AAID,OAbL;AAgBD,KAnBC;;AAqBJT,IAAAA,YAAY;AACb,GAxBQ,EAwBN,EAxBM,CAAT,CAPkB,CAkClB;;AACA,QAAMY,iBAAiB,GAAGf,WAAW,GAAGE,cAAxC;AACA,QAAMc,kBAAkB,GAAGD,iBAAiB,GAAGb,cAA/C;AACA,QAAMe,cAAc,GAAGrB,OAAO,CAACsB,KAAR,CAAcF,kBAAd,EAAkCD,iBAAlC,CAAvB,CArCkB,CAuClB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAInB,cAAc,CAACmB,UAAD,CAA7C;;AAEA,SACE,4BACE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,cAAtB;AAAsC,IAAA,OAAO,EAAEnB,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AACE,IAAA,cAAc,EAAEI,cADlB;AAEE,IAAA,YAAY,EAAE,EAFhB;AAGE,IAAA,QAAQ,EAAEiB,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CApDD;;AAsDA,eAAexB,KAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport Web3 from \"web3\";\r\nimport { Loader } from 'rimble-ui';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, Button, Row, Progress } from \"shards-react\";\r\nimport NominationModal from '../modals/NominationModal';\r\nimport Pagination from '../../components/Pagination';\r\nimport Nominations from '../../components/Nominations'\r\n\r\n\r\nconst Cards = () => {\r\n\r\n  const [parcels, setParcels] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [parcelsPerPage] = useState(6);\r\n\r\n  useEffect(\r\n    () => {\r\n        const fetchParcels = async () => {\r\n        let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n        targetUrl = 'https://api.decentraland.org/v1/parcels?status=open&sort_by=price&sort_order=desc&limit=40&offset=0'\r\n        fetch(proxyUrl + targetUrl)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setParcels(result.data.parcels);\r\n              setLoading(false);\r\n              \r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n      ) \r\n    \r\n      }\r\n\r\n    fetchParcels();\r\n  }, []);\r\n\r\n\r\n  // Get current Parcels\r\n  const indexOfLastParcel = currentPage * parcelsPerPage;\r\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\r\n  const currentParcels = parcels.slice(indexOfFirstParcel, indexOfLastParcel);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n      <Nominations parcels={currentParcels} loading={loading} />\r\n      <Pagination\r\n        parcelsPerPage={parcelsPerPage}\r\n        totalParcels={40}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}