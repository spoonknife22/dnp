{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = ({\n  props,\n  gotContractBalance,\n  gotPropContract,\n  proposalStorageAbi\n}) => {\n  _s();\n\n  const drizzleState = props.drizzleState,\n        drizzle = props.drizzle,\n        propAddress = props.propAddress,\n        tokenId = props.tokenId,\n        assetPrice = props.assetPrice;\n  let web3 = new Web3(Web3.givenProvider); //const [approvedTokens, setApprovedTokens] = useState(null);\n  // const manaContract = drizzle.contracts.MANAToken; \n  // const account = drizzleState.accounts[0];\n  // let state = drizzle.store.getState();\n  // const dataKey = manaContract.methods.allowance.cacheCall(account,propAddress);\n  // const approveMana = state.contracts.MANAToken.allowance[dataKey];\n  //setApprovedTokens(approveMana);\n  //console.log(approveMana)\n  // const manaContract = drizzle.contracts.MANAToken; \n  // const approvedMana = manaContract.methods.allowance(account,propAddress).call();\n  // console.log(approvedMana)\n\n  if (tokenId === null) {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, \"TokenId\", console.log(tokenId), __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  {\n    propAddress && proposalStorageAbi ? useEffect(() => {\n      fetchProposalAddress();\n    }, [propAddress]) : __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, propAddress, \" ContributeInnerModal 27\", __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var proposalAddress, contractConfig, events, proposalContract, account, propBalance, manaContract, approvedMana;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            proposalAddress = \"\".concat(propAddress);\n            contractConfig = {\n              contractName: \"\".concat(propAddress),\n              web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\n            };\n\n            if (!drizzle.contracts[\"\".concat(propAddress)]) {\n              events = ['ContributionSuccess', 'ProposalEvent', 'LogNewProvableQuery', 'RandomFailure'];\n              drizzle.addContract(contractConfig, events);\n            }\n\n            if (!drizzle.contracts[\"\".concat(propAddress)]) {\n              _context.next = 15;\n              break;\n            }\n\n            proposalContract = drizzle.contracts[\"\".concat(propAddress)];\n            account = drizzleState.accounts[0];\n            _context.next = 8;\n            return proposalContract.methods.getSummary(\"\".concat(tokenId)).call();\n\n          case 8:\n            propBalance = _context.sent;\n            manaContract = drizzle.contracts.MANAToken;\n            _context.next = 12;\n            return manaContract.methods.allowance(account, propAddress).call();\n\n          case 12:\n            approvedMana = _context.sent;\n            gotContractBalance(propBalance, approvedMana);\n            gotPropContract(proposalContract);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (propAddress === null || propAddress === 'undefined') {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, propAddress, \" ContributeInnerModal 52\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(ContributeForm, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      assetPrice: assetPrice,\n      propAddress: propAddress,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }));\n  }\n};\n\n_s(ContributeInnnerModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ContributeInnnerModal;\n\nconst mapStateToProps = state => ({\n  proposalStorageAbi: state.appReducers.proposalStorageAbi\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gotContractBalance: (propBalance, approvedMana) => dispatch({\n    type: 'PROPOSAL_BALANCE',\n    balance: \"\".concat(propBalance),\n    approvedMana: approvedMana\n  }),\n  gotPropContract: proposalContract => dispatch({\n    type: 'PROPOSAL_STORAGE_CONTRACT',\n    proposalStorage: proposalContract\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeInnnerModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","connect","Web3","ContributeForm","Loader","ContributeInnnerModal","props","gotContractBalance","gotPropContract","proposalStorageAbi","drizzleState","drizzle","propAddress","tokenId","assetPrice","web3","givenProvider","console","log","fetchProposalAddress","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","contracts","events","addContract","proposalContract","account","accounts","methods","getSummary","call","propBalance","manaContract","MANAToken","allowance","approvedMana","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","type","balance","proposalStorage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal = ({ props, gotContractBalance, gotPropContract, proposalStorageAbi }) => {\r\n  const { drizzleState, drizzle, propAddress, tokenId, assetPrice } = props;\r\n  let web3 = new Web3(Web3.givenProvider);\r\n\r\n  //const [approvedTokens, setApprovedTokens] = useState(null);\r\n  // const manaContract = drizzle.contracts.MANAToken; \r\n  // const account = drizzleState.accounts[0];\r\n  // let state = drizzle.store.getState();\r\n  // const dataKey = manaContract.methods.allowance.cacheCall(account,propAddress);\r\n  // const approveMana = state.contracts.MANAToken.allowance[dataKey];\r\n  //setApprovedTokens(approveMana);\r\n\r\n  //console.log(approveMana)\r\n  // const manaContract = drizzle.contracts.MANAToken; \r\n  // const approvedMana = manaContract.methods.allowance(account,propAddress).call();\r\n  // console.log(approvedMana)\r\n\r\n  if(tokenId === null){\r\n    return(\r\n      <div className=\"mx-auto\">   \r\n      TokenId{console.log(tokenId)}\r\n        <Loader color=\"#007bff\" size=\"40px\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  {propAddress && proposalStorageAbi ? \r\n    useEffect(() => {\r\n      fetchProposalAddress();\r\n    }, [propAddress])\r\n\r\n  :\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 27\r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\nconst fetchProposalAddress = async () => {\r\n      let proposalAddress = `${propAddress}`;\r\n      const contractConfig = {\r\n        contractName: `${propAddress}`,\r\n        web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\r\n      };\r\n      if (!drizzle.contracts[`${propAddress}`]) {\r\n      let events = ['ContributionSuccess','ProposalEvent','LogNewProvableQuery','RandomFailure'] ;  \r\n      drizzle.addContract(contractConfig, events);\r\n      }\r\n      if(drizzle.contracts[`${propAddress}`]){\r\n        const proposalContract = drizzle.contracts[`${propAddress}`];\r\n        const account = drizzleState.accounts[0];\r\n        const propBalance = await proposalContract.methods.getSummary(`${tokenId}`).call();\r\n        const manaContract = drizzle.contracts.MANAToken; \r\n        const approvedMana = await manaContract.methods.allowance(account,propAddress).call();\r\n  \r\n        gotContractBalance(propBalance, approvedMana); \r\n        gotPropContract(proposalContract);\r\n    }\r\n}\r\n\r\nif(propAddress === null || propAddress === 'undefined') {\r\n  return (\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 52\r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  )\r\n}  \r\nelse {\r\n  return ( \r\n        <>\r\n          <ContributeForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} propAddress={propAddress} tokenId={tokenId} />\r\n        </>\r\n      );    \r\n  } \r\n}\r\n\r\n  const mapStateToProps = (state) => ({\r\n    proposalStorageAbi: state.appReducers.proposalStorageAbi\r\n  })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  gotContractBalance: (propBalance,approvedMana) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${propBalance}`, approvedMana:approvedMana }),\r\n  gotPropContract: (proposalContract) => dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:proposalContract})\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);"]},"metadata":{},"sourceType":"module"}