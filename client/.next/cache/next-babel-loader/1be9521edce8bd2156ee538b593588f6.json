{"ast":null,"code":"import MyComponent from \"./MyComponent\";\nimport { drizzleConnect } from \"@drizzle/react-plugin\";\n\nconst mapStateToProps = state => {\n  return {\n    propAddress: state.appReducers.propAddress,\n    drizzleStatus: state.drizzleStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCurrentProp: () => dispatch({\n      type: \"GET_PROP_ADDRESS\",\n      propAddress: 2\n    }),\n    testSagaTest: () => dispatch({\n      type: \"TEST_SAGA\"\n    }),\n    onSetDrizzleState: drizzle => dispatch({\n      type: \"SET_DRIZZLE_STATE\",\n      drizzle: drizzle\n    })\n  };\n};\n\nconst MyContainer = drizzleConnect(MyComponent, mapStateToProps, mapDispatchToProps);\n_c = MyContainer;\nexport default MyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyContainer\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/pages/MyContainer.js"],"names":["MyComponent","drizzleConnect","mapStateToProps","state","propAddress","appReducers","drizzleStatus","mapDispatchToProps","dispatch","getCurrentProp","type","testSagaTest","onSetDrizzleState","drizzle","MyContainer"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,WAAN,CAAkBD,WAD1B;AAELE,IAAAA,aAAa,EAAEH,KAAK,CAACG;AAFhB,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,cAAc,EAAE,MAAOD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,kBAAR;AAA2BN,MAAAA,WAAW,EAAC;AAAvC,KAAD,CAD1B;AAELO,IAAAA,YAAY,EAAE,MAAOH,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAFxB;AAGLE,IAAAA,iBAAiB,EAAGC,OAAD,IAAaL,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,mBAAR;AAA6BG,MAAAA,OAAO,EAAEA;AAAtC,KAAD;AAHnC,GAAP;AAKD,CAND;;AAQA,MAAMC,WAAW,GAAGb,cAAc,CAACD,WAAD,EAAcE,eAAd,EAA8BK,kBAA9B,CAAlC;KAAMO,W;AAEN,eAAeA,WAAf","sourcesContent":["import MyComponent from \"./MyComponent\";\r\nimport { drizzleConnect } from \"@drizzle/react-plugin\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    propAddress: state.appReducers.propAddress,\r\n    drizzleStatus: state.drizzleStatus,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCurrentProp: () =>  dispatch({ type: \"GET_PROP_ADDRESS\",propAddress:2 }),\r\n    testSagaTest: () =>  dispatch({ type: \"TEST_SAGA\" }),\r\n    onSetDrizzleState: (drizzle) => dispatch({ type: \"SET_DRIZZLE_STATE\", drizzle: drizzle })\r\n  };\r\n};\r\n\r\nconst MyContainer = drizzleConnect(MyComponent, mapStateToProps,mapDispatchToProps);\r\n\r\nexport default MyContainer;\r\n "]},"metadata":{},"sourceType":"module"}