{"ast":null,"code":"import { EventActions } from \"@drizzle/store\";\nimport { toast } from 'react-toastify';\nconst GET_PROP_ADDRESS = 'GET_PROP_ADDRESS';\nexport const joinTransactionSaga = store => next => action => {\n  if (action.type === \"TX_BROADCASTED\") {\n    store.dispatch({\n      type: \"TX_PROCESSING\"\n    });\n  }\n\n  if (action.type === \"TX_SUCCESSFUL\") {\n    const transactionHash = action.txHash;\n    const transactionNumber = \"\".concat(transactionHash);\n    store.dispatch({\n      type: \"TX_PROCESSING_DONE\"\n    });\n    toast(transactionNumber, {\n      position: toast.POSITION.BOTTOM_LEFT,\n      className: 'successful-transaction'\n    });\n  }\n\n  return next(action);\n};\nexport const depositCurrency = store => next => action => {\n  if (action.type === \"GOT_STACK_ID\") {\n    const _store$getState = store.getState(),\n          drizzle = _store$getState.drizzle,\n          drizzleState = _store$getState.drizzleState;\n\n    const transactions = drizzleState.transactions,\n          transactionStack = drizzleState.transactionStack;\n    const account = drizzleState.accounts[0];\n    let state = drizzle.store.getState();\n    const stackId = action.stackId,\n          convertedContribution = action.convertedContribution,\n          propAddress = action.propAddress;\n\n    if (state.transactionStack[stackId]) {\n      const txHash = transactionStack[stackId];\n\n      if (!txHash) {\n        return console.log(\"loading from capMiddleWare 32\") // <div className=\"mx-auto\">  \n        //   ContributeForm 96\n        //   <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n        // </div>\n        ;\n      } else if (transactions[txHash] && transactions[txHash].status) {\n        const propContract = drizzle.contracts[\"\".concat(propAddress)];\n        propContract.methods[\"contribute\"].cacheSend(convertedContribution, {\n          from: \"\".concat(account),\n          gas: 3000000\n        });\n        toast('you', {\n          position: toast.POSITION.BOTTOM_LEFT,\n          className: 'successful-stackId'\n        });\n      } else {\n        console.log(\"loading from capMiddleWare 44\");\n      }\n\n      return console.log(\"loading from capMiddleWare 49\") // <div className=\"mx-auto\">  \n      //   ContributeForm 96\n      //   <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\n      // </div>\n      ;\n    }\n  }\n\n  return next(action);\n};\nexport const contractEventSaga = lastSeenEventId => store => next => action => {\n  if (action.type === EventActions.EVENT_FIRED) {\n    if (action.event.id !== lastSeenEventId) {\n      lastSeenEventId = action.event.id;\n      const message = action.event.returnValues._message;\n      const display = \"\".concat(message);\n\n      if (action.event.event === \"ContributionSuccess\") {\n        const poolDepth = action.event.returnValues.currentContractBalance;\n        store.dispatch({\n          type: \"PROPOSAL_BALANCE\",\n          balance: \"\".concat(poolDepth)\n        });\n      }\n\n      if (action.event.event === \"AssetNomination\") {\n        const propAddress = action.event.returnValues._proposalAddress;\n        const proposalAddress = \"\".concat(propAddress);\n        store.dispatch({\n          type: \"GOT_PROP_ADDRESS\",\n          proposalAddress: proposalAddress\n        });\n      }\n\n      toast.info(display, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n\n  return next(action);\n};","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/capMiddleWare.js"],"names":["EventActions","toast","GET_PROP_ADDRESS","joinTransactionSaga","store","next","action","type","dispatch","transactionHash","txHash","transactionNumber","position","POSITION","BOTTOM_LEFT","className","depositCurrency","getState","drizzle","drizzleState","transactions","transactionStack","account","accounts","state","stackId","convertedContribution","propAddress","console","log","status","propContract","contracts","methods","cacheSend","from","gas","contractEventSaga","lastSeenEventId","EVENT_FIRED","event","id","message","returnValues","_message","display","poolDepth","currentContractBalance","balance","_proposalAddress","proposalAddress","info","TOP_RIGHT"],"mappings":"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","sourcesContent":["import { EventActions } from \"@drizzle/store\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst GET_PROP_ADDRESS ='GET_PROP_ADDRESS';\r\n\r\nexport const joinTransactionSaga = store => next => action => {\r\n  if (action.type === \"TX_BROADCASTED\") {\r\n    store.dispatch({type:\"TX_PROCESSING\"})\r\n  }\r\n  if (action.type === \"TX_SUCCESSFUL\") { \r\n    const transactionHash = action.txHash\r\n    const transactionNumber = `${transactionHash}`\r\n    store.dispatch({type:\"TX_PROCESSING_DONE\"})\r\n    toast(transactionNumber, { position: toast.POSITION.BOTTOM_LEFT,className:'successful-transaction' })\r\n  }\r\n  return next(action)\r\n}\r\n\r\n\r\n\r\nexport const depositCurrency = store => next => action => {\r\n  if (action.type === \"GOT_STACK_ID\") {\r\n    const { drizzle, drizzleState } = store.getState();\r\n    const { transactions, transactionStack } = drizzleState;\r\n    const account = drizzleState.accounts[0];\r\n    let state = drizzle.store.getState();\r\n    const { stackId, convertedContribution, propAddress } = action;\r\n    if (state.transactionStack[stackId]) {\r\n      const txHash = transactionStack[stackId];\r\n      if (!txHash) {\r\n        return(\r\n          console.log(\"loading from capMiddleWare 32\")\r\n          // <div className=\"mx-auto\">  \r\n          //   ContributeForm 96\r\n          //   <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n          // </div>\r\n        )\r\n      }\r\n      else if(transactions[txHash] && transactions[txHash].status){\r\n        const propContract = drizzle.contracts[`${propAddress}`];\r\n        propContract.methods[\"contribute\"].cacheSend(convertedContribution,{from:`${account}`, gas:3000000}) \r\n        toast('you', { position: toast.POSITION.BOTTOM_LEFT,className:'successful-stackId' })\r\n      }\r\n      else{\r\n        console.log(\"loading from capMiddleWare 44\")\r\n      }\r\n      return(\r\n        console.log(\"loading from capMiddleWare 49\")\r\n        // <div className=\"mx-auto\">  \r\n        //   ContributeForm 96\r\n        //   <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n        // </div>\r\n      )\r\n      }\r\n      \r\n   \r\n  }\r\n  return next(action)\r\n}\r\n\r\n\r\nexport const contractEventSaga = lastSeenEventId => store => next => action => {\r\n  if (action.type === EventActions.EVENT_FIRED) {\r\n    if (action.event.id !== lastSeenEventId) {\r\n      lastSeenEventId = action.event.id\r\n       const message = action.event.returnValues._message\r\n       const display = `${message}`\r\n       if(action.event.event === \"ContributionSuccess\"){\r\n        const poolDepth = action.event.returnValues.currentContractBalance\r\n        store.dispatch({type:\"PROPOSAL_BALANCE\", balance:`${poolDepth}`})\r\n       }\r\n       if(action.event.event === \"AssetNomination\"){\r\n        const propAddress = action.event.returnValues._proposalAddress\r\n        const proposalAddress = `${propAddress}`\r\n        store.dispatch({type:\"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress})\r\n        }\r\n       toast.info(display, { position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n  return next(action)\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}