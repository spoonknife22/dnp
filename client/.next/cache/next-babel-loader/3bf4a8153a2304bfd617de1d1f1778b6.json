{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\buttons\\\\UpdateExpireBtn.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Button, Row, Form } from \"shards-react\";\nimport Moment from \"react-moment\";\n\nconst UpdateExpire = ({\n  drizzle,\n  drizzleState,\n  expiresAt,\n  currentExpiresAt,\n  propAddress\n}) => {\n  const update = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var account, contract;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return drizzleState.accounts[0];\n\n          case 2:\n            account = _context.sent;\n            _context.next = 5;\n            return drizzle.contracts[\"\".concat(propAddress)];\n\n          case 5:\n            contract = _context.sent;\n\n            try {\n              if (currentExpiresAt) {\n                contract.methods[\"updateExpiration\"].cacheSend(currentExpiresAt, {\n                  from: \"\".concat(account)\n                });\n              }\n            } catch (err) {\n              console.error(\"Err:\", err);\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function update() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (!expiresAt) {\n    return __jsx(React.Fragment, null);\n  } else if (expiresAt == 0) {\n    return __jsx(React.Fragment, null);\n  } else if (expiresAt) {\n    return __jsx(React.Fragment, null);\n  } else if (expiresAt != 0 && expiresAt != currentExpiresAt) {\n    return __jsx(Accordion, {\n      defaultActiveKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      className: \" mt-2 mb-1 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-3113164936\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, __jsx(Accordion.Toggle, {\n      as: Button,\n      className: \"px-2.5 py-1.5\",\n      variant: \"link\",\n      eventKey: \"0\",\n      theme: \"warning\",\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-3113164936\" + \" \" + \"expire-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Update Expiration:\"), __jsx(Row, {\n      className: \"mt-1 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-3113164936\" + \" \" + \"mr-1 text-right card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Old Date:\"), __jsx(\"div\", {\n      className: \"jsx-3113164936\" + \" \" + \"text-left card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, typeof Number(expiresAt) == 'number' ? __jsx(Moment, {\n      format: \"h:mma M/DD/YY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, Number(expiresAt)) : 'no end date')), __jsx(Row, {\n      className: \"mt-1 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-3113164936\" + \" \" + \"mr-1 text-right card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"New Date:\"), __jsx(\"div\", {\n      className: \"jsx-3113164936\" + \" \" + \"text-left card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, typeof Number(currentExpiresAt) == 'number' ? __jsx(Moment, {\n      format: \"h:mma M/DD/YY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, Number(currentExpiresAt)) : 'no end date'))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, __jsx(Row, {\n      className: \"justify-content-center text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, __jsx(Form, {\n      onSubmit: update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      outline: true,\n      theme: \"success\",\n      size: \"sm\",\n      className: \"mt-2 mx-auto\",\n      key: \"submit\",\n      type: \"button\",\n      onClick: update,\n      style: {\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Update Expiration\")))))), __jsx(_JSXStyle, {\n      id: \"3113164936\",\n      __self: this\n    }, \".expire-text.jsx-3113164936{font-size:.95rem;color:#000;font-weight:400;font-family:Poppins;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxjb21wb25lbnRzXFxidXR0b25zXFxVcGRhdGVFeHBpcmVCdG4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0ZxQixBQUUwQyxpQkFBVSxXQUFlLGdCQUFvQixvQkFBQyIsImZpbGUiOiJDOlxcVXNlcnNcXFNhbXN1bmdcXGNvZGVcXGNhY3BcXGNsaWVudFxcY29tcG9uZW50c1xcYnV0dG9uc1xcVXBkYXRlRXhwaXJlQnRuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IEFjY29yZGlvbiBmcm9tICdyZWFjdC1ib290c3RyYXAvQWNjb3JkaW9uJztcclxuaW1wb3J0IHsgQnV0dG9uLCBSb3csIEZvcm0gfSBmcm9tIFwic2hhcmRzLXJlYWN0XCI7XHJcbmltcG9ydCBNb21lbnQgZnJvbSBcInJlYWN0LW1vbWVudFwiO1xyXG5cclxuY29uc3QgVXBkYXRlRXhwaXJlID0gICh7IGRyaXp6bGUsIGRyaXp6bGVTdGF0ZSwgZXhwaXJlc0F0LCBjdXJyZW50RXhwaXJlc0F0LCBwcm9wQWRkcmVzcyB9KSA9PiB7IFxyXG5cclxuY29uc3QgdXBkYXRlID0gYXN5bmMgKCkgPT4ge1xyXG4gIGNvbnN0IGFjY291bnQgPSBhd2FpdCBkcml6emxlU3RhdGUuYWNjb3VudHNbMF07XHJcbiAgY29uc3QgY29udHJhY3QgPSBhd2FpdCBkcml6emxlLmNvbnRyYWN0c1tgJHtwcm9wQWRkcmVzc31gXTtcclxuICBcclxuICB0cnkge1xyXG4gICAgaWYoY3VycmVudEV4cGlyZXNBdCl7XHJcbiAgICAgIGNvbnRyYWN0Lm1ldGhvZHNbXCJ1cGRhdGVFeHBpcmF0aW9uXCJdLmNhY2hlU2VuZChjdXJyZW50RXhwaXJlc0F0LCB7ZnJvbTpgJHthY2NvdW50fWB9KTtcclxuICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyOlwiLCBlcnIpXHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgXHJcbmlmKCFleHBpcmVzQXQpIHsgIFxyXG4gIHJldHVybiA8PjwvPjtcclxufVxyXG5cclxuZWxzZSBpZihleHBpcmVzQXQgPT0gMCkge1xyXG4gIHJldHVybiA8PjwvPjtcclxufVxyXG5cclxuZWxzZSBpZihleHBpcmVzQXQpIHtcclxuICByZXR1cm4gPD48Lz47XHJcbn1cclxuZWxzZSBpZihleHBpcmVzQXQgIT0gMCAmJiBleHBpcmVzQXQgIT0gY3VycmVudEV4cGlyZXNBdCkgIHtcclxuICByZXR1cm4gKFxyXG4gICAgICA8QWNjb3JkaW9uIGRlZmF1bHRBY3RpdmVLZXk9XCIxXCI+XHJcbiAgICAgICAgPFJvdyBjbGFzc05hbWU9XCIgbXQtMiBtYi0xIGp1c3RpZnktY29udGVudC1jZW50ZXJcIj5cclxuICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxBY2NvcmRpb24uVG9nZ2xlIGFzPXtCdXR0b259IGNsYXNzTmFtZT1cInB4LTIuNSBweS0xLjVcIiB2YXJpYW50PVwibGlua1wiIGV2ZW50S2V5PVwiMFwiIHRoZW1lPVwid2FybmluZ1wiIG91dGxpbmUgPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImV4cGlyZS10ZXh0XCIgPlVwZGF0ZSBFeHBpcmF0aW9uOjwvZGl2PlxyXG4gICAgICAgICAgICAgIDxSb3cgY2xhc3NOYW1lPVwibXQtMSBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1yLTEgdGV4dC1yaWdodCBjYXJkLXRleHRcIj5PbGQgRGF0ZTo8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1sZWZ0IGNhcmQtdGV4dFwiPlxyXG4gICAgICAgICAgICAgICAgICB7KHR5cGVvZihOdW1iZXIoZXhwaXJlc0F0KSkgPT0gJ251bWJlcicpP1xyXG4gICAgICAgICAgICAgICAgICAgIDxNb21lbnQgZm9ybWF0PVwiaDptbWEgTS9ERC9ZWVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAge051bWJlcihleHBpcmVzQXQpfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvTW9tZW50PiAgICAgICBcclxuICAgICAgICAgICAgICAgICAgOlxyXG4gICAgICAgICAgICAgICAgICAgICdubyBlbmQgZGF0ZSdcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICAgIDwvUm93PiAgXHJcbiAgICAgICAgICAgICAgPFJvdyBjbGFzc05hbWU9XCJtdC0xIGp1c3RpZnktY29udGVudC1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXItMSB0ZXh0LXJpZ2h0IGNhcmQtdGV4dFwiPk5ldyBEYXRlOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWxlZnQgY2FyZC10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICAgIHsodHlwZW9mKE51bWJlcihjdXJyZW50RXhwaXJlc0F0KSkgPT0gJ251bWJlcicpP1xyXG4gICAgICAgICAgICAgICAgICAgIDxNb21lbnQgZm9ybWF0PVwiaDptbWEgTS9ERC9ZWVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAge051bWJlcihjdXJyZW50RXhwaXJlc0F0KX1cclxuICAgICAgICAgICAgICAgICAgICA8L01vbWVudD4gICAgICAgXHJcbiAgICAgICAgICAgICAgICAgIDpcclxuICAgICAgICAgICAgICAgICAgICAnbm8gZW5kIGRhdGUnXHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICAgICAgICA8L1Jvdz4gIFxyXG4gICAgICAgICAgICA8L0FjY29yZGlvbi5Ub2dnbGU+XHJcbiAgICAgICAgICAgICAgPEFjY29yZGlvbi5Db2xsYXBzZSBldmVudEtleT1cIjBcIj5cclxuICAgICAgICAgICAgICAgIDxSb3cgY2xhc3NOYW1lPVwianVzdGlmeS1jb250ZW50LWNlbnRlciB0ZXh0LWxlZnRcIj5cclxuICAgICAgICAgICAgICAgICAgPEZvcm0gb25TdWJtaXQ9e3VwZGF0ZX0+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBvdXRsaW5lIHRoZW1lPVwic3VjY2Vzc1wiIHNpemU9XCJzbVwiIGNsYXNzTmFtZT1cIm10LTIgbXgtYXV0b1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICBrZXk9XCJzdWJtaXRcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXHJcbiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt1cGRhdGV9IFxyXG4gICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6IDEyIH19XHJcbiAgICAgICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgVXBkYXRlIEV4cGlyYXRpb25cclxuICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgPC9Gb3JtPlxyXG4gICAgICAgICAgICAgICAgPC9Sb3c+XHJcbiAgICAgICAgICAgICAgPC9BY2NvcmRpb24uQ29sbGFwc2U+XHJcbiAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgPC9Sb3c+XHJcbiAgICAgICAgPHN0eWxlIGpzeD4ge2AgXHJcbiAgICAgICAgICAgIC5leHBpcmUtdGV4dCB7Zm9udC1zaXplOi45NXJlbTtjb2xvcjojMDAwO2ZvbnQtd2VpZ2h0OjQwMDtmb250LWZhbWlseTogUG9wcGluczt9XHJcbiAgICAgICAgICBgfSAgICBcclxuICAgICAgICA8L3N0eWxlPlxyXG4gICAgICA8L0FjY29yZGlvbj5cclxuICAgIClcclxufVxyXG5lbHNlIHtcclxuICByZXR1cm4gPD48Lz47XHJcbn1cclxuXHJcbn1cclxuXHJcblxyXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XHJcbiAgZXhwaXJlc0F0OnN0YXRlLmFwcFJlZHVjZXJzLmV4cGlyZXNBdCxcclxuICBjdXJyZW50RXhwaXJlc0F0OnN0YXRlLmFwcFJlZHVjZXJzLmN1cnJlbnRFeHBpcmVzQXRcclxufSlcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBudWxsKShVcGRhdGVFeHBpcmUpO1xyXG5cclxuXHJcblxyXG5cclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Samsung\\\\\\\\code\\\\\\\\cacp\\\\\\\\client\\\\\\\\components\\\\\\\\buttons\\\\\\\\UpdateExpireBtn.js */\"));\n  } else {\n    return __jsx(React.Fragment, null);\n  }\n};\n\n_c = UpdateExpire;\n\nconst mapStateToProps = state => ({\n  expiresAt: state.appReducers.expiresAt,\n  currentExpiresAt: state.appReducers.currentExpiresAt\n});\n\nexport default connect(mapStateToProps, null)(UpdateExpire);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateExpire\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/buttons/UpdateExpireBtn.js"],"names":["React","connect","Accordion","Button","Row","Form","Moment","UpdateExpire","drizzle","drizzleState","expiresAt","currentExpiresAt","propAddress","update","accounts","account","contracts","contract","methods","cacheSend","from","err","console","error","Number","fontSize","mapStateToProps","state","appReducers"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Button, Row, Form } from \"shards-react\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst UpdateExpire =  ({ drizzle, drizzleState, expiresAt, currentExpiresAt, propAddress }) => { \r\n\r\nconst update = async () => {\r\n  const account = await drizzleState.accounts[0];\r\n  const contract = await drizzle.contracts[`${propAddress}`];\r\n  \r\n  try {\r\n    if(currentExpiresAt){\r\n      contract.methods[\"updateExpiration\"].cacheSend(currentExpiresAt, {from:`${account}`});\r\n    }\r\n    } catch (err) {\r\n      console.error(\"Err:\", err)\r\n    }\r\n\r\n  }\r\n\r\n  \r\nif(!expiresAt) {  \r\n  return <></>;\r\n}\r\n\r\nelse if(expiresAt == 0) {\r\n  return <></>;\r\n}\r\n\r\nelse if(expiresAt) {\r\n  return <></>;\r\n}\r\nelse if(expiresAt != 0 && expiresAt != currentExpiresAt)  {\r\n  return (\r\n      <Accordion defaultActiveKey=\"1\">\r\n        <Row className=\" mt-2 mb-1 justify-content-center\">\r\n          <div>\r\n            <Accordion.Toggle as={Button} className=\"px-2.5 py-1.5\" variant=\"link\" eventKey=\"0\" theme=\"warning\" outline >\r\n            <div className=\"expire-text\" >Update Expiration:</div>\r\n              <Row className=\"mt-1 justify-content-center\">\r\n                <div className=\"mr-1 text-right card-text\">Old Date:</div>\r\n                <div className=\"text-left card-text\">\r\n                  {(typeof(Number(expiresAt)) == 'number')?\r\n                    <Moment format=\"h:mma M/DD/YY\">\r\n                      {Number(expiresAt)}\r\n                    </Moment>       \r\n                  :\r\n                    'no end date'\r\n                  }\r\n                </div> \r\n              </Row>  \r\n              <Row className=\"mt-1 justify-content-center\">\r\n                <div className=\"mr-1 text-right card-text\">New Date:</div>\r\n                <div className=\"text-left card-text\">\r\n                  {(typeof(Number(currentExpiresAt)) == 'number')?\r\n                    <Moment format=\"h:mma M/DD/YY\">\r\n                      {Number(currentExpiresAt)}\r\n                    </Moment>       \r\n                  :\r\n                    'no end date'\r\n                  }\r\n                </div> \r\n              </Row>  \r\n            </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Row className=\"justify-content-center text-left\">\r\n                  <Form onSubmit={update}>\r\n                    <Button outline theme=\"success\" size=\"sm\" className=\"mt-2 mx-auto\"\r\n                      key=\"submit\"\r\n                      type=\"button\"\r\n                      onClick={update} \r\n                      style={{ fontSize: 12 }}\r\n                    >\r\n                      Update Expiration\r\n                    </Button>\r\n                  </Form>\r\n                </Row>\r\n              </Accordion.Collapse>\r\n          </div> \r\n        </Row>\r\n        <style jsx> {` \r\n            .expire-text {font-size:.95rem;color:#000;font-weight:400;font-family: Poppins;}\r\n          `}    \r\n        </style>\r\n      </Accordion>\r\n    )\r\n}\r\nelse {\r\n  return <></>;\r\n}\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  expiresAt:state.appReducers.expiresAt,\r\n  currentExpiresAt:state.appReducers.currentExpiresAt\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(UpdateExpire);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}