{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchPropAddr),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchPropSaga);\n\nimport { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\nconst GET_PROP_ADDRESS = 'GET_PROP_ADDRESS';\n\nfunction fetchPropAddr(action) {\n  return _regeneratorRuntime.wrap(function fetchPropAddr$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return put({\n          type: 'GOT_PROP_ADDRESS',\n          propAddress: 2\n        });\n\n      case 2:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}\n\nfunction fetchPropSaga() {\n  return _regeneratorRuntime.wrap(function fetchPropSaga$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.next = 2;\n        return takeLatest(GET_PROP_ADDRESS, fetchPropAddr);\n\n      case 2:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2);\n}\n\nexport default fetchPropSaga;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/reducers/fetchSaga.js"],"names":["fetchPropAddr","fetchPropSaga","all","fork","takeLatest","put","call","take","race","select","takeEvery","GET_PROP_ADDRESS","action","type","propAddress"],"mappings":";;oDAIWA,a;qDAKAC,a;;AATX,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+DC,SAA/D,QAAgF,oBAAhF;AAEA,MAAMC,gBAAgB,GAAE,kBAAxB;;AAEA,SAAWX,aAAX,CAA0BY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAEE,eAAMP,GAAG,CAAC;AAAEQ,UAAAA,IAAI,EAAE,kBAAR;AAA4BC,UAAAA,WAAW,EAAC;AAAxC,SAAD,CAAT;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAWb,aAAX;AAAA;AAAA;AAAA;AAAA;AACE,eAAMG,UAAU,CAACO,gBAAD,EAAmBX,aAAnB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeC,aAAf","sourcesContent":["import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\r\n\r\nconst GET_PROP_ADDRESS ='GET_PROP_ADDRESS';\r\n\r\nfunction * fetchPropAddr (action) {\r\n  //console.log('ehho');\r\n  yield put({ type: 'GOT_PROP_ADDRESS', propAddress:2});\r\n}\r\n\r\nfunction * fetchPropSaga() {\r\n  yield takeLatest(GET_PROP_ADDRESS, fetchPropAddr);\r\n}\r\n\r\nexport default fetchPropSaga;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}