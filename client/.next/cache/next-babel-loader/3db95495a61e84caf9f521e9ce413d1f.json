{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AccountsContainer.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport MyAddBar from \"./AddressBar.js\";\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport { Drizzle } from \"@drizzle/store\";\nimport options from \"./drizzleOptions\";\nimport { Loader } from 'rimble-ui';\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\nconst {\n  ContractData\n} = newContextComponents;\nconst drizzle = new Drizzle(options);\n\nconst AccountsContainer = () => {\n  return __jsx(DrizzleContext.Provider, {\n    drizzle: drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(DrizzleContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, drizzleContext => {\n    const {\n      drizzle,\n      drizzleState,\n      initialized\n    } = drizzleContext;\n\n    if (!initialized) {\n      return __jsx(Loader, {\n        size: \"30px\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const account = drizzleState.accounts[0]; //const acount = drizzleState.accounts[0];\n\n    let member;\n\n    member = async () => {\n      const isMember = await drizzle.contracts.UserStorage.methods.addresses(drizzleState.accounts[0]).call();\n      let button;\n\n      if (!isMember) {\n        button = __jsx(MyAddBar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 28\n          }\n        });\n      } else {\n        button = __jsx(JoinButton, {\n          drizzleState: drizzleState,\n          drizzle: drizzle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 28\n          }\n        });\n      }\n\n      return {\n        button\n      };\n    };\n\n    member().then(member => {\n      console.log({\n        member\n      });\n    });\n  }));\n};\n\nexport default AccountsContainer;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AccountsContainer.js"],"names":["React","UserInfo","MyAddBar","DrizzleContext","newContextComponents","Drizzle","options","Loader","JoinButton","ContractData","drizzle","AccountsContainer","drizzleContext","drizzleState","initialized","account","accounts","member","isMember","contracts","UserStorage","methods","addresses","call","button","then","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAUC,MAAV,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAmBL,oBAAzB;AACA,MAAMM,OAAO,GAAG,IAAIL,OAAJ,CAAYC,OAAZ,CAAhB;;AAEA,MAAMK,iBAAiB,GAAG,MAAM;AAE9B,SACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,OAAO,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,IAAI;AACjB,UAAM;AAACF,MAAAA,OAAD;AAAUG,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,QAAwCF,cAA9C;;AAEA,QAAG,CAACE,WAAJ,EAAiB;AACf,aAAO,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAEC,UAAMC,OAAO,GAAGF,YAAY,CAACG,QAAb,CAAsB,CAAtB,CAAhB,CAPe,CAWb;;AACA,QAAIC,MAAJ;;AACAA,IAAAA,MAAM,GAAG,YAAY;AACrB,YAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,SAAR,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCC,SAAtC,CAAgDT,YAAY,CAACG,QAAb,CAAsB,CAAtB,CAAhD,EAA0EO,IAA1E,EAAvB;AACA,UAAIC,MAAJ;;AACA,UAAI,CAACN,QAAL,EAAe;AACXM,QAAAA,MAAM,GAAG,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD,OAFH,MAES;AAELA,QAAAA,MAAM,GAAG,MAAC,UAAD;AAAY,UAAA,YAAY,EAAEX,YAA1B;AAAwC,UAAA,OAAO,EAAEH,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD;;AACD,aAEI;AAACc,QAAAA;AAAD,OAFJ;AAMD,KAfD;;AAgBAP,IAAAA,MAAM,GAAGQ,IAAT,CAAeR,MAAD,IAAY;AACxBS,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACV,QAAAA;AAAD,OAAZ;AACD,KAFD;AAeL,GA7CH,CADF,CADF;AAoDD,CAtDD;;AAuDA,eAAeN,iBAAf","sourcesContent":["import React from \"react\";\r\nimport UserInfo from \"./UserInfo\"; \r\nimport MyAddBar from \"./AddressBar.js\"; \r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { newContextComponents } from \"@drizzle/react-components\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport options from \"./drizzleOptions\";\r\nimport {  Loader } from 'rimble-ui';\r\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\r\n\r\nconst { ContractData } = newContextComponents;\r\nconst drizzle = new Drizzle(options);\r\n\r\nconst AccountsContainer = () => {\r\n \r\n  return  (\r\n    <DrizzleContext.Provider drizzle={drizzle}>\r\n      <DrizzleContext.Consumer>\r\n        {drizzleContext => {\r\n          const {drizzle, drizzleState, initialized } = drizzleContext;\r\n\r\n          if(!initialized) {\r\n            return <Loader size=\"30px\" color=\"white\" />\r\n          }\r\n      \r\n            const account = drizzleState.accounts[0];\r\n\r\n             \r\n         \r\n              //const acount = drizzleState.accounts[0];\r\n              let member;\r\n              member = async () => {\r\n              const isMember = await drizzle.contracts.UserStorage.methods.addresses(drizzleState.accounts[0]).call();\r\n              let button;\r\n              if (!isMember) {\r\n                  button = <MyAddBar /> \r\n                } else {\r\n                \r\n                  button = <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\r\n                }\r\n                return (\r\n                \r\n                    {button}\r\n                \r\n                );\r\n                \r\n              } \r\n              member().then((member) => {\r\n                console.log({member})\r\n              });\r\n              \r\n            \r\n\r\n              \r\n            \r\n            \r\n          \r\n          \r\n            \r\n          \r\n     \r\n\r\n        }}\r\n      </DrizzleContext.Consumer>\r\n    </DrizzleContext.Provider>\r\n);\r\n  \r\n}\r\nexport default AccountsContainer;"]},"metadata":{},"sourceType":"module"}