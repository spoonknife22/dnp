{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\NominationDetailsLink.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Button } from \"shards-react\";\n\nconst NominationDetailsLink = ({\n  parcel\n}) => {\n  const {\n    0: tokenId,\n    1: setTokenId\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const fetchDetailsLink = async () => {\n    const xcord = -parcel.x;\n    const ycord = parcel.y;\n    var obj = {};\n    obj[xcord] = something;\n    const graphql = JSON.stringify({\n      query: '{ parcels(where: {x:$xcord,y:2}) { tokenId }}',\n      variables: {}\n    });\n    let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n        targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace';\n    fetch(proxyUrl + targetUrl, {\n      method: \"POST\",\n      headers: myHeaders,\n      body: graphql,\n      redirect: 'follow'\n    }).then(res => res.json()).then(result => {\n      const parcelData = result.data.parcels[0]; //const tokenId = parcelData.tokenId;\n\n      setTokenId(parcelData.tokenId);\n      setLoading(false);\n      console.log(parcelData.tokenId);\n    });\n  };\n\n  return __jsx(Accordion, {\n    defaultActiveKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Accordion.Toggle, {\n    as: Button,\n    onClick: fetchDetailsLink,\n    variant: \"link\",\n    eventKey: \"0\",\n    outline: true,\n    theme: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Property Details\")), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3 mt-3 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Decentraland\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    href: `https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/` + {\n      tokenId\n    },\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"OpenSea\"))))));\n};\n\nexport default NominationDetailsLink;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/NominationDetailsLink.js"],"names":["React","useState","Accordion","Button","NominationDetailsLink","parcel","tokenId","setTokenId","loading","setLoading","myHeaders","Headers","append","fetchDetailsLink","xcord","x","ycord","y","obj","something","graphql","JSON","stringify","query","variables","proxyUrl","targetUrl","fetch","method","headers","body","redirect","then","res","json","result","parcelData","data","parcels","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Button } from \"shards-react\";\r\n\r\n\r\n\r\nconst NominationDetailsLink = ({ parcel }) => { \r\n\r\n\r\n\r\n  const [tokenId, setTokenId] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nconst fetchDetailsLink = async () => {\r\n  const xcord=-parcel.x;\r\n  const ycord=parcel.y;\r\n  \r\n  var obj={};\r\n  obj[xcord]=something;\r\n  \r\n  const graphql= JSON.stringify({ query: \r\n  '{ parcels(where: {x:$xcord,y:2}) { tokenId }}', variables:{} \r\n})\r\n\r\n  \r\n\r\n  let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n  targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\r\n\r\n  fetch(proxyUrl + targetUrl, {\r\n    method: \"POST\",\r\n    headers:myHeaders,  \r\n    body:graphql,\r\n    redirect: 'follow'\r\n})\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        const parcelData = result.data.parcels[0];\r\n        //const tokenId = parcelData.tokenId;\r\n\r\n        setTokenId(parcelData.tokenId);\r\n        setLoading(false); \r\n        \r\n        console.log(parcelData.tokenId);\r\n    });\r\n  }\r\n\r\nreturn (\r\n    <Accordion defaultActiveKey=\"1\">\r\n      <div>  \r\n        <Accordion.Toggle as={Button} onClick={fetchDetailsLink} variant=\"link\" eventKey=\"0\" outline theme=\"light\">\r\n        <div>Property Details</div>\r\n        </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n          \r\n            <div className=\"p-3 mt-3 border rounded\">\r\n              <div>\r\n                <a  target=\"_blank\">Decentraland</a>\r\n              </div>\r\n              <div>\r\n                <a href={`https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/`+ {tokenId}}  target=\"_blank\">OpenSea</a>\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n      </div> \r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default NominationDetailsLink;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}