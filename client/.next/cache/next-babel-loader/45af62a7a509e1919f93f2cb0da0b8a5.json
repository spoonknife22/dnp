{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AddrJoinNav.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport AddressBar from \"./AddressBar.js\";\nimport JoinButton from \"../components/buttons/JoinButton.js\";\n\nclass AddrJoinNav extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null,\n      contracts: null\n    });\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _this$props, drizzle, drizzleState, contract, account, dataKey;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this$props = _this.props, drizzle = _this$props.drizzle, drizzleState = _this$props.drizzleState;\n            contract = drizzle.contracts.UserStorage;\n            account = drizzleState.accounts[0];\n            _context.prev = 3;\n            _context.next = 6;\n            return contract.methods[\"addresses\"].cacheCall(account);\n\n          case 6:\n            dataKey = _context.sent;\n\n            _this.setState({\n              dataKey\n            });\n\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n\n            _this.setState({\n              errorMessage: _context.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 10]]);\n    }))();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.drizzleState.accounts[0] !== this.props.drizzleState.accounts[0]) {\n      window.location.reload();\n    }\n  }\n\n  render() {\n    const UserStorage = this.props.drizzleState.contracts.UserStorage;\n    const displayData = UserStorage.addresses[this.state.dataKey];\n    let user = displayData && displayData.value;\n\n    if (user) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, console.log(this.props.drizzleState.appReducers), __jsx(AddressBar, {\n        drizzle: this.props.drizzle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return __jsx(JoinButton, {\n      drizzleState: this.props.drizzleState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }\n    });\n  }\n\n}\n\nexport default AddrJoinNav;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AddrJoinNav.js"],"names":["React","AddressBar","JoinButton","AddrJoinNav","Component","dataKey","contracts","componentDidMount","props","drizzle","drizzleState","contract","UserStorage","account","accounts","methods","cacheCall","setState","errorMessage","message","componentDidUpdate","prevProps","window","location","reload","render","displayData","addresses","state","user","value","console","log","appReducers"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCACjC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KADiC;AAAA;;AAGpCC,EAAAA,iBAAN,GAA0B;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,0BACU,KAAI,CAACC,KADf,EAChBC,OADgB,eAChBA,OADgB,EACPC,YADO,eACPA,YADO;AAElBC,YAAAA,QAFkB,GAEPF,OAAO,CAACH,SAAR,CAAkBM,WAFX;AAGjBC,YAAAA,OAHiB,GAGPH,YAAY,CAACI,QAAb,CAAsB,CAAtB,CAHO;AAAA;AAAA;AAAA,mBAMFH,QAAQ,CAACI,OAAT,CAAiB,WAAjB,EAA8BC,SAA9B,CAAwCH,OAAxC,CANE;;AAAA;AAMlBR,YAAAA,OANkB;;AAQxB,YAAA,KAAI,CAACY,QAAL,CAAc;AAAEZ,cAAAA;AAAF,aAAd;;AARwB;AAAA;;AAAA;AAAA;AAAA;;AAWtB,YAAA,KAAI,CAACY,QAAL,CAAc;AAAEC,cAAAA,YAAY,EAAE,YAAIC;AAApB,aAAd;;AAXsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAaxB;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B,QAAIA,SAAS,CAACX,YAAV,CAAuBI,QAAvB,CAAgC,CAAhC,MAAuC,KAAKN,KAAL,CAAWE,YAAX,CAAwBI,QAAxB,CAAiC,CAAjC,CAA3C,EAAgF;AAC9EQ,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF;;AAEAC,EAAAA,MAAM,GAAG;AAAA,UAEAb,WAFA,GAEgB,KAAKJ,KAAL,CAAWE,YAAX,CAAwBJ,SAFxC,CAEAM,WAFA;AAGR,UAAMc,WAAW,GAAGd,WAAW,CAACe,SAAZ,CAAsB,KAAKC,KAAL,CAAWvB,OAAjC,CAApB;AACA,QAAIwB,IAAI,GAAIH,WAAW,IAAIA,WAAW,CAACI,KAAvC;;AAEA,QAAGD,IAAH,EAAS;AACP,aACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIE,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWE,YAAX,CAAwBuB,WAApC,CADJ,EAEE,MAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADV;AAMS;;AACC,WAAO,MAAC,UAAD;AAAY,MAAA,YAAY,EAAG,KAAKD,KAAL,CAAWE,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAvC6B;;AA0C1C,eAAeP,WAAf","sourcesContent":["import React from 'react';\r\nimport AddressBar  from \"./AddressBar.js\"; \r\nimport JoinButton from \"../components/buttons/JoinButton.js\";\r\n\r\nclass AddrJoinNav extends React.Component {\r\n state = { dataKey: null,contracts: null };\r\n\r\nasync componentDidMount() {\r\n  const { drizzle, drizzleState } = this.props;\r\n  const contract = drizzle.contracts.UserStorage;\r\n   const account = drizzleState.accounts[0];\r\n\r\n  try {\r\n  const dataKey = await contract.methods[\"addresses\"].cacheCall(account);\r\n\r\n  this.setState({ dataKey });\r\n  } \r\n  catch (err) {\r\n    this.setState({ errorMessage: err.message });\r\n  }\r\n }\r\n\r\n componentDidUpdate(prevProps) {\r\n  if (prevProps.drizzleState.accounts[0] !== this.props.drizzleState.accounts[0]) {\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\n render() {\r\n    \r\n  const { UserStorage } = this.props.drizzleState.contracts;\r\n  const displayData = UserStorage.addresses[this.state.dataKey]; \r\n  let user =  displayData && displayData.value;\r\n\r\n  if(user) {   \r\n    return  (\r\n              <div>\r\n                 {console.log(this.props.drizzleState.appReducers)}\r\n                <AddressBar drizzle={this.props.drizzle} />\r\n              </div>\r\n            )\r\n            }\r\n              return <JoinButton drizzleState ={this.props.drizzleState}/>;\r\n            }\r\n    }\r\n\r\nexport default AddrJoinNav;\r\n\r\n"]},"metadata":{},"sourceType":"module"}