{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\NominationModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { CardFooter } from \"shards-react\";\nimport Web3 from \"web3\";\nimport NominationForm from '../forms/NominationForm'; // componentDidUpdate(prevProps) {\n//   if (prevProps.drizzleState.dappReducer.transactionProcessing !== this.props.drizzleState.dappReducer.transactionProcessing) {\n//       this.setState({\n//         show: this.props.drizzleState.dappReducer.transactionProcessing,\n//       });\n//   }\n// }\n\nconst NominationModal = ({\n  drizzleState,\n  drizzle,\n  parcel,\n  props\n}) => {\n  _s();\n\n  const processTransaction = drizzleState.dappReducer.transactionProcessing;\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    () => {\n      drizzleState.dappReducer.transactionProcessing;\n    }, [drizzleState.dappReducer.transactionProcessing]; //setShow(drizzleState.dappReducer.transactionProcessing)\n  });\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-lg btn-block card-footer-btn\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, \"Nominate Asset\"), __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Header, {\n    className: \"text-center justify-content-center\",\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Modal.Title, {\n    className: \"text-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Asset Price:\\xA0\", parcel.publication.price, \"\\xA0MANA\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, __jsx(NominationForm, {\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    assetPrice: parcel.publication.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  })))))));\n};\n\n_s(NominationModal, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n\n_c = NominationModal;\nexport default NominationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NominationModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/NominationModal.js"],"names":["React","useState","useEffect","Modal","CardFooter","Web3","NominationForm","NominationModal","drizzleState","drizzle","parcel","props","processTransaction","dappReducer","transactionProcessing","show","setShow","handleClose","handleShow","publication","price"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,yBAA3B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA,MAAzB;AAAiCC,EAAAA;AAAjC,CAAD,KAA8C;AAAA;;AAEpE,QAAMC,kBAAkB,GAAGJ,YAAY,CAACK,WAAb,CAAyBC,qBAApD;AAGA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMgB,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACM,MAAAA,YAAY,CAACK,WAAb,CAAyBC,qBAAzB;AAA+C,KAAtD,EAAwD,CAACN,YAAY,CAACK,WAAb,CAAyBC,qBAA1B,CAA1D,CADc,CAGd;AACD,GAJQ,CAAT;AAOA,SACM,4BACC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sCAAhC;AAAuE,IAAA,OAAO,EAAEI,UAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,MAAM,EAAEE,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS,EAAC,oCAAxB;AAA6D,IAAA,WAAW,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAa,IAAA,SAAS,EAAC,oCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA+EP,MAAM,CAACS,WAAP,CAAmBC,KAAlG,aADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,cAAD;AACE,IAAA,OAAO,EAAEX,OADX;AAEE,IAAA,YAAY,EAAGD,YAFjB;AAGE,IAAA,UAAU,EAAEE,MAAM,CAACS,WAAP,CAAmBC,KAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADF,CADF,CAJF,CAFF,CADN;AAuBO,CAvCT;;GAAMb,e;;KAAAA,e;AAyCF,eAAeA,eAAf","sourcesContent":["  \r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CardFooter } from \"shards-react\";\r\nimport Web3 from \"web3\";\r\nimport NominationForm from '../forms/NominationForm';\r\n\r\n\r\n// componentDidUpdate(prevProps) {\r\n//   if (prevProps.drizzleState.dappReducer.transactionProcessing !== this.props.drizzleState.dappReducer.transactionProcessing) {\r\n//       this.setState({\r\n//         show: this.props.drizzleState.dappReducer.transactionProcessing,\r\n//       });\r\n//   }\r\n// }\r\n\r\nconst NominationModal = ({ drizzleState, drizzle, parcel, props }) => {\r\n\r\n  const processTransaction = drizzleState.dappReducer.transactionProcessing;\r\n \r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    ( () => {drizzleState.dappReducer.transactionProcessing}, [drizzleState.dappReducer.transactionProcessing] );\r\n\r\n    //setShow(drizzleState.dappReducer.transactionProcessing)\r\n  });\r\n\r\n  \r\n  return (   \r\n        <>\r\n         <button type=\"button\" className=\"btn btn-lg btn-block card-footer-btn\" onClick={handleShow}>Nominate Asset</button>\r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header className=\"text-center justify-content-center\" closeButton>\r\n              <Modal.Title className=\"text-center justify-content-center\">Asset Price:&nbsp;{parcel.publication.price}&nbsp;MANA</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                  <NominationForm                   \r\n                    drizzle={drizzle}\r\n                    drizzleState ={drizzleState}  \r\n                    assetPrice={parcel.publication.price}  \r\n                    /> \r\n                  </div>  \r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </>\r\n         );    \r\n        } \r\n\r\n    export default NominationModal;      "]},"metadata":{},"sourceType":"module"}