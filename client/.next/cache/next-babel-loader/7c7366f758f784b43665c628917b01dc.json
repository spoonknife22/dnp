{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\OsSdk.js\";\nvar __jsx = React.createElement;\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network, OpenSeaAsset } from 'opensea-js';\nimport React, { Component } from 'react';\nimport OpenSeaApi from \"./OpenSeaApi.js\";\n\nconst OsSdk = () => {\n  // This example provider won't let you make transactions, only read-only calls:\n  const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\n  const seaport = new OpenSeaPort(provider, {\n    networkName: Network.Main,\n    apiKey: '2f2a0900458f4bdfbb489680a58e7526'\n  }); //const seaport = new OpenSeaPort(Web3.givenProvider, { networkName: Network.Main })\n\n  seaport.api.getAssets({\n    asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n    //token_id: '7024',\n    //order_direction: \"desc\",\n    offset: 0,\n    limit: 20 //side: 0\n\n  }).then(function (order) {\n    console.log(order); // Important to check if the order is still available as it can have already been fulfilled by\n    // another user or cancelled by the creator\n    //   if (order) {\n    //     // This will bring the wallet confirmation popup for the user to confirm the purchase\n    //     seaport.fulfillOrder({ order: order, accountAddress: account });\n    //   } else {\n    //     // Handle when the order does not exist anymore\n    //   }\n  }); // const asset: OpenSeaAsset = await seaport.api.getAsset({\n  //   tokenAddress, // string\n  //   tokenId, // string | number | null\n  // })\n  //console.log(seaport);\n  //render() {\n\n  return __jsx(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Hi Joe\")); // }\n};\n\nexport default OsSdk;","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/OsSdk.js"],"names":["Web3","OpenSeaPort","Network","OpenSeaAsset","React","Component","OpenSeaApi","OsSdk","provider","providers","HttpProvider","seaport","networkName","Main","apiKey","api","getAssets","asset_contract_address","offset","limit","then","order","console","log"],"mappings":";;AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,YAA/B,QAAoD,YAApD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AACpB;AACA,QAAMC,QAAQ,GAAG,IAAIR,IAAI,CAACS,SAAL,CAAeC,YAAnB,CAAgC,2BAAhC,CAAjB;AAEA,QAAMC,OAAO,GAAG,IAAIV,WAAJ,CAAgBO,QAAhB,EAA0B;AACxCI,IAAAA,WAAW,EAAEV,OAAO,CAACW,IADmB;AAExCC,IAAAA,MAAM,EAAE;AAFgC,GAA1B,CAAhB,CAJoB,CAUpB;;AAEAH,EAAAA,OAAO,CAACI,GAAR,CAAYC,SAAZ,CAAsB;AACpBC,IAAAA,sBAAsB,EAAE,4CADJ;AAEpB;AACA;AACAC,IAAAA,MAAM,EAAE,CAJY;AAKpBC,IAAAA,KAAK,EAAE,EALa,CAMrB;;AANqB,GAAtB,EAOGC,IAPH,CAOQ,UAASC,KAAT,EAAgB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADoB,CAEtB;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACC,GAjBD,EAZoB,CA+BpB;AACA;AACA;AACA;AACA;AAEA;;AACI,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CAtCgB,CA8CjB;AACF,CA/CD;;AAiDA,eAAed,KAAf","sourcesContent":["import * as Web3 from 'web3';\r\nimport { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js';\r\nimport React, { Component } from 'react';\r\nimport OpenSeaApi from \"./OpenSeaApi.js\";\r\n\r\n\r\nconst OsSdk = () => {\r\n// This example provider won't let you make transactions, only read-only calls:\r\nconst provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\r\n\r\nconst seaport = new OpenSeaPort(provider, {\r\n  networkName: Network.Main,\r\n  apiKey: '2f2a0900458f4bdfbb489680a58e7526'\r\n});\r\n\r\n\r\n//const seaport = new OpenSeaPort(Web3.givenProvider, { networkName: Network.Main })\r\n\r\nseaport.api.getAssets({\r\n  asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n  //token_id: '7024',\r\n  //order_direction: \"desc\",\r\n  offset: 0,\r\n  limit: 20,\r\n //side: 0\r\n}).then(function(order) {\r\n    console.log(order)\r\n  // Important to check if the order is still available as it can have already been fulfilled by\r\n  // another user or cancelled by the creator\r\n//   if (order) {\r\n//     // This will bring the wallet confirmation popup for the user to confirm the purchase\r\n//     seaport.fulfillOrder({ order: order, accountAddress: account });\r\n//   } else {\r\n//     // Handle when the order does not exist anymore\r\n//   }\r\n});\r\n\r\n// const asset: OpenSeaAsset = await seaport.api.getAsset({\r\n//   tokenAddress, // string\r\n//   tokenId, // string | number | null\r\n// })\r\n//console.log(seaport);\r\n\r\n//render() {\r\n    return (\r\n      <div className=\"container2\">\r\n        <div className=\"container1\">\r\n            Hi Joe\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n   // }\r\n}\r\n\r\nexport default OsSdk;"]},"metadata":{},"sourceType":"module"}