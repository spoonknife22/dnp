{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\Navbar.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Link, Router } from '../../routes';\nimport { MetaMaskButton, EthAddress, Box, Text } from 'rimble-ui';\nimport RegModal from './RegModal.js';\nimport store from '../EthComponents/middleware'; // import drizzleOptions from \"../EthComponents/drizzleOptions\";\n// import AccountsContainer from '../EthComponents/AccountsContainer.js';\n//import { Drizzle } from '@drizzle/store';\n// import drizzle functions and contract artifact\n\nimport { Drizzle, generateStore } from '@drizzle/store';\nimport SimpleStorage from \"../artifacts/contracts/SimpleStorage.json\"; // let drizzle know what contracts we want\n\nconst options = {\n  contracts: [SimpleStorage]\n}; // setup the drizzle store and drizzle\n\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);\nimport { Card, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, InputGroup, InputGroupAddon, InputGroupText, FormInput, Button, Collapse } from \"shards-react\";\nconst customTheme = {\n  buttons: {\n    primary: {\n      // use css custom props\n      '--main-color': '#17c671',\n      '--contrast-color': '#17c671'\n    }\n  },\n  colors: {\n    green: '#17c671'\n  },\n  fontSizes: [1, 2, 3, 4, 45]\n};\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"toggleRegisterModal\", async () => {\n      const {\n        showRegisterModal\n      } = this.state;\n      this.setState({\n        showRegisterModal: !showRegisterModal\n      });\n    });\n\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      collapseOpen: false,\n      showRegisterModal: false,\n      drizzleState: null\n    };\n  }\n\n  toggleDropdown() {\n    this.setState(_objectSpread({}, this.state, {}, {\n      dropdownOpen: !this.state.dropdownOpen\n    }));\n  }\n\n  toggleNavbar() {\n    this.setState(_objectSpread({}, this.state, {}, {\n      collapseOpen: !this.state.collapseOpen\n    }));\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      showRegisterModal\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, __jsx(Navbar, {\n      type: \"dark\",\n      theme: \"primary\",\n      expand: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, __jsx(NavbarBrand, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"Crypto Asset Consortium\"), __jsx(NavbarToggler, {\n      onClick: this.toggleNavbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }), __jsx(Collapse, {\n      open: this.state.collapseOpen,\n      navbar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, __jsx(Nav, {\n      navbar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, __jsx(NavLink, {\n      active: true,\n      href: \"/assetpool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Interest Asset Pool\")), __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, __jsx(NavLink, {\n      active: true,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Interest Loan Protocol\")), __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, __jsx(NavLink, {\n      active: true,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Loan Funding Protocol\")), __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, __jsx(NavLink, {\n      active: true,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, \"Compound Interest Protocol\"))), __jsx(Nav, {\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      onClick: this.toggleRegisterModal,\n      outline: true,\n      theme: \"success\",\n      size: \"md\",\n      className: \"my-2 mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \"JOIN\"), showRegisterModal && __jsx(RegModal, {\n      onClose: this.toggleRegisterModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }))), __jsx(Nav, {\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"this.props.accounts\", __jsx(EthAddress, {\n      theme: customTheme,\n      primary: \"--maincolor\",\n      address: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/Navbar.js"],"names":["React","Link","Router","MetaMaskButton","EthAddress","Box","Text","RegModal","store","Drizzle","generateStore","SimpleStorage","options","contracts","drizzleStore","drizzle","Card","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","InputGroup","InputGroupAddon","InputGroupText","FormInput","Button","Collapse","customTheme","buttons","primary","colors","green","fontSizes","NavBar","Component","constructor","props","showRegisterModal","state","setState","toggleDropdown","bind","toggleNavbar","dropdownOpen","collapseOpen","drizzleState","componentDidMount","unsubscribe","subscribe","getState","drizzleStatus","initialized","loading","render","toggleRegisterModal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link, Router } from '../../routes';\r\nimport { MetaMaskButton, EthAddress, Box, Text } from 'rimble-ui';\r\nimport RegModal from './RegModal.js';\r\n\r\nimport store from '../EthComponents/middleware';\r\n// import drizzleOptions from \"../EthComponents/drizzleOptions\";\r\n// import AccountsContainer from '../EthComponents/AccountsContainer.js';\r\n//import { Drizzle } from '@drizzle/store';\r\n// import drizzle functions and contract artifact\r\nimport { Drizzle, generateStore } from '@drizzle/store';\r\nimport SimpleStorage from \"../artifacts/contracts/SimpleStorage.json\";\r\n// let drizzle know what contracts we want\r\nconst options = { contracts: [SimpleStorage] };\r\n// setup the drizzle store and drizzle\r\nconst drizzleStore = generateStore(options);\r\nconst drizzle = new Drizzle(options, drizzleStore);\r\n\r\n\r\n\r\nimport {\r\n    Card,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Dropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    FormInput,\r\n    Button,\r\n    Collapse\r\n  } from \"shards-react\";\r\n\r\n  \r\nconst customTheme = {\r\n  buttons: {\r\n    primary: {\r\n  \r\n      // use css custom props\r\n      '--main-color': '#17c671',\r\n      '--contrast-color': '#17c671',\r\n    }\r\n  },\r\n  colors: {\r\n    green: '#17c671'\r\n  },\r\n  fontSizes: [1, 2, 3, 4, 45]\r\n}\r\n\r\n\r\n\r\n  export default class NavBar extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.toggleDropdown = this.toggleDropdown.bind(this);\r\n      this.toggleNavbar = this.toggleNavbar.bind(this);\r\n  \r\n      this.state = {\r\n        dropdownOpen: false,\r\n        collapseOpen: false,\r\n        showRegisterModal: false,\r\n        drizzleState: null \r\n      };\r\n    }\r\n\r\n    toggleRegisterModal = async () => {\r\n      const { showRegisterModal } = this.state\r\n  \r\n      this.setState({\r\n        showRegisterModal: !showRegisterModal,\r\n      })\r\n    }\r\n  \r\n    toggleDropdown() {\r\n      this.setState({\r\n        ...this.state,\r\n        ...{\r\n          dropdownOpen: !this.state.dropdownOpen\r\n        }\r\n      });\r\n    }\r\n  \r\n    toggleNavbar() {\r\n      this.setState({\r\n        ...this.state,\r\n        ...{\r\n          collapseOpen: !this.state.collapseOpen\r\n        }\r\n      });\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { drizzle } = this.props;\r\n    \r\n      // subscribe to changes in the store\r\n      this.unsubscribe = drizzle.store.subscribe(() => {\r\n    \r\n        // every time the store updates, grab the state from drizzle\r\n        const drizzleState = drizzle.store.getState();\r\n    \r\n        // check to see if it's ready, if so, update local component state\r\n        if (drizzleState.drizzleStatus.initialized) {\r\n          this.setState({ loading: false, drizzleState });\r\n        }\r\n      });\r\n    }\r\n   \r\n    render() {\r\n      const { showRegisterModal } = this.state;\r\n      return (   \r\n      <div>\r\n         \r\n            <Navbar type=\"dark\" theme=\"primary\" expand=\"md\">\r\n              <NavbarBrand href=\"/\">Crypto Asset Consortium</NavbarBrand>\r\n              <NavbarToggler onClick={this.toggleNavbar} />\r\n      \r\n              <Collapse open={this.state.collapseOpen} navbar>\r\n                <Nav navbar>\r\n                  <NavItem>\r\n                    <NavLink active href=\"/assetpool\">\r\n                      Interest Asset Pool\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink active href=\"#\">\r\n                      Interest Loan Protocol\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink active href=\"#\">\r\n                      Loan Funding Protocol\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink active href=\"#\">\r\n                      Compound Interest Protocol\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n                  <NavItem>\r\n                    \r\n                    <Button onClick={this.toggleRegisterModal} outline theme=\"success\" size=\"md\" className=\"my-2 mr-1\">\r\n                        JOIN\r\n                    </Button>\r\n                                \r\n                    {showRegisterModal && (\r\n                      <RegModal onClose={this.toggleRegisterModal} />\r\n                    )}\r\n        \r\n                  </NavItem>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n              \r\n                  <NavItem>\r\n                  this.props.accounts\r\n                    {/* <Text theme={customTheme}  color='green'>Hi, I'm magenta!</Text> */}\r\n                    <EthAddress theme={customTheme}  primary='--maincolor' address='' />\r\n                   \r\n                  </NavItem>\r\n              \r\n                </Nav>\r\n              </Collapse>\r\n            </Navbar>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}