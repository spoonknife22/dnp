{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AddressBar.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { Drizzle } from \"@drizzle/store\";\nimport options from \"./drizzleOptions\";\nimport { EthAddress } from 'rimble-ui';\nimport { newContextComponents } from \"@drizzle/react-components\";\nconst {\n  AccountData\n} = newContextComponents;\nconst drizzle = new Drizzle(options);\n\nconst MyAddBar = () => {\n  return __jsx(DrizzleContext.Provider, {\n    drizzle: drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(DrizzleContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, drizzleContext => {\n    const {\n      drizzle,\n      drizzleState,\n      initialized\n    } = drizzleContext;\n\n    if (!initialized) {\n      return \"Loadin...\";\n    }\n\n    const {\n      accounts\n    } = drizzleState;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(AccountData, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      accountIndex: 0,\n      units: \"ether\",\n      precision: 3,\n      render: ({\n        address,\n        balance,\n        units\n      }) => __jsx(EthAddress, {\n        address: address,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n\nexport default MyAddBar;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AddressBar.js"],"names":["React","DrizzleContext","Drizzle","options","EthAddress","newContextComponents","AccountData","drizzle","MyAddBar","drizzleContext","drizzleState","initialized","accounts","address","balance","units"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBD,oBAAxB;AACA,MAAME,OAAO,GAAG,IAAIL,OAAJ,CAAYC,OAAZ,CAAhB;;AAEA,MAAMK,QAAQ,GAAG,MAAM;AACrB,SACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,OAAO,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,IAAI;AACjB,UAAM;AAACF,MAAAA,OAAD;AAAUG,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,QAAuCF,cAA7C;;AAEA,QAAG,CAACE,WAAJ,EAAiB;AACf,aAAO,WAAP;AACD;;AACD,UAAM;AAAEC,MAAAA;AAAF,QAAeF,YAArB;AACA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AACE,MAAA,OAAO,EAAEH,OADX;AAEE,MAAA,YAAY,EAAEG,YAFhB;AAGE,MAAA,YAAY,EAAE,CAHhB;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,SAAS,EAAE,CALb;AAME,MAAA,MAAM,EAAE,CAAC;AAAEG,QAAAA,OAAF;AAAWC,QAAAA,OAAX;AAAoBC,QAAAA;AAApB,OAAD,KACN,MAAC,UAAD;AAAY,QAAA,OAAO,EAAEF,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF;AAgBD,GAxBH,CADF,CADF;AA8BD,CA/BD;;AAiCA,eAAeL,QAAf","sourcesContent":["import React from \"react\";\r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport options from \"./drizzleOptions\";\r\nimport { EthAddress } from 'rimble-ui';\r\nimport { newContextComponents } from \"@drizzle/react-components\";\r\nconst { AccountData } = newContextComponents;\r\nconst drizzle = new Drizzle(options);\r\n\r\nconst MyAddBar = () => {\r\n  return (\r\n    <DrizzleContext.Provider drizzle={drizzle}>\r\n      <DrizzleContext.Consumer>\r\n        {drizzleContext => {\r\n          const {drizzle, drizzleState, initialized} = drizzleContext;\r\n\r\n          if(!initialized) {\r\n            return \"Loadin...\"\r\n          }\r\n          const { accounts } = drizzleState;\r\n          return (\r\n\r\n            <div>   \r\n              <AccountData\r\n                drizzle={drizzle}\r\n                drizzleState={drizzleState}\r\n                accountIndex={0}\r\n                units=\"ether\"\r\n                precision={3}\r\n                render={({ address, balance, units }) => (\r\n                  <EthAddress address={address} />\r\n                )}\r\n              />\r\n\r\n            </div>\r\n          )\r\n        }}\r\n      </DrizzleContext.Consumer>\r\n    </DrizzleContext.Provider>\r\n  );\r\n}\r\n\r\nexport default MyAddBar;"]},"metadata":{},"sourceType":"module"}