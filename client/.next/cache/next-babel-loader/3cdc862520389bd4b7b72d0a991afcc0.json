{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { drizzleReducers } from '@drizzle/store';\nconst NOM_TX_PROCESSING = 'NOM_TX_PROCESSING';\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\nconst TOKEN_ID_FETCHING = 'TOKEN_ID_FETCHING';\nconst TX_SUCCESSFUL = 'TX_SUCCESSFUL'; // const CHECK_METAMASK = \"CHECK_METAMASK\";\n// const CHECK_METAMASK_DONE = \"CHECK_METAMASK_DONE\";\n// const TX_ERROR_METAMASK = \"TX_ERROR_METAMASK\";\n// const TX_ERROR_METAMASK_DONE = \"TX_ERROR_METAMASK_DONE\";\n// const TX_SUCCESSFUL_UPDATE_UI = \"TX_SUCCESSFUL_UPDATE_UI\";\n// const CHECKING_TX_UI = \"CHECKING_TX_UI\";\n// const TX_DONE = 'TX_DONE'\n\nconst initialState = {\n  transactionProcessing: false,\n  txSuccessful: false,\n  tokenId: null // checkMetaMask: false,\n  // metaMaskReject: true,\n  // checkingTx: false,\n  // transactionComplete: false,\n\n};\n\nfunction dappReducer(state = initialState, action) {\n  switch (action.type) {\n    // case CHECK_METAMASK:\n    //   return { ...state, checkMetaMask: true };\n    // case CHECK_METAMASK_DONE:\n    //   return { ...state, checkMetaMask: false };\n    // case TX_ERROR_METAMASK:\n    //   return { ...state, checkMetaMask: false, metaMaskReject: true };\n    // case TX_ERROR_METAMASK_DONE:\n    //   return { ...state, metaMaskReject: false };\n    // case CHECKING_TX_UI:\n    //   return { ...state, checkMetaMask: false, checkingTx: true };\n    case TX_SUCCESSFUL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        txSuccessful: true\n      });\n\n    case NOM_TX_PROCESSING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        transactionProcessing: true\n      });\n\n    case TX_PROCESSING_DONE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkMetaMask: false,\n        checkingTx: false,\n        transactionProcessing: false,\n        txSuccessful: true\n      });\n\n    case TOKEN_ID_FETCHING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tokenId: action.tokenId\n      });\n\n    default:\n      return state;\n  }\n} //export default dappReducer;\n\n\nexport default combineReducers(_objectSpread({\n  dappReducer\n}, drizzleReducers));","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/reducers/reducer.js"],"names":["combineReducers","drizzleReducers","NOM_TX_PROCESSING","TX_PROCESSING_DONE","TOKEN_ID_FETCHING","TX_SUCCESSFUL","initialState","transactionProcessing","txSuccessful","tokenId","dappReducer","state","action","type","checkMetaMask","checkingTx"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,aAAa,GAAG,eAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,qBAAqB,EAAC,KADH;AAEnBC,EAAAA,YAAY,EAAE,KAFK;AAGnBC,EAAAA,OAAO,EAAE,IAHU,CAInB;AACA;AACA;AACA;;AAPmB,CAArB;;AAWA,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKR,aAAL;AACE,6CAAYM,KAAZ;AAAmBH,QAAAA,YAAY,EAAE;AAAjC;;AACF,SAAKN,iBAAL;AACI,6CAAYS,KAAZ;AAAmBJ,QAAAA,qBAAqB,EAAE;AAA1C;;AACJ,SAAKJ,kBAAL;AACE,6CAAYQ,KAAZ;AAAmBG,QAAAA,aAAa,EAAE,KAAlC;AAAyCC,QAAAA,UAAU,EAAE,KAArD;AAA2DR,QAAAA,qBAAqB,EAAE,KAAlF;AAAyFC,QAAAA,YAAY,EAAE;AAAvG;;AACF,SAAKJ,iBAAL;AACI,6CAAYO,KAAZ;AAAmBF,QAAAA,OAAO,EAACG,MAAM,CAACH;AAAlC;;AACJ;AACE,aAAOE,KAAP;AApBJ;AAsBD,C,CAGH;;;AACA,eAAeX,eAAe;AAC5BU,EAAAA;AAD4B,GAEzBT,eAFyB,EAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { drizzleReducers } from '@drizzle/store';\r\n\r\nconst NOM_TX_PROCESSING = 'NOM_TX_PROCESSING'\r\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\r\nconst TOKEN_ID_FETCHING = 'TOKEN_ID_FETCHING';\r\nconst TX_SUCCESSFUL = 'TX_SUCCESSFUL';\r\n// const CHECK_METAMASK = \"CHECK_METAMASK\";\r\n// const CHECK_METAMASK_DONE = \"CHECK_METAMASK_DONE\";\r\n// const TX_ERROR_METAMASK = \"TX_ERROR_METAMASK\";\r\n// const TX_ERROR_METAMASK_DONE = \"TX_ERROR_METAMASK_DONE\";\r\n// const TX_SUCCESSFUL_UPDATE_UI = \"TX_SUCCESSFUL_UPDATE_UI\";\r\n// const CHECKING_TX_UI = \"CHECKING_TX_UI\";\r\n// const TX_DONE = 'TX_DONE'\r\n\r\nconst initialState = {\r\n  transactionProcessing:false,\r\n  txSuccessful: false, \r\n  tokenId: null \r\n  // checkMetaMask: false,\r\n  // metaMaskReject: true,\r\n  // checkingTx: false,\r\n  // transactionComplete: false,\r\n\r\n};   \r\n \r\nfunction dappReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      // case CHECK_METAMASK:\r\n      //   return { ...state, checkMetaMask: true };\r\n      // case CHECK_METAMASK_DONE:\r\n      //   return { ...state, checkMetaMask: false };\r\n      // case TX_ERROR_METAMASK:\r\n      //   return { ...state, checkMetaMask: false, metaMaskReject: true };\r\n      // case TX_ERROR_METAMASK_DONE:\r\n      //   return { ...state, metaMaskReject: false };\r\n      // case CHECKING_TX_UI:\r\n      //   return { ...state, checkMetaMask: false, checkingTx: true };\r\n      case TX_SUCCESSFUL:\r\n        return { ...state, txSuccessful: true };\r\n      case NOM_TX_PROCESSING:\r\n          return { ...state, transactionProcessing: true };\r\n      case TX_PROCESSING_DONE:\r\n        return { ...state, checkMetaMask: false, checkingTx: false,transactionProcessing: false, txSuccessful: true };\r\n      case TOKEN_ID_FETCHING:\r\n          return { ...state, tokenId:action.tokenId};\r\n      default:\r\n        return state;\r\n    }\r\n  }   \r\n\r\n\r\n//export default dappReducer;\r\nexport default combineReducers({\r\n  dappReducer,\r\n  ...drizzleReducers\r\n});\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}