{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\EthAccounts.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ContractForm, AccountData, ContractData } from \"@drizzle/react-components\";\n\nclass EthAccounts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null\n    });\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.UserStorage;\n    const account = drizzleState.accounts[0]; //let dataKey = contract.methods[\"addresses\"].cacheCall(account); // declare this call to be cached and synchronized\n\n    let Key = contract.methods[\"addresses\"].cacheCall(account);\n    let dataKey = contract.methods[\"profiles\"].cacheCall(Key);\n    this.setState({\n      dataKey,\n      drizzleState\n    });\n  }\n\n  render() {\n    const {\n      UserStorage\n    } = this.props.drizzleState.contracts;\n    const displayData = UserStorage.profiles[this.state.dataKey]; // if displayData (an object) exists, then we can display the value below\n\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }\n    }, \"Hi from Truffle! Here is your storedData: \", displayData && displayData.value);\n  }\n\n}\n\nexport default EthAccounts; //  <ContractData contract=\"Storage\" method=\"getData\" toUtf8 toAscii />","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/EthAccounts.js"],"names":["React","ContractForm","AccountData","ContractData","EthAccounts","Component","dataKey","componentDidMount","drizzle","drizzleState","props","contract","contracts","UserStorage","account","accounts","Key","methods","cacheCall","setState","render","displayData","profiles","state","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,YAApC,QAAwD,2BAAxD;;AACA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCACjC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADiC;AAAA;;AAGzCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4B,KAAKC,KAAvC;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,SAAR,CAAkBC,WAAnC;AACA,UAAMC,OAAO,GAAGL,YAAY,CAACM,QAAb,CAAsB,CAAtB,CAAhB,CAHkB,CAIlB;;AAGA,QAAIC,GAAG,GAAGL,QAAQ,CAACM,OAAT,CAAiB,WAAjB,EAA8BC,SAA9B,CAAwCJ,OAAxC,CAAV;AACA,QAAIR,OAAO,GAAGK,QAAQ,CAACM,OAAT,CAAiB,UAAjB,EAA6BC,SAA7B,CAAuCF,GAAvC,CAAd;AACA,SAAKG,QAAL,CAAc;AAAEb,MAAAA,OAAF;AAAUG,MAAAA;AAAV,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAkB,KAAKH,KAAL,CAAWD,YAAX,CAAwBG,SAAhD;AACA,UAAMS,WAAW,GAAGR,WAAW,CAACS,QAAZ,CAAqB,KAAKC,KAAL,CAAWjB,OAAhC,CAApB,CAFO,CAEuD;;AAC9D,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAA8Ce,WAAW,IAAIA,WAAW,CAACG,KAAzE,CADF;AAGD;;AArBwC;;AAwB1C,eAAepB,WAAf,C,CAEA","sourcesContent":["import React from 'react';\r\nimport { ContractForm, AccountData, ContractData } from \"@drizzle/react-components\";\r\nclass EthAccounts extends React.Component {\r\n state = { dataKey: null };\r\n\r\n componentDidMount() {\r\n   const { drizzle, drizzleState } = this.props;\r\n   const contract = drizzle.contracts.UserStorage;\r\n   const account = drizzleState.accounts[0];\r\n   //let dataKey = contract.methods[\"addresses\"].cacheCall(account); // declare this call to be cached and synchronized\r\n\r\n\r\n   let Key = contract.methods[\"addresses\"].cacheCall(account);\r\n   let dataKey = contract.methods[\"profiles\"].cacheCall(Key);\r\n   this.setState({ dataKey,drizzleState });\r\n }\r\n\r\n render() {\r\n   const { UserStorage } = this.props.drizzleState.contracts;\r\n   const displayData = UserStorage.profiles[this.state.dataKey]; // if displayData (an object) exists, then we can display the value below\r\n   return (\r\n     <p>Hi from Truffle! Here is your storedData: {displayData && displayData.value}</p>\r\n   )\r\n }\r\n}\r\n\r\nexport default EthAccounts\r\n\r\n//  <ContractData contract=\"Storage\" method=\"getData\" toUtf8 toAscii />"]},"metadata":{},"sourceType":"module"}