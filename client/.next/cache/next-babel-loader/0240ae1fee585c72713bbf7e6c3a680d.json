{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\ProposalAddress.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nfunction DispatchAddress(props) {\n  const proposalAddress = props.proposalAddress,\n        drizzle = props.drizzle;\n  drizzle.store.dispatch({\n    type: \"GOT_PROP_ADDRESS\",\n    propAddress: proposalAddress\n  });\n}\n\nclass ProposalAddress extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null,\n      drizzleState: null,\n      tokenIdState: null,\n      drizzle: null\n    });\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          drizzle = _this$props.drizzle,\n          tokenIdState = _this$props.tokenIdState,\n          drizzleState = _this$props.drizzleState;\n    const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(\"\".concat(tokenIdState));\n    this.setState({\n      dataKey,\n      tokenIdState\n    });\n  }\n\n  render() {\n    const ProposalController = this.props.drizzleState.contracts.ProposalController;\n    const displayData = ProposalController.getPropTokenIdMap[\"\".concat(this.state.dataKey)];\n    const proposalAddress = displayData && displayData.value; //this.props.drizzle.store.dispatch({ type: \"GET_PROP_ADDRESS\", proposalAddress:proposalAddress });\n    //this.props.drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"Hello: \", proposalAddress, __jsx(DispatchAddress, {\n      proposalAddress: proposalAddress,\n      drizzle: this.props.drizzle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default ProposalAddress;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/ProposalAddress.js"],"names":["React","DispatchAddress","props","proposalAddress","drizzle","store","dispatch","type","propAddress","ProposalAddress","Component","dataKey","drizzleState","tokenIdState","componentDidMount","contracts","ProposalController","methods","cacheCall","setState","render","displayData","getPropTokenIdMap","state","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,QACtBC,eADsB,GACOD,KADP,CACtBC,eADsB;AAAA,QACLC,OADK,GACOF,KADP,CACLE,OADK;AAE9BA,EAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuB;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,WAAW,EAACL;AAAxC,GAAvB;AACD;;AAED,MAAMM,eAAN,SAA8BT,KAAK,CAACU,SAApC,CAA8C;AAAA;AAAA;;AAAA,mCACrC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAC,IAA9B;AAAoCC,MAAAA,YAAY,EAAC,IAAjD;AAAuDT,MAAAA,OAAO,EAAC;AAA/D,KADqC;AAAA;;AAG9CU,EAAAA,iBAAiB,GAAG;AAAA,wBAC8B,KAAKZ,KADnC;AAAA,UACVE,OADU,eACVA,OADU;AAAA,UACDS,YADC,eACDA,YADC;AAAA,UACaD,YADb,eACaA,YADb;AAElB,UAAMD,OAAO,GAAGP,OAAO,CAACW,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6C,mBAA7C,EAAkEC,SAAlE,WAA+EL,YAA/E,EAAhB;AACA,SAAKM,QAAL,CAAc;AAAER,MAAAA,OAAF;AAAWE,MAAAA;AAAX,KAAd;AACA;;AAEDO,EAAAA,MAAM,GAAG;AAAA,UAEAJ,kBAFA,GAEuB,KAAKd,KAAL,CAAWU,YAAX,CAAwBG,SAF/C,CAEAC,kBAFA;AAGR,UAAMK,WAAW,GAAGL,kBAAkB,CAACM,iBAAnB,WAAwC,KAAKC,KAAL,CAAWZ,OAAnD,EAApB;AACA,UAAMR,eAAe,GAAIkB,WAAW,IAAIA,WAAW,CAACG,KAApD,CAJQ,CAKR;AACA;;AACC,WACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAarB,eAAb,EACA,MAAC,eAAD;AAAiB,MAAA,eAAe,EAAEA,eAAlC;AAAmD,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADP;AAKD;;AArB4C;;AAyB9C,eAAeK,eAAf","sourcesContent":["import React from 'react';\r\n\r\nfunction DispatchAddress(props) {\r\n  const { proposalAddress, drizzle } = props;\r\n  drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\r\n}\r\n\r\nclass ProposalAddress extends React.Component {\r\n state = { dataKey: null, drizzleState:null, tokenIdState:null, drizzle:null };\r\n\r\ncomponentDidMount() {\r\n  const { drizzle, tokenIdState, drizzleState } = this.props;\r\n  const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(`${tokenIdState}`);                                            \r\n  this.setState({ dataKey, tokenIdState });\r\n }\r\n  \r\n render() {\r\n\r\n  const { ProposalController } = this.props.drizzleState.contracts;\r\n  const displayData = ProposalController.getPropTokenIdMap[`${this.state.dataKey}`];\r\n  const proposalAddress =  displayData && displayData.value;\r\n  //this.props.drizzle.store.dispatch({ type: \"GET_PROP_ADDRESS\", proposalAddress:proposalAddress });\r\n  //this.props.drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\r\n   return ( \r\n          <div>Hello: {proposalAddress}\r\n          <DispatchAddress proposalAddress={proposalAddress} drizzle={this.props.drizzle} />\r\n          </div>\r\n      )\r\n }\r\n\r\n}\r\n\r\nexport default ProposalAddress;\r\n\r\n"]},"metadata":{},"sourceType":"module"}