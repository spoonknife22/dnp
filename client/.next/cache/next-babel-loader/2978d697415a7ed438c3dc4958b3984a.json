{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AccountsContainer.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport MyAddBar from \"./AddressBar.js\";\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport { Drizzle } from \"@drizzle/store\";\nimport options from \"./drizzleOptions\";\nimport { Loader } from 'rimble-ui';\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\nconst {\n  ContractData\n} = newContextComponents;\nconst drizzle = new Drizzle(options);\n\nconst AccountsContainer = () => {\n  return __jsx(DrizzleContext.Provider, {\n    drizzle: drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(DrizzleContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, drizzleContext => {\n    const {\n      drizzle,\n      drizzleState,\n      initialized\n    } = drizzleContext;\n\n    if (!initialized) {\n      return __jsx(Loader, {\n        size: \"30px\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }\n      });\n    } else {\n      const account = drizzleState.accounts[0]; // const getMember = async () => {\n      // let isMember;\n      // isMember = await drizzle.contracts.UserStorage.methods.addresses(drizzleState.accounts[0]).call();\n      // if(isMember)\n      // {\n      //   return <MyAddBar drizzleState={drizzleState} drizzle={drizzle}  />\n      //   }\n      //   return <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\n      //   }\n\n      __jsx(ContractData, {\n        drizzle: drizzle,\n        drizzleState: drizzleState,\n        contract: \"UserStorage\",\n        method: \"addresses\",\n        methodArgs: drizzleState.accounts[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }); //render (){<div></div>}\n      //console.log(getMember())\n      //return {getMember};\n\n    }\n\n    ; //   getMember().then((member) => {\n    //   console.log(member)\n    // });\n    //  // console.log(getMember())\n    //   if(getMember().then((member) => {\n    //     return member;\n    //   }))\n    //   if(!getMember().then((member) => {\n    //     member;\n    //   })) {\n    //   return <MyAddBar drizzleState={drizzleState} drizzle={drizzle}  />\n    //   }\n    //   return <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\n    //   }\n  }));\n};\n\nexport default AccountsContainer;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AccountsContainer.js"],"names":["React","UserInfo","MyAddBar","DrizzleContext","newContextComponents","Drizzle","options","Loader","JoinButton","ContractData","drizzle","AccountsContainer","drizzleContext","drizzleState","initialized","account","accounts"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAUC,MAAV,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAmBL,oBAAzB;AACA,MAAMM,OAAO,GAAG,IAAIL,OAAJ,CAAYC,OAAZ,CAAhB;;AAEA,MAAMK,iBAAiB,GAAG,MAAM;AAE9B,SACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,OAAO,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,IAAI;AACjB,UAAM;AAACF,MAAAA,OAAD;AAAUG,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,QAAwCF,cAA9C;;AAEA,QAAG,CAACE,WAAJ,EAAiB;AACf,aAAO,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAGM;AACJ,YAAMC,OAAO,GAAGF,YAAY,CAACG,QAAb,CAAsB,CAAtB,CAAhB,CADI,CAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,YAAC,YAAD;AACA,QAAA,OAAO,EAAEN,OADT;AAEA,QAAA,YAAY,EAAEG,YAFd;AAGA,QAAA,QAAQ,EAAC,aAHT;AAIA,QAAA,MAAM,EAAC,WAJP;AAKA,QAAA,UAAU,EAAEA,YAAY,CAACG,QAAb,CAAsB,CAAtB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbE,CAqBF;AACA;AACF;;AACC;;AAAA,KA9Bc,CAmCjB;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAtDH,CADF,CADF;AA6DD,CA/DD;;AAgEA,eAAeL,iBAAf","sourcesContent":["import React from \"react\";\r\nimport UserInfo from \"./UserInfo\"; \r\nimport MyAddBar from \"./AddressBar.js\"; \r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { newContextComponents } from \"@drizzle/react-components\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport options from \"./drizzleOptions\";\r\nimport {  Loader } from 'rimble-ui';\r\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\r\n\r\nconst { ContractData } = newContextComponents;\r\nconst drizzle = new Drizzle(options);\r\n\r\nconst AccountsContainer = () => {\r\n \r\n  return  (\r\n    <DrizzleContext.Provider drizzle={drizzle}>\r\n      <DrizzleContext.Consumer>\r\n        {drizzleContext => {\r\n          const {drizzle, drizzleState, initialized } = drizzleContext;\r\n\r\n          if(!initialized) {\r\n            return <Loader size=\"30px\" color=\"white\" />\r\n          }\r\n          else  {\r\n            const account = drizzleState.accounts[0];\r\n          \r\n            // const getMember = async () => {\r\n            // let isMember;\r\n            // isMember = await drizzle.contracts.UserStorage.methods.addresses(drizzleState.accounts[0]).call();\r\n            // if(isMember)\r\n            // {\r\n            //   return <MyAddBar drizzleState={drizzleState} drizzle={drizzle}  />\r\n            //   }\r\n            //   return <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\r\n            //   }\r\n             \r\n              <ContractData\r\n              drizzle={drizzle}\r\n              drizzleState={drizzleState}\r\n              contract=\"UserStorage\"\r\n              method=\"addresses\"\r\n              methodArgs={drizzleState.accounts[0]}\r\n              \r\n            />\r\n              //render (){<div></div>}\r\n              //console.log(getMember())\r\n            //return {getMember};\r\n            };\r\n          \r\n          \r\n            \r\n          \r\n          //   getMember().then((member) => {\r\n          //   console.log(member)\r\n          // });\r\n          \r\n          //  // console.log(getMember())\r\n          \r\n          //   if(getMember().then((member) => {\r\n          //     return member;\r\n          //   }))\r\n          \r\n          //   if(!getMember().then((member) => {\r\n          //     member;\r\n          //   })) {\r\n          //   return <MyAddBar drizzleState={drizzleState} drizzle={drizzle}  />\r\n          //   }\r\n          //   return <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\r\n          //   }\r\n\r\n        }}\r\n      </DrizzleContext.Consumer>\r\n    </DrizzleContext.Provider>\r\n);\r\n  \r\n}\r\nexport default AccountsContainer;"]},"metadata":{},"sourceType":"module"}