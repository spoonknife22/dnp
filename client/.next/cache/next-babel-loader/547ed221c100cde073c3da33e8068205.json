{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\layout\\\\Layout.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Navbar from './Navbar.js';\nimport HeadOne from './Head.js';\nimport Footer from './Footer.js';\nimport { Provider } from 'react-redux';\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { ToastContainer } from 'react-toastify';\nimport { Drizzle, generateStore, generateContractsInitialState, drizzleSagas } from \"@drizzle/store\";\nimport drizzleOptions from \"../../EthComponents/drizzleOptions\";\nimport { contractEventSaga, joinTransactionSaga } from '../../middleware/capMiddleWare';\nimport reducer from '../../middleware/reducers/appReducers.js';\nimport createSagaMiddleware from \"@drizzle/store/node_modules/redux-saga\";\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport \"regenerator-runtime/runtime\"; //Old Store\n\nimport rootSaga from '../../middleware/rootSaga';\nconst contractEventNotifier = contractEventSaga;\nconst joinTransactionComplete = joinTransactionSaga;\nconst appMiddlewares = [contractEventNotifier(), joinTransactionComplete];\nconst appReducers = {\n  appReducers: reducer\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst allMiddlewares = [...appMiddlewares, sagaMiddleware]; //const allReducers = { ...drizzleReducers, ...appReducers }\n\nlet initialContractsState = {\n  contracts: generateContractsInitialState(drizzleOptions)\n}; //const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst composeSagas = sagas => /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return all(sagas.map(fork));\n\n      case 2:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _callee);\n});\n\nconst store = createStore(reducer, //initialContractsState,\n// appMiddlewares,\napplyMiddleware(...allMiddlewares));\nsagaMiddleware.run(composeSagas([...drizzleSagas, ...rootSaga])); // const store = generateStore({\n//     drizzleOptions,\n//     appReducers,\n//     appSagas,\n//     appMiddlewares,\n//     disableReduxDevTools:false\n// })\n\nconst drizzle = new Drizzle(drizzleOptions, store);\nexport const Page = ({\n  children\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }\n}, __jsx(DrizzleContext.Provider, {\n  drizzle: drizzle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }\n}, __jsx(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }\n}, console.log(store), __jsx(HeadOne, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }\n}), __jsx(Navbar, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }\n}), __jsx(\"main\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }\n}, __jsx(ToastContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 11\n  }\n}), children), __jsx(Footer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }\n}))));\nexport const Center = ({\n  children\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }\n}, children);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/layout/Layout.js"],"names":["React","Navbar","HeadOne","Footer","Provider","DrizzleContext","ToastContainer","Drizzle","generateStore","generateContractsInitialState","drizzleSagas","drizzleOptions","contractEventSaga","joinTransactionSaga","reducer","createSagaMiddleware","createStore","applyMiddleware","compose","combineReducers","rootSaga","contractEventNotifier","joinTransactionComplete","appMiddlewares","appReducers","sagaMiddleware","allMiddlewares","initialContractsState","contracts","composeSagas","sagas","all","map","fork","store","run","drizzle","Page","children","console","log","Center"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,6BAAjC,EAAgEC,YAAhE,QAAoF,gBAApF;AACA,OAAOC,cAAP,MAA4B,oCAA5B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,gCAAvD;AACA,OAAQC,OAAR,MAAqB,0CAArB;AACA,OAAOC,oBAAP,MAAiC,wCAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAO,6BAAP,C,CACA;;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,MAAMC,qBAAqB,GAAGT,iBAA9B;AACA,MAAMU,uBAAuB,GAAGT,mBAAhC;AACA,MAAMU,cAAc,GAAG,CAACF,qBAAqB,EAAtB,EAA0BC,uBAA1B,CAAvB;AACA,MAAME,WAAW,GAAG;AAACA,EAAAA,WAAW,EAAEV;AAAd,CAApB;AAEA,MAAMW,cAAc,GAAGV,oBAAoB,EAA3C;AACE,MAAMW,cAAc,GAAG,CAAC,GAAGH,cAAJ,EAAoBE,cAApB,CAAvB,C,CACA;;AACA,IAAIE,qBAAqB,GAAG;AAC1BC,EAAAA,SAAS,EAAEnB,6BAA6B,CAACE,cAAD;AADd,CAA5B,C,CAGA;;AAGA,MAAMkB,YAAY,GAAGC,KAAK,yCAC1B;AAAA;AAAA;AAAA;AAAA;AACE,eAAMC,GAAG,CAACD,KAAK,CAACE,GAAN,CAAUC,IAAV,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA,CAD0B,CAA1B;;AAKF,MAAMC,KAAK,GAAGlB,WAAW,CACvBF,OADuB,EAErB;AACA;AACDG,eAAe,CAAC,GAAGS,cAAJ,CAJO,CAAzB;AAOAD,cAAc,CAACU,GAAf,CAAmBN,YAAY,CAAC,CAAC,GAAGnB,YAAJ,EAAkB,GAAGU,QAArB,CAAD,CAA/B,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMgB,OAAO,GAAG,IAAI7B,OAAJ,CAAYI,cAAZ,EAA4BuB,KAA5B,CAAhB;AAEA,OAAO,MAAMG,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,EAAA,OAAO,EAAEF,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBK,OAAO,CAACC,GAAR,CAAYN,KAAZ,CAAzB,EACA,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEGI,QAFH,CAHF,EAOA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPA,CADF,CADF,CADK;AAgBP,OAAO,MAAMG,MAAM,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,QADH,CADG","sourcesContent":["import React from 'react';\r\nimport Navbar from './Navbar.js';\r\nimport HeadOne from './Head.js';\r\nimport Footer from './Footer.js'\r\nimport { Provider } from 'react-redux';\r\nimport { DrizzleContext } from \"@drizzle/react-plugin\"; \r\nimport { ToastContainer } from 'react-toastify';   \r\nimport { Drizzle, generateStore, generateContractsInitialState, drizzleSagas } from \"@drizzle/store\";\r\nimport drizzleOptions  from \"../../EthComponents/drizzleOptions\";\r\nimport { contractEventSaga, joinTransactionSaga } from '../../middleware/capMiddleWare';\r\nimport  reducer from '../../middleware/reducers/appReducers.js'\r\nimport createSagaMiddleware from \"@drizzle/store/node_modules/redux-saga\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport \"regenerator-runtime/runtime\";\r\n//Old Store\r\nimport rootSaga from '../../middleware/rootSaga';\r\n\r\nconst contractEventNotifier = contractEventSaga;\r\nconst joinTransactionComplete = joinTransactionSaga;\r\nconst appMiddlewares = [contractEventNotifier(), joinTransactionComplete ];\r\nconst appReducers = {appReducers: reducer};\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n  const allMiddlewares = [...appMiddlewares, sagaMiddleware]\r\n  //const allReducers = { ...drizzleReducers, ...appReducers }\r\n  let initialContractsState = {\r\n    contracts: generateContractsInitialState(drizzleOptions)\r\n  }\r\n  //const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n  const composeSagas = sagas =>\r\n  function * () {\r\n    yield all(sagas.map(fork))\r\n  }\r\n\r\nconst store = createStore(\r\n  reducer,\r\n    //initialContractsState,\r\n    // appMiddlewares,\r\n  (applyMiddleware(...allMiddlewares))\r\n);\r\n\r\nsagaMiddleware.run(composeSagas([...drizzleSagas, ...rootSaga]))\r\n\r\n// const store = generateStore({\r\n//     drizzleOptions,\r\n//     appReducers,\r\n//     appSagas,\r\n//     appMiddlewares,\r\n//     disableReduxDevTools:false\r\n// })\r\n\r\n\r\n\r\nconst drizzle = new Drizzle(drizzleOptions, store);\r\n\r\nexport const Page = ({ children }) => (\r\n  <div>\r\n    <DrizzleContext.Provider drizzle={drizzle} >\r\n      <Provider store={store}>{console.log(store)}\r\n      <HeadOne />\r\n      <Navbar />  \r\n        <main>\r\n          <ToastContainer />\r\n          {children}\r\n        </main>\r\n      <Footer />\r\n      </Provider>  \r\n    </DrizzleContext.Provider>\r\n  </div>\r\n) \r\n\r\nexport const Center = ({ children }) => (\r\n    <div>\r\n      {children}   \r\n    </div>\r\n  )\r\n\r\n"]},"metadata":{},"sourceType":"module"}