{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\cards\\\\NominateAssetCards.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '../../components/Pagination';\nimport Nominations from '../../components/Nominations';\n\nconst NominationAssetCards = ({\n  drizzle,\n  drizzleState,\n  props,\n  userManaBalance\n}) => {\n  const {\n    0: parcels,\n    1: setParcels\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: parcelsPerPage\n  } = useState(6);\n  const {\n    0: totalParcels,\n    1: setTotalParcels\n  } = useState(); //'../api.DecentralandApi.json'\n\n  useEffect(() => {\n    ///Own API\n    const myHeaders = new Headers();\n    const myRequest = new Request('../api.DecentralandApi.json', {\n      method: 'GET',\n      headers: myHeaders,\n      mode: 'cors',\n      cache: 'default'\n    });\n\n    const fetchParcels = async () => {\n      // let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n      // targetUrl = 'https://api.decentraland.org/v1/parcels?status=open&sort_by=price&sort_order=desc&limit=20&offset=0'\n      // fetch(proxyUrl + targetUrl)\n      fetch(myRequest).then(res => res.blob()).then(result => {\n        setParcels(result.data.parcels);\n        setTotalParcels(result.data.parcels.length);\n        setLoading(false);\n      }, error => {\n        setLoading(true), error;\n      });\n    };\n\n    fetchParcels();\n  }, []); // Get current Parcels\n\n  const indexOfLastParcel = currentPage * parcelsPerPage;\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\n  const currentParcels = parcels.slice(indexOfFirstParcel, indexOfLastParcel); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(React.Fragment, null, __jsx(Nominations, {\n    parcels: currentParcels,\n    loading: loading,\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    props: props,\n    userManaBalance: userManaBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    currentPage: currentPage,\n    parcelsPerPage: parcelsPerPage,\n    totalParcels: totalParcels,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default NominationAssetCards;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/cards/NominateAssetCards.js"],"names":["React","useState","useEffect","Pagination","Nominations","NominationAssetCards","drizzle","drizzleState","props","userManaBalance","parcels","setParcels","loading","setLoading","currentPage","setCurrentPage","parcelsPerPage","totalParcels","setTotalParcels","myHeaders","Headers","myRequest","Request","method","headers","mode","cache","fetchParcels","fetch","then","res","blob","result","data","length","error","indexOfLastParcel","indexOfFirstParcel","currentParcels","slice","paginate","pageNumber"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA;AAAhC,CAAD,KAAuD;AAElF,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACa,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACe;AAAD,MAAmBf,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM;AAAA,OAACgB,YAAD;AAAA,OAAeC;AAAf,MAAkCjB,QAAQ,EAAhD,CANkF,CAOpF;;AACEC,EAAAA,SAAS,CACP,MAAM;AAEJ;AACA,UAAMiB,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AAEA,UAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY,6BAAZ,EAA2C;AAC3DC,MAAAA,MAAM,EAAE,KADmD;AAE3DC,MAAAA,OAAO,EAAEL,SAFkD;AAG3DM,MAAAA,IAAI,EAAE,MAHqD;AAI3DC,MAAAA,KAAK,EAAE;AAJoD,KAA3C,CAAlB;;AAQE,UAAMC,YAAY,GAAG,YAAY;AACjC;AACA;AACA;AACAC,MAAAA,KAAK,CAACP,SAAD,CAAL,CACGQ,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVrB,QAAAA,UAAU,CAACqB,MAAM,CAACC,IAAP,CAAYvB,OAAb,CAAV;AACAQ,QAAAA,eAAe,CAACc,MAAM,CAACC,IAAP,CAAYvB,OAAZ,CAAoBwB,MAArB,CAAf;AACArB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPL,EAQKsB,KAAD,IAAW;AACTtB,QAAAA,UAAU,CAAC,IAAD,CAAV,EACAsB,KADA;AAED,OAXL;AAaD,KAjBC;;AAmBJR,IAAAA,YAAY;AACb,GAlCQ,EAkCN,EAlCM,CAAT,CARkF,CA6ClF;;AACA,QAAMS,iBAAiB,GAAGtB,WAAW,GAAGE,cAAxC;AACA,QAAMqB,kBAAkB,GAAGD,iBAAiB,GAAGpB,cAA/C;AACA,QAAMsB,cAAc,GAAG5B,OAAO,CAAC6B,KAAR,CAAcF,kBAAd,EAAkCD,iBAAlC,CAAvB,CAhDkF,CAkDlF;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAI1B,cAAc,CAAC0B,UAAD,CAA7C;;AAEA,SACE,4BACE,MAAC,WAAD;AACA,IAAA,OAAO,EAAEH,cADT;AAEA,IAAA,OAAO,EAAE1B,OAFT;AAGA,IAAA,OAAO,EAAEN,OAHT;AAIA,IAAA,YAAY,EAAEC,YAJd;AAKA,IAAA,KAAK,EAAEC,KALP;AAMA,IAAA,eAAe,EAAEC,eANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,MAAC,UAAD;AACE,IAAA,WAAW,EAAGK,WADhB;AAEE,IAAA,cAAc,EAAEE,cAFlB;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,QAAQ,EAAEuB,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAkBD,CAvED;;AAyEA,eAAenC,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport Nominations from '../../components/Nominations'\r\n\r\nconst NominationAssetCards = ({ drizzle, drizzleState, props, userManaBalance }) => {\r\n\r\n  const [parcels, setParcels] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [parcelsPerPage] = useState(6);\r\n  const [totalParcels, setTotalParcels] = useState();\r\n//'../api.DecentralandApi.json'\r\n  useEffect(\r\n    () => {\r\n\r\n      ///Own API\r\n      const myHeaders = new Headers();\r\n\r\n      const myRequest = new Request('../api.DecentralandApi.json', {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        mode: 'cors',\r\n        cache: 'default',\r\n      });\r\n\r\n\r\n        const fetchParcels = async () => {\r\n        // let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n        // targetUrl = 'https://api.decentraland.org/v1/parcels?status=open&sort_by=price&sort_order=desc&limit=20&offset=0'\r\n        // fetch(proxyUrl + targetUrl)\r\n        fetch(myRequest)\r\n          .then(res => res.blob())\r\n          .then(\r\n            (result) => {\r\n              setParcels(result.data.parcels);\r\n              setTotalParcels(result.data.parcels.length)\r\n              setLoading(false); \r\n            },\r\n            (error) => {\r\n              setLoading(true),\r\n              error;\r\n            }\r\n        ) \r\n      }\r\n\r\n    fetchParcels();  \r\n  }, []);\r\n\r\n\r\n  // Get current Parcels\r\n  const indexOfLastParcel = currentPage * parcelsPerPage;\r\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\r\n  const currentParcels = parcels.slice(indexOfFirstParcel, indexOfLastParcel);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (   \r\n    <>\r\n      <Nominations \r\n      parcels={currentParcels} \r\n      loading={loading} \r\n      drizzle={drizzle}\r\n      drizzleState={drizzleState}  \r\n      props={props} \r\n      userManaBalance={userManaBalance}\r\n      />\r\n      <Pagination\r\n        currentPage ={currentPage }\r\n        parcelsPerPage={parcelsPerPage}\r\n        totalParcels={totalParcels}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NominationAssetCards;"]},"metadata":{},"sourceType":"module"}