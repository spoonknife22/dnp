{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\OsSdk.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network, OpenSeaAsset } from 'opensea-js';\nimport React, { Component, useEffect } from 'react';\nimport OpenSeaApi from \"./OpenSeaApi.js\";\nimport { OrderSide } from 'opensea-js/lib/types';\n\nconst OsSdk = ({\n  tokenIdArray,\n  projectTotal\n}) => {\n  _s();\n\n  const options = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'X-API-KEY': '2f2a0900458f4bdfbb489680a58e7526'\n    }\n  }; //calls to reach collection total\n\n  useEffect(() => {\n    let orderArray = [];\n    let idArray = [];\n    let i;\n    let j;\n    let limit = 50;\n    let currentOffSet = 0;\n    idArray = tokenIdArray.tokenIdArray;\n    console.log(orderArray);\n    console.log(projectTotal); //const callsPerProject = Math.ceil(tokenIdArray.tokenIdArray.length / 50);\n\n    const callsPerProject = 2;\n\n    const fetchParcels = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              i = 0;\n\n            case 1:\n              if (!(i < 1)) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 4;\n              return fetch(\"https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=\".concat(limit, \"&offset=\").concat(currentOffSet, \"&order_by=created_date&order_direction=desc\"), options);\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context.sent;\n              console.log(data, data.orders.length); // const total = res.headers.get(\"x-total-count\");\n              //const total = data.count;\n              //etpageCount(Math.ceil(projectTotal / limit));\n              // console.log(Math.ceil(total/12));\n              //setItems(data);\n\n            case 9:\n              i++, offsetNum += 50;\n              _context.next = 1;\n              break;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchParcels() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchParcels();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \"Hi Joe\"));\n};\n\n_s(OsSdk, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = OsSdk;\nexport default OsSdk; //turns an array into a string\n//const makeString = stringItem => stringItem * 2;\n//const iArrayMap = idArray.map(makeString);\n//https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=20&offset=0&order_by=created_date&order_direction=desc', options)\n\nvar _c;\n\n$RefreshReg$(_c, \"OsSdk\");","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/OsSdk.js"],"names":["Web3","OpenSeaPort","Network","OpenSeaAsset","React","Component","useEffect","OpenSeaApi","OrderSide","OsSdk","tokenIdArray","projectTotal","options","method","headers","Accept","orderArray","idArray","i","j","limit","currentOffSet","console","log","callsPerProject","fetchParcels","fetch","res","json","data","orders","length","offsetNum"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,YAA/B,QAAoD,YAApD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAAkC;AAAA;;AAEhD,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,KADI;AAEZC,IAAAA,OAAO,EAAE;AAACC,MAAAA,MAAM,EAAE,kBAAT;AAA6B,mBAAa;AAA1C;AAFG,GAAhB,CAFgD,CAMhD;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIU,UAAU,GAAG,EAAjB;AACA,QAAIC,OAAO,GAAG,EAAd;AAEA,QAAIC,CAAJ;AACA,QAAIC,CAAJ;AAEA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,aAAa,GAAG,CAApB;AAEAJ,IAAAA,OAAO,GAAGP,YAAY,CAACA,YAAvB;AAEAY,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ,EAdY,CAeZ;;AACA,UAAMa,eAAe,GAAG,CAAxB;;AAEA,UAAMC,YAAY;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAChBP,cAAAA,CAAC,GAAG,CADY;;AAAA;AAAA,oBACTA,CAAC,GAAG,CADK;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEKQ,KAAK,oGACyEN,KADzE,qBACyFC,aADzF,kDACoJT,OADpJ,CAFV;;AAAA;AAEPe,cAAAA,GAFO;AAAA;AAAA,qBAKMA,GAAG,CAACC,IAAJ,EALN;;AAAA;AAKPC,cAAAA,IALO;AAMbP,cAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAAkBA,IAAI,CAACC,MAAL,CAAYC,MAA9B,EANa,CAQb;AACA;AACA;AACA;AACA;;AAZa;AACFb,cAAAA,CAAC,IAAIc,SAAS,IAAE,EADd;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZP,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAgBIA,IAAAA,YAAY;AACf,GAnCI,EAmCF,EAnCE,CAAT;AAuCA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADJ;AAQC,CAvDD;;GAAMhB,K;;KAAAA,K;AAyDN,eAAeA,KAAf,C,CAII;AACA;AACA;AACJ","sourcesContent":["import * as Web3 from 'web3';\r\nimport { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js';\r\nimport React, { Component, useEffect } from 'react';\r\nimport OpenSeaApi from \"./OpenSeaApi.js\";\r\nimport { OrderSide } from 'opensea-js/lib/types';\r\n\r\n\r\n\r\n\r\nconst OsSdk = ({tokenIdArray, projectTotal}) => {\r\n\r\nconst options = {\r\n    method: 'GET',\r\n    headers: {Accept: 'application/json', 'X-API-KEY': '2f2a0900458f4bdfbb489680a58e7526'}\r\n    };\r\n//calls to reach collection total\r\n\r\nuseEffect(() => {\r\n\r\n    let orderArray = [];\r\n    let idArray = [];\r\n\r\n    let i;\r\n    let j;\r\n\r\n    let limit = 50;\r\n    let currentOffSet = 0;\r\n\r\n    idArray = tokenIdArray.tokenIdArray;\r\n\r\n    console.log(orderArray);\r\n    console.log(projectTotal)\r\n    //const callsPerProject = Math.ceil(tokenIdArray.tokenIdArray.length / 50);\r\n    const callsPerProject = 2;\r\n\r\n    const fetchParcels = async () => {\r\n    for (i = 0; i < 1; i++, offsetNum+=50) {\r\n            const res = await fetch(\r\n                `https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=${limit}&offset=${currentOffSet}&order_by=created_date&order_direction=desc`,options\r\n            );\r\n            const data = await res.json();\r\n            console.log(data, data.orders.length)\r\n      \r\n            // const total = res.headers.get(\"x-total-count\");\r\n            //const total = data.count;\r\n            //etpageCount(Math.ceil(projectTotal / limit));\r\n            // console.log(Math.ceil(total/12));\r\n            //setItems(data);\r\n\r\n    }\r\n        }\r\n        fetchParcels();\r\n    }, []);\r\n\r\n\r\n\r\nreturn (\r\n    <div className=\"container2\">\r\n    <div className=\"container1\">\r\n        Hi Joe\r\n    </div>\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nexport default OsSdk;\r\n\r\n\r\n\r\n    //turns an array into a string\r\n    //const makeString = stringItem => stringItem * 2;\r\n    //const iArrayMap = idArray.map(makeString);\r\n//https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=20&offset=0&order_by=created_date&order_direction=desc', options)"]},"metadata":{},"sourceType":"module"}