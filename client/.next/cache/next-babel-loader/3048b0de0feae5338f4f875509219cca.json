{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AccountsContainer.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport MyAddBar from \"./AddressBar.js\";\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"drizzle-react-components\";\nimport { Drizzle } from \"@drizzle/store\";\nimport options from \"./drizzleOptions\";\nimport { Loader } from 'rimble-ui';\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\nimport Web3 from \"web3\";\nconst {\n  ContractData\n} = newContextComponents; //const drizzle = new Drizzle(options);\n//const AccountsContainer = () => {\n\nclass AccountsContainer extends React.Component {\n  render() {\n    return (// <DrizzleContext.Provider drizzle={drizzle}>\n      __jsx(DrizzleContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, drizzleContext => {\n        const {\n          drizzle,\n          drizzleState,\n          initialized\n        } = drizzleContext;\n\n        if (!initialized) {\n          return __jsx(Loader, {\n            size: \"30px\",\n            color: \"white\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 20\n            }\n          });\n        } else {\n          //const account = drizzleState.accounts[0];\n          const getMember = drizzle.contracts.UserStorage.methods.addresses(drizzleState.accounts[0]).call();\n          getMember().then(member => {\n            console.log(member);\n          }); // console.log(getMember())\n\n          if (getMember().then(member => {\n            return member;\n          })) if (!getMember().then(member => {\n            member;\n          })) {\n            return __jsx(MyAddBar, {\n              drizzleState: drizzleState,\n              drizzle: drizzle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 20\n              }\n            });\n          }\n          return __jsx(JoinButton, {\n            drizzleState: drizzleState,\n            drizzle: drizzle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 20\n            }\n          });\n        }\n      } // const getMember = async () => {\n      // let isMember;\n      // isMember = await drizzle.contracts.UserStorage.methods.addresses(drizzleState.accounts[0]).call();\n      // if(isMember)\n      // {\n      //   return <MyAddBar drizzleState={drizzleState} drizzle={drizzle}  />\n      //   }\n      //   return <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\n      //   }\n      //return <ContractData drizzle={drizzle} drizzleState={drizzleState} contract=\"UserStorage\" method=\"addresses\" methodArgs={[drizzleState.accounts[0]]} />\n      // const Member = <ContractData drizzle={drizzle} drizzleState={drizzleState} contract=\"UserStorage\" method=\"addresses\" methodArgs={[drizzleState.accounts[0]]} />\n      // if(!Member){\n      //   return \"hello\";\n      // }\n      // return \"goodbye\";\n      //return Member;\n      // render = {data => (\n      //   <>\n      //   this is <b>{data}</b>\n      //   </>\n      //)}\n      //render (){<div></div>}\n      //console.log(getMember())\n      //return {getMember};\n      , \"; //   getMember().then((member) => \", \"}\") // </DrizzleContext.Provider>\n\n    );\n  }\n\n}\n\nexport default AccountsContainer;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AccountsContainer.js"],"names":["React","UserInfo","MyAddBar","DrizzleContext","newContextComponents","Drizzle","options","Loader","JoinButton","Web3","ContractData","AccountsContainer","Component","render","drizzleContext","drizzle","drizzleState","initialized","getMember","contracts","UserStorage","methods","addresses","accounts","call","then","member","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAUC,MAAV,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAmBN,oBAAzB,C,CACA;AAGA;;AACA,MAAMO,iBAAN,SAAgCX,KAAK,CAACY,SAAtC,CAAgD;AAE9CC,EAAAA,MAAM,GAAG;AACT,WACE;AACE,YAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,cAAc,IAAI;AACjB,cAAM;AAACC,UAAAA,OAAD;AAAUC,UAAAA,YAAV;AAAwBC,UAAAA;AAAxB,YAAwCH,cAA9C;;AAEA,YAAG,CAACG,WAAJ,EAAiB;AACf,iBAAO,MAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,MAAb;AAAoB,YAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFD,MAGM;AACJ;AACA,gBAAMC,SAAS,GAAGH,OAAO,CAACI,SAAR,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCC,SAAtC,CAAgDN,YAAY,CAACO,QAAb,CAAsB,CAAtB,CAAhD,EAA0EC,IAA1E,EAAlB;AACEN,UAAAA,SAAS,GAAGO,IAAZ,CAAkBC,MAAD,IAAY;AAC/BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,WAFG,EAHE,CAOL;;AAEC,cAAGR,SAAS,GAAGO,IAAZ,CAAkBC,MAAD,IAAY;AAC9B,mBAAOA,MAAP;AACD,WAFE,CAAH,EAIA,IAAG,CAACR,SAAS,GAAGO,IAAZ,CAAkBC,MAAD,IAAY;AAC/BA,YAAAA,MAAM;AACP,WAFG,CAAJ,EAEI;AACJ,mBAAO,MAAC,QAAD;AAAU,cAAA,YAAY,EAAEV,YAAxB;AAAsC,cAAA,OAAO,EAAED,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACC;AACD,iBAAO,MAAC,UAAD;AAAY,YAAA,YAAY,EAAEC,YAA1B;AAAwC,YAAA,OAAO,EAAED,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACC;AACF,OA3BL,CA4BM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACF;AAxDN,oDAFJ,CAoFE;;AApFF;AAuFD;;AA1F+C;;AA6FhD,eAAeJ,iBAAf","sourcesContent":["import React from \"react\";\r\nimport UserInfo from \"./UserInfo\"; \r\nimport MyAddBar from \"./AddressBar.js\"; \r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { newContextComponents } from \"drizzle-react-components\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport options from \"./drizzleOptions\";\r\nimport {  Loader } from 'rimble-ui';\r\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\r\nimport Web3 from \"web3\";\r\n\r\nconst { ContractData } = newContextComponents;\r\n//const drizzle = new Drizzle(options);\r\n\r\n\r\n//const AccountsContainer = () => {\r\nclass AccountsContainer extends React.Component {\r\n\r\n  render() {\r\n  return  (\r\n    // <DrizzleContext.Provider drizzle={drizzle}>\r\n      <DrizzleContext.Consumer>\r\n        {drizzleContext => {\r\n          const {drizzle, drizzleState, initialized } = drizzleContext;\r\n\r\n          if(!initialized) {\r\n            return <Loader size=\"30px\" color=\"white\" />\r\n          }\r\n          else  {\r\n            //const account = drizzleState.accounts[0];\r\n            const getMember = drizzle.contracts.UserStorage.methods.addresses(drizzleState.accounts[0]).call();\r\n              getMember().then((member) => {\r\n            console.log(member)\r\n          });\r\n          \r\n           // console.log(getMember())\r\n          \r\n            if(getMember().then((member) => {\r\n              return member;\r\n            }))\r\n          \r\n            if(!getMember().then((member) => {\r\n              member;\r\n            })) {\r\n            return <MyAddBar drizzleState={drizzleState} drizzle={drizzle}  />\r\n            }\r\n            return <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\r\n            }\r\n          }\r\n            // const getMember = async () => {\r\n            // let isMember;\r\n            // isMember = await drizzle.contracts.UserStorage.methods.addresses(drizzleState.accounts[0]).call();\r\n            // if(isMember)\r\n            // {\r\n            //   return <MyAddBar drizzleState={drizzleState} drizzle={drizzle}  />\r\n            //   }\r\n            //   return <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\r\n            //   }\r\n\r\n\r\n             //return <ContractData drizzle={drizzle} drizzleState={drizzleState} contract=\"UserStorage\" method=\"addresses\" methodArgs={[drizzleState.accounts[0]]} />\r\n              // const Member = <ContractData drizzle={drizzle} drizzleState={drizzleState} contract=\"UserStorage\" method=\"addresses\" methodArgs={[drizzleState.accounts[0]]} />\r\n              // if(!Member){\r\n              //   return \"hello\";\r\n              // }\r\n              // return \"goodbye\";\r\n              //return Member;\r\n              // render = {data => (\r\n              //   <>\r\n              //   this is <b>{data}</b>\r\n              //   </>\r\n              //)}\r\n              \r\n            \r\n             \r\n              //render (){<div></div>}\r\n              //console.log(getMember())\r\n            //return {getMember};\r\n            };\r\n          \r\n          \r\n            \r\n          \r\n          //   getMember().then((member) => {\r\n          //   console.log(member)\r\n          // });\r\n          \r\n          //  // console.log(getMember())\r\n          \r\n          //   if(getMember().then((member) => {\r\n          //     return member;\r\n          //   }))\r\n          \r\n          //   if(!getMember().then((member) => {\r\n          //     member;\r\n          //   })) {\r\n          //   return <MyAddBar drizzleState={drizzleState} drizzle={drizzle}  />\r\n          //   }\r\n          //   return <JoinButton drizzleState={drizzleState} drizzle={drizzle} />\r\n          //   }\r\n\r\n        }}\r\n      </DrizzleContext.Consumer>\r\n    // </DrizzleContext.Provider>\r\n);\r\n  \r\n}\r\n\r\n}\r\nexport default AccountsContainer;"]},"metadata":{},"sourceType":"module"}