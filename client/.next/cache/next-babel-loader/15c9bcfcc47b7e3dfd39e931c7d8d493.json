{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\NominationDetailsLink.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Button } from \"shards-react\";\n\nconst NominationDetailsLink = ({\n  parcel,\n  getTokenId,\n  tokenIdState,\n  txSuccessful,\n  count\n}) => {\n  _s();\n\n  const {\n    0: tokenId,\n    1: setTokenId\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const fetchDetailsLink = async () => {\n    const graphql = JSON.stringify({\n      query: `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) { tokenId }}`\n    });\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n          targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace';\n    fetch(proxyUrl + targetUrl, {\n      method: \"POST\",\n      headers: myHeaders,\n      body: graphql,\n      variables: {},\n      redirect: 'follow'\n    }).then(res => res.json()).then(result => {\n      const parcelData = result.data.parcels[0];\n      const gotTokenId = parcelData.tokenId;\n      setTokenId(gotTokenId);\n    });\n  };\n\n  return __jsx(Accordion, {\n    defaultActiveKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \" \", console.log(count), __jsx(Accordion.Toggle, {\n    as: Button,\n    onClick: fetchDetailsLink,\n    variant: \"link\",\n    eventKey: \"0\",\n    outline: true,\n    theme: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Asset Details\")), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3 mt-3 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    onClick: getTokenId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, \"Dougy\")), __jsx(\"a\", {\n    href: `https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/` + tokenId,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Decentraland\"))))));\n}; //export default NominationDetailsLink;\n\n\n_s(NominationDetailsLink, \"UbJkFH+74NQnDG7aqHPbOBjN2+4=\");\n\n_c = NominationDetailsLink;\n\nconst mapStateToProps = state => ({\n  count: state.dappReducer.count,\n  tokenIdState: state.dappReducer.tokenId,\n  txSuccessful: state.dappReducer.txSuccessful,\n  checkMetaMask: state.dappReducer.checkMetaMask,\n  metaMaskReject: state.dappReducer.metaMaskReject\n}); // const increment = () => ({ type: \"INC\" });\n// const decrement = () => ({ type: \"DEC\" });\n// const reset = () => ({ type: \"RESET\" });\n// const mapDispatchToProps = dispatch => ({\n//   decrement: () => dispatch(decrement()),\n//   increment: () => dispatch(increment()),\n//   reset: () => dispatch(reset())\n// });\n\n\nconst getTokenId = () => ({\n  type: \"GET_TOKEN_ID\"\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTokenId: () => dispatch(getTokenId())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NominationDetailsLink);\n\nvar _c;\n\n$RefreshReg$(_c, \"NominationDetailsLink\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/NominationDetailsLink.js"],"names":["React","useState","connect","Accordion","Button","NominationDetailsLink","parcel","getTokenId","tokenIdState","txSuccessful","count","tokenId","setTokenId","loading","setLoading","myHeaders","Headers","append","fetchDetailsLink","graphql","JSON","stringify","query","x","y","proxyUrl","targetUrl","fetch","method","headers","body","variables","redirect","then","res","json","result","parcelData","data","parcels","gotTokenId","console","log","mapStateToProps","state","dappReducer","checkMetaMask","metaMaskReject","type","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Button } from \"shards-react\";\r\n\r\nconst NominationDetailsLink = ({ parcel, getTokenId, tokenIdState, txSuccessful, count }) => { \r\n\r\n  const [tokenId, setTokenId] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const myHeaders = new Headers();  \r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  const fetchDetailsLink = async () => {\r\n  const graphql= JSON.stringify({ query: \r\n  `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) { tokenId }}`\r\n})\r\n\r\n  const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n  targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\r\n\r\n  fetch(proxyUrl + targetUrl, {\r\n    method: \"POST\",\r\n    headers:myHeaders,  \r\n    body:graphql, variables:{},\r\n    redirect: 'follow'\r\n})\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        const parcelData = result.data.parcels[0];\r\n        const gotTokenId = parcelData.tokenId;\r\n        setTokenId(gotTokenId);\r\n    });\r\n \r\n  } \r\n  \r\nreturn (\r\n    <Accordion defaultActiveKey=\"1\">\r\n      <div> {console.log(count)}\r\n        <Accordion.Toggle as={Button} onClick={fetchDetailsLink} variant=\"link\" eventKey=\"0\" outline theme=\"light\">\r\n        <div>Asset Details</div>\r\n        </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <div className=\"p-3 mt-3 border rounded\">\r\n              <div>\r\n              <div>\r\n                  <Button onClick={getTokenId}>Dougy</Button>\r\n                {/* <Button onClick={decrement}>-</Button>\r\n                <div>{count}</div>\r\n                <Button onClick={increment}>+</Button>\r\n                <Button onClick={reset}>reset</Button> */}\r\n              </div>\r\n            \r\n                <a href={`https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/`+ tokenId}  target=\"_blank\">Decentraland</a>\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n      </div> \r\n    </Accordion>\r\n  )\r\n}\r\n\r\n//export default NominationDetailsLink;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  count: state.dappReducer.count,\r\n  tokenIdState: state.dappReducer.tokenId,\r\n  txSuccessful: state.dappReducer.txSuccessful,\r\n  checkMetaMask: state.dappReducer.checkMetaMask,\r\n  metaMaskReject: state.dappReducer.metaMaskReject\r\n})\r\n\r\n\r\n// const increment = () => ({ type: \"INC\" });\r\n// const decrement = () => ({ type: \"DEC\" });\r\n// const reset = () => ({ type: \"RESET\" });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   decrement: () => dispatch(decrement()),\r\n//   increment: () => dispatch(increment()),\r\n//   reset: () => dispatch(reset())\r\n// });\r\n\r\nconst getTokenId = () => ({ type: \"GET_TOKEN_ID\" });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTokenId: () => dispatch(getTokenId()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NominationDetailsLink);\r\n\r\n"]},"metadata":{},"sourceType":"module"}