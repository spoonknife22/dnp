{"ast":null,"code":"import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\nconst GOT_TOKEN_ID = 'GOT_TOKEN_ID';\n\nfunction* txSuccessful() {\n  console.log('Hello Sagas!'); //yield put({ type: TX_PROCESSING_DONE});\n}\n\nfunction* fetchTokenId() {\n  console.log('Hello Sagas!'); //toast.info('hi', { position: toast.POSITION.TOP_RIGHT })\n  //yield put({ type:GOT_TOKEN_ID,tokenId:33 })\n}\n\nfunction* appRootSaga() {\n  yield takeEvery('GOT_TOKEN_ID', fetchTokenId()), yield takeEvery('TX_SUCCESSFUL', txSuccessful);\n}\n\nexport default appRootSaga;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/capSagas.js"],"names":["all","fork","takeLatest","put","call","take","race","select","takeEvery","toast","TX_PROCESSING_DONE","GOT_TOKEN_ID","txSuccessful","console","log","fetchTokenId","appRootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+DC,SAA/D,QAAgF,oBAAhF;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,YAAY,GAAG,cAArB;;AAEA,UAAUC,YAAV,GAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADuB,CAEvB;AACD;;AAED,UAAUC,YAAV,GAAyB;AACvBF,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADuB,CAGvB;AACA;AACA;;AAEF,UAAUE,WAAV,GAAwB;AACtB,QAAMR,SAAS,CAAC,cAAD,EAAiBO,YAAY,EAA7B,CAAf,EACA,MAAMP,SAAS,CAAC,eAAD,EAAkBI,YAAlB,CADf;AAED;;AAED,eAAeI,WAAf","sourcesContent":["import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\r\nconst GOT_TOKEN_ID = 'GOT_TOKEN_ID';\r\n \r\nfunction* txSuccessful() {\r\n  console.log('Hello Sagas!')\r\n  //yield put({ type: TX_PROCESSING_DONE});\r\n}\r\n\r\nfunction* fetchTokenId() {\r\n  console.log('Hello Sagas!')\r\n\r\n  //toast.info('hi', { position: toast.POSITION.TOP_RIGHT })\r\n  //yield put({ type:GOT_TOKEN_ID,tokenId:33 })\r\n }\r\n\r\nfunction* appRootSaga() {\r\n  yield takeEvery('GOT_TOKEN_ID', fetchTokenId()),\r\n  yield takeEvery('TX_SUCCESSFUL', txSuccessful)\r\n}\r\n\r\nexport default appRootSaga;\r\n\r\n"]},"metadata":{},"sourceType":"module"}