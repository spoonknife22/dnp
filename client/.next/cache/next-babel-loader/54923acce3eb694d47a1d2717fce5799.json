{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\EthAccounts.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nclass EthAccounts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.UserStorage;\n    const account = drizzleState.accounts[0];\n    const userId = await drizzle.contracts.UserStorage.methods.addresses(account).call();\n    const dataKey = await contract.methods[\"profiles\"].cacheCall([0]);\n    this.setState({\n      dataKey\n    });\n  }\n\n  render() {\n    const {\n      UserStorage\n    } = this.props.drizzleState.contracts;\n    const displayData = UserStorage.profiles[this.state.dataKey]; // if displayData (an object) exists, then we can display the value \n\n    const user = displayData && displayData.value[1];\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }\n    }, \"Hi: \", user, \" \");\n  }\n\n}\n\nexport default EthAccounts; //  <ContractData contract=\"Storage\" method=\"getData\" toUtf8 toAscii />","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/EthAccounts.js"],"names":["React","EthAccounts","Component","dataKey","componentDidMount","drizzle","drizzleState","props","contract","contracts","UserStorage","account","accounts","userId","methods","addresses","call","cacheCall","setState","render","displayData","profiles","state","user","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCACjC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADiC;AAAA;;AAG1C,QAAMC,iBAAN,GAA0B;AACvB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4B,KAAKC,KAAvC;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,SAAR,CAAkBC,WAAnC;AACA,UAAMC,OAAO,GAAGL,YAAY,CAACM,QAAb,CAAsB,CAAtB,CAAhB;AAID,UAAMC,MAAM,GAAG,MAAMR,OAAO,CAACI,SAAR,CAAkBC,WAAlB,CAA8BI,OAA9B,CAAsCC,SAAtC,CAAgDJ,OAAhD,EAAyDK,IAAzD,EAArB;AAGA,UAAMb,OAAO,GAAG,MAAMK,QAAQ,CAACM,OAAT,CAAiB,UAAjB,EAA6BG,SAA7B,CAAuC,CAAC,CAAD,CAAvC,CAAtB;AACA,SAAKC,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd;AAEA;;AAGDgB,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAET,MAAAA;AAAF,QAAkB,KAAKH,KAAL,CAAWD,YAAX,CAAwBG,SAAhD;AACA,UAAMW,WAAW,GAAGV,WAAW,CAACW,QAAZ,CAAqB,KAAKC,KAAL,CAAWnB,OAAhC,CAApB,CAHO,CAGuD;;AAC9D,UAAMoB,IAAI,GAAIH,WAAW,IAAIA,WAAW,CAACI,KAAZ,CAAkB,CAAlB,CAA7B;AAGA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQD,IAAR,MAFF;AAID;;AA9BwC;;AAiC1C,eAAetB,WAAf,C,CAEA","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass EthAccounts extends React.Component {\r\n state = { dataKey: null };\r\n\r\nasync componentDidMount() {\r\n   const { drizzle, drizzleState } = this.props;\r\n   const contract = drizzle.contracts.UserStorage;\r\n   const account = drizzleState.accounts[0];\r\n  \r\n                                                        \r\n\r\n  const userId = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n \r\n \r\n  const dataKey = await contract.methods[\"profiles\"].cacheCall([0]);\r\n  this.setState({ dataKey });\r\n\r\n }\r\n\r\n\r\n render() {\r\n  \r\n   const { UserStorage } = this.props.drizzleState.contracts;\r\n   const displayData = UserStorage.profiles[this.state.dataKey]; // if displayData (an object) exists, then we can display the value \r\n   const user =  displayData && displayData.value[1];\r\n\r\n\r\n   return (\r\n \r\n     <p>Hi: {user} </p>\r\n   )\r\n }\r\n}\r\n\r\nexport default EthAccounts\r\n\r\n//  <ContractData contract=\"Storage\" method=\"getData\" toUtf8 toAscii />\r\n"]},"metadata":{},"sourceType":"module"}