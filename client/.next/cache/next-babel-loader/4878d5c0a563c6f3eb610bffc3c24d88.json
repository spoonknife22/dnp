{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\OutterOsSdk.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport OsSdk from './OsSdk.js';\n\nfunction OtterSkd(drizzle, drizzleState) {\n  _s();\n\n  const _useState = useState(0),\n        projectTotal = _useState[0],\n        setProjectTotal = _useState[1];\n\n  const _useState2 = useState(false),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        projectTokenIds = _useState3[0],\n        setprojectTokenIds = _useState3[1]; //useEffect(() => {\n\n\n  const fetchStats = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var proxyUrl, targetUrl, collectionSlug, collection, i, tokenIdArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.opensea.io/api/v1/collection/';\n            collectionSlug = 'doodles-official/';\n            collection = 'stats';\n            tokenIdArray = [];\n            console.log(tokenIdArray);\n            setprojectTokenIds(tokenIdArray);\n            fetch(targetUrl + collectionSlug + collection, {\n              header: 'x-api-key:2f2a0900458f4bdfbb489680a58e7526'\n            }).then(res => res.json()).then(res => {\n              setProjectTotal(res.stats.count);\n\n              for (i = 0; i < res.stats.count; i++) {\n                tokenIdArray.push(i);\n              }\n\n              error => {\n                setLoading(true), error;\n              };\n            }).then(() => {\n              setprojectTokenIds(tokenIdArray);\n              setLoading(false);\n            }, error => {\n              return error;\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchStats() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //fetchStats();\n  //}, []);\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(OsSdk, {\n    projectTotal: projectTotal,\n    tokenIdArray: projectTokenIds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(OtterSkd, \"lOjfVh8kO/lFaeo4cFtk0xF4K5I=\");\n\n_c = OtterSkd;\nexport default OtterSkd;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtterSkd\");","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/OutterOsSdk.js"],"names":["React","useState","useEffect","OsSdk","OtterSkd","drizzle","drizzleState","projectTotal","setProjectTotal","loading","setLoading","projectTokenIds","setprojectTokenIds","fetchStats","proxyUrl","targetUrl","collectionSlug","collection","tokenIdArray","console","log","fetch","header","then","res","json","stats","count","i","push","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAGA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,YAA3B,EAAyC;AAAA;;AAAA,oBACGL,QAAQ,CAAC,CAAD,CADX;AAAA,QAC9BM,YAD8B;AAAA,QAChBC,eADgB;;AAAA,qBAEPP,QAAQ,CAAC,KAAD,CAFD;AAAA,QAE9BQ,OAF8B;AAAA,QAErBC,UAFqB;;AAAA,qBAGST,QAAQ,CAAC,EAAD,CAHjB;AAAA,QAG9BU,eAH8B;AAAA,QAGbC,kBAHa,kBAKtC;;;AACK,QAAMC,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAEXC,YAAAA,QAFW,GAEA,sCAFA,EAGfC,SAHe,GAGH,2CAHG;AAITC,YAAAA,cAJS,GAIO,mBAJP;AAKTC,YAAAA,UALS,GAKE,OALF;AAQXC,YAAAA,YARW,GAQG,EARH;AASfC,YAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAN,YAAAA,kBAAkB,CAACM,YAAD,CAAlB;AACAG,YAAAA,KAAK,CAACN,SAAS,GAAGC,cAAZ,GAA6BC,UAA9B,EAAyC;AAACK,cAAAA,MAAM,EAAC;AAAR,aAAzC,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKC,GAAD,IAAS;AACNhB,cAAAA,eAAe,CAACgB,GAAG,CAACE,KAAJ,CAAUC,KAAX,CAAf;;AACA,mBAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,GAAG,CAACE,KAAJ,CAAUC,KAA1B,EAAiCC,CAAC,EAAlC,EAAsC;AACrCV,gBAAAA,YAAY,CAACW,IAAb,CAAkBD,CAAlB;AACD;;AAEAE,cAAAA,KAAD,IAAW;AACTpB,gBAAAA,UAAU,CAAC,IAAD,CAAV,EACAoB,KADA;AAED,eAHD;AAID,aAbL,EAcKP,IAdL,CAcU,MAAM;AACZX,cAAAA,kBAAkB,CAACM,YAAD,CAAlB;AACER,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD,aAjBL,EAkBKoB,KAAD,IAAW;AACT,qBAAOA,KAAP;AACC,aApBP;;AAXe;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVjB,UAAU;AAAA;AAAA;AAAA,KAAhB,CANiC,CAyCjC;AACF;;;AAEF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAQ,IAAA,YAAY,EAAEN,YAAtB;AAAoC,IAAA,YAAY,EAAEI,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;GAjDMP,Q;;KAAAA,Q;AAmDP,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport OsSdk from './OsSdk.js';\r\n\r\n\r\nfunction OtterSkd(drizzle, drizzleState) {\r\n    const [projectTotal, setProjectTotal] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [projectTokenIds, setprojectTokenIds] = useState([]);\r\n  \r\n   //useEffect(() => {\r\n        const fetchStats = async () => { \r\n   \r\n            var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n            targetUrl = 'https://api.opensea.io/api/v1/collection/';\r\n            const collectionSlug= 'doodles-official/';\r\n            const collection='stats';\r\n           \r\n            let i;\r\n            let tokenIdArray= [];\r\n            console.log(tokenIdArray)\r\n            setprojectTokenIds(tokenIdArray);\r\n            fetch(targetUrl + collectionSlug + collection,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\r\n              .then(res => res.json())\r\n              .then(\r\n                (res) => {\r\n                   setProjectTotal(res.stats.count)\r\n                   for (i = 0; i < res.stats.count; i++) {\r\n                    tokenIdArray.push(i)\r\n                  }           \r\n\r\n                  (error) => {\r\n                    setLoading(true),\r\n                    error;\r\n                  }\r\n                })   \r\n                .then(() => {\r\n                setprojectTokenIds(tokenIdArray);\r\n                  setLoading(false);\r\n                },\r\n                (error) => {\r\n                  return error;\r\n                  }\r\n                ) \r\n              \r\n        }\r\n        //fetchStats();\r\n      //}, []);\r\n    \r\n    return (\r\n      <div>\r\n        <OsSdk  projectTotal={projectTotal} tokenIdArray={projectTokenIds}  />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default OtterSkd;"]},"metadata":{},"sourceType":"module"}