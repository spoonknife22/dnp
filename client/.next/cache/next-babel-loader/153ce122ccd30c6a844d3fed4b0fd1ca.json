{"ast":null,"code":"import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { drizzleSagas } from '@drizzle/store';\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nconst TOKEN_ID_FETCH = 'TOKEN_ID_FETCH';\n\nfunction* fetchTokenId(action) {\n  yield put({\n    type: 'TOKEN_ID_FETCHING',\n    tokenId: 22\n  });\n}\n\nfunction* txSuccessful() {\n  console.log('hi taxes');\n}\n\nfunction* appSagas() {\n  yield takeEvery('TX_SUCCESSFUL', txSuccessful);\n  yield takeLatest('TOKEN_ID_FETCH', fetchTokenId);\n}\n\nexport default appSagas;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/sagas/appSagas.js"],"names":["all","fork","takeLatest","put","call","take","race","select","takeEvery","toast","drizzleSagas","delay","ms","Promise","res","setTimeout","TOKEN_ID_FETCH","fetchTokenId","action","type","tokenId","txSuccessful","console","log","appSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+DC,SAA/D,QAAgF,oBAAhF;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAGA,MAAMC,KAAK,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMF,EAAN,CAA7B,CAAtB;;AAEA,MAAMI,cAAc,GAAG,gBAAvB;;AAEA,UAAUC,YAAV,CAAwBC,MAAxB,EAAgC;AAC9B,QAAMf,GAAG,CAAC;AAAEgB,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA,OAAO,EAAC;AAArC,GAAD,CAAT;AACD;;AAID,UAAUC,YAAV,GAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AAGD,UAAUC,QAAV,GAAsB;AACpB,QAAMhB,SAAS,CAAC,eAAD,EAAkBa,YAAlB,CAAf;AACA,QAAMnB,UAAU,CAAC,gBAAD,EAAmBe,YAAnB,CAAhB;AACD;;AACD,eAAeO,QAAf","sourcesContent":["import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\r\nimport { toast } from 'react-toastify';\r\nimport { drizzleSagas } from '@drizzle/store';\r\n\r\n\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms));\r\n\r\nconst TOKEN_ID_FETCH = 'TOKEN_ID_FETCH';\r\n\r\nfunction* fetchTokenId (action) {\r\n  yield put({ type: 'TOKEN_ID_FETCHING', tokenId:22  });\r\n}\r\n\r\n\r\n\r\nfunction* txSuccessful() {\r\n  console.log('hi taxes')\r\n}\r\n\r\n\r\nfunction* appSagas () {\r\n  yield takeEvery('TX_SUCCESSFUL', txSuccessful);\r\n  yield takeLatest('TOKEN_ID_FETCH', fetchTokenId)\r\n}\r\nexport default appSagas;\r\n\r\n"]},"metadata":{},"sourceType":"module"}