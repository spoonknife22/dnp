{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\buttons\\\\NominateButton.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Button } from \"shards-react\";\nimport { Loader } from 'rimble-ui';\n\nconst NominationButton = ({\n  nominateAsset,\n  intialContribution,\n  transactionProcessing\n}) => {\n  // let state = drizzle.store.getState();\n  // let transactionProcessing = state.appReducers.transactionProcessing;\n  console.log(transactionProcessing); // let state = drizzle.store.getState();\n  // let transactProcessing = state.transactionProcessing;\n  // useEffect(  () => {\n  //   if(transactProcessing){ \n  //     setShow(true);\n  //   }\n  //   else{\n  //   setShow(false);\n  //   }\n  // }, [transactProcessing]);   \n\n  if (!transactionProcessing) {\n    return __jsx(Button, {\n      className: \"btn btn-block btn-success contribute-form-btn\",\n      key: \"submit\",\n      type: \"button\",\n      onClick: nominateAsset,\n      theme: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Nominate\"));\n  }\n\n  if (transactionProcessing) {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }));\n  }\n};\n\n_c = NominationButton;\n\nconst mapStateToProps = state => ({\n  tokenIdState: state.appReducers.transactionProcessing\n});\n\nconst mapDispatchToProps = dispatch => ({\n  nominationProcess: () => dispatch({\n    type: \"NOM_TX_PROCESSING\"\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NominationButton); //export default NominationButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"NominationButton\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/buttons/NominateButton.js"],"names":["React","useState","useEffect","connect","Button","Loader","NominationButton","nominateAsset","intialContribution","transactionProcessing","console","log","mapStateToProps","state","tokenIdState","appReducers","mapDispatchToProps","dispatch","nominationProcess","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,kBAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiE;AAExF;AACA;AACFC,EAAAA,OAAO,CAACC,GAAR,CAAYF,qBAAZ,EAJ0F,CAKxF;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAG,CAACA,qBAAJ,EAA4B;AAE5B,WACQ,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,+CAAlB;AAAkE,MAAA,GAAG,EAAC,QAAtE;AAA+E,MAAA,IAAI,EAAC,QAApF;AAA6F,MAAA,OAAO,EAAEF,aAAtG;AAAsH,MAAA,KAAK,EAAC,SAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADR;AAKC;;AACD,MAAGE,qBAAH,EAA2B;AACzB,WACQ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADR;AAKD;AAEF,CAlCD;;KAAMH,gB;;AAoCN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,YAAY,EAAED,KAAK,CAACE,WAAN,CAAkBN;AADE,CAAZ,CAAxB;;AAIA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,iBAAiB,EAAE,MAAOD,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD;AADM,CAAf,CAA3B;;AAKA,eAAehB,OAAO,CAACS,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CV,gBAA7C,CAAf,C,CACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Button } from \"shards-react\";\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst NominationButton = ({ nominateAsset, intialContribution,transactionProcessing }) => {     \r\n\r\n  // let state = drizzle.store.getState();\r\n  // let transactionProcessing = state.appReducers.transactionProcessing;\r\nconsole.log(transactionProcessing)\r\n  // let state = drizzle.store.getState();\r\n  // let transactProcessing = state.transactionProcessing;\r\n \r\n  // useEffect(  () => {\r\n\r\n  //   if(transactProcessing){ \r\n  //     setShow(true);\r\n  //   }\r\n  //   else{\r\n  //   setShow(false);\r\n  //   }\r\n  // }, [transactProcessing]);   \r\n\r\n  if(!transactionProcessing)  {  \r\n    \r\n  return (\r\n          <Button className=\"btn btn-block btn-success contribute-form-btn\" key=\"submit\" type=\"button\" onClick={nominateAsset}  theme=\"success\" >\r\n            <p className=\"mb-0\">Nominate</p>\r\n          </Button>\r\n        )   \r\n  } \r\n  if(transactionProcessing)  {\r\n    return (   \r\n            <div className=\"mx-auto\">   \r\n              <Loader color=\"#007bff\" size=\"40px\" />\r\n            </div>\r\n        )   \r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tokenIdState: state.appReducers.transactionProcessing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nominationProcess: () =>  dispatch({ type: \"NOM_TX_PROCESSING\" })\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NominationButton);\r\n//export default NominationButton;"]},"metadata":{},"sourceType":"module"}