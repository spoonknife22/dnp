{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\InitialProposalModal.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { CardFooter, Button, Progress, Slider } from \"shards-react\";\nimport Web3 from \"web3\";\nimport InitialContribForm from '../../EthComponents/InitialContribForm';\n\nconst InitialProposalModal = ({\n  drizzleContext,\n  assetData,\n  state,\n  handleSlide\n}) => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //let value  = state.value;\n\n\n  let valueSlider = state.valueSlider;\n  let value = 0;\n  return __jsx(React.Fragment, null, __jsx(CardFooter, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-lg btn-block card-footer-btn\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Fund Purchase\")), __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Propose Asset\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, assetData.sell_orders.map(subOne => {\n    if (subOne.payment_token_contract.id === 1) {\n      let maxRanger = Web3.utils.fromWei(subOne.current_price, 'ether');\n      let maxRange = parseInt(maxRanger);\n      let minRange = 0;\n      let progressMax = maxRange - minRange;\n      return __jsx(\"div\", {\n        key: subOne.created_date.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"current-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      }, __jsx(\"p\", {\n        className: \"mt-2 mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, \"Current Price:\\xA0\", Web3.utils.fromWei(subOne.current_price, 'ether'), \"\\xA0ETH\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }\n      }, __jsx(InitialContribForm, {\n        state: state,\n        valueSlider: valueSlider,\n        drizzleContext: drizzleContext,\n        handleSlide: handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }\n      })));\n    }\n  }))), __jsx(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default InitialProposalModal;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/InitialProposalModal.js"],"names":["React","useState","Modal","CardFooter","Button","Progress","Slider","Web3","InitialContribForm","InitialProposalModal","drizzleContext","assetData","state","handleSlide","show","setShow","handleClose","handleShow","valueSlider","value","sell_orders","map","subOne","payment_token_contract","id","maxRanger","utils","fromWei","current_price","maxRange","parseInt","minRange","progressMax","created_date","toString"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CardFooter, Button, Progress, Slider } from \"shards-react\";\r\nimport Web3 from \"web3\";\r\nimport InitialContribForm from '../../EthComponents/InitialContribForm';\r\n\r\n\r\nconst InitialProposalModal = ( {drizzleContext, assetData, state, handleSlide} ) => {\r\n  \r\n \r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //let value  = state.value;\r\n  let valueSlider = state.valueSlider;\r\n  let value  = 0;\r\n\r\n  return ( \r\n  \r\n        <>\r\n          <CardFooter className=\"p-0\">\r\n            <button type=\"button\" className=\"btn btn-lg btn-block card-footer-btn\" onClick={handleShow}>Fund Purchase</button>\r\n          </CardFooter>\r\n          \r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Propose Asset</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <div>\r\n              {assetData.sell_orders.map((subOne)=> \r\n                  {if(subOne.payment_token_contract.id === 1){\r\n                    let maxRanger = Web3.utils.fromWei(subOne.current_price,'ether')\r\n                    let maxRange = parseInt(maxRanger);\r\n                    let minRange = 0;\r\n                    let progressMax = maxRange-minRange;\r\n\r\n                    return (\r\n                    <div key={subOne.created_date.toString()}>\r\n                      <div className=\"current-price\">\r\n                        <p className=\"mt-2 mb-1\" >Current Price:&nbsp;{Web3.utils.fromWei(subOne.current_price,'ether')}&nbsp;ETH</p>\r\n                      </div>\r\n                      <div>\r\n                      <InitialContribForm state={state} valueSlider={valueSlider} drizzleContext = { drizzleContext } handleSlide={ handleClose } /> \r\n                      </div>  \r\n                    </div>\r\n                    )\r\n                  }\r\n                }\r\n              )}\r\n                </div>\r\n            </Modal.Body>\r\n            <div className=\"modal-footer\">\r\n              {/* <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button> */}\r\n                \r\n            </div>\r\n          </Modal>\r\n        </>\r\n         );    \r\n        } \r\n\r\n    export default InitialProposalModal;      "]},"metadata":{},"sourceType":"module"}