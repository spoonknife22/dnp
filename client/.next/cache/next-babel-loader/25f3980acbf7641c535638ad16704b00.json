{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\Nominations.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport { Loader } from 'rimble-ui';\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, Button, Row } from \"shards-react\";\nimport NominationModal from './modals/NominationModal';\nimport FundingModal from './modals/FundingModal.js';\nimport SaleModal from './modals/SaleModal.js';\nimport SoldModal from './modals/SoldModal.js';\nimport PaidOutModal from './modals/PaidOutModal.js';\nimport PurchaseModal from './modals/PurchaseModal.js';\nimport NominationDetailsLink from './NominationDetailsLink.js';\nimport CardFooterButton from './buttons/CardFooterBtn.js';\nimport Moment from \"react-moment\"; // const CardFooterButton = ({ props, userManaBalance, getSoldStatus, nftAddress, expiresAt, assetPrice, tokenId, orderId, getOrderId, orderStatus, storedOrderId }) => {\n//   const [isStatus, setStatus] = useState(null);\n//   // const [isStoredOrderId, setStoredOrderId] = useState();\n//   console.log(storedOrderId)\n//   const fetchProposals = async () => {\n//     const proposal = await props.drizzle.contracts.ProposalController.methods.deployedProposals(`${tokenId}`).call();\n//     if(proposal){\n//       const proposalAddress = await props.drizzle.contracts.ProposalController.methods.proposalTokenIdMap(`${tokenId}`).call();\n//       const proposalBalance = await props.drizzle.contracts.MANAToken.methods.balanceOf(`${proposalAddress}`).call();\n//       const propData = await props.drizzle.contracts.ProposalController.methods.getPropData(`${proposalAddress}`).call();\n//       const status = propData[0];\n//       getOrderId(propData[2]);\n//       if(status === '4'){\n//         if(proposalBalance > assetPrice){\n//           const soldStatus = '6';\n//           getSoldStatus(proposalBalance, soldStatus);\n//           setStatus('6');\n//         }\n//           else{\n//             setStatus(status);\n//             getOrderId(orderId);\n//           }\n//       }\n//         else {\n//           setStatus(status);\n//           getOrderId(orderId);\n//         }\n//       }\n//       else{\n//         setStatus(null)\n//         getOrderId(orderId);\n//       }\n//     }\n//     useEffect(() => {\n//       fetchProposals();\n//     }, [tokenId]);\n//     return (\n//         <>\n//         {(() => {\n//         switch (isStatus) {\n//         //switch ('6') {\n//           //0-FUNDING\n//           case '0':\n//             return (\n//               <CardFooter className=\"p-0\">  \n//                 Funding:{orderId}\n//                 <FundingModal \n//                   nftAddress={nftAddress}\n//                   tokenId={tokenId}\n//                   assetPrice={assetPrice}\n//                   expiresAt={expiresAt}  \n//                   props={props} \n//                   userManaBalance={userManaBalance}\n//                 />\n//               </CardFooter> \n//             )\n//             // case '0'  && orderId === storedOrderId:\n//             //   return  (\n//             //     <>\n//             //       <CardFooter className=\"p-0\"> \n//             //       Nomination=0:{storedOrderId} \n//             //         <NominationModal\n//             //           nftAddress={nftAddress}\n//             //           tokenId={tokenId}\n//             //           assetPrice={assetPrice}\n//             //           expiresAt={expiresAt} \n//             //           props={props} \n//             //           orderId={orderId}\n//             //           userManaBalance={userManaBalance}\n//             //           orderStatus={orderStatus}\n//             //         />\n//             //       </CardFooter> \n//             //     </>\n//             // )\n//           //FUNDED\n//           case '1':\n//             return (\n//               <CardFooter className=\"p-0\">\n//                 <PurchaseModal \n//                   nftAddress={nftAddress}\n//                   tokenId={tokenId}\n//                   assetPrice={assetPrice}\n//                   expiresAt={expiresAt} \n//                   props={props} \n//                   userManaBalance={userManaBalance}\n//                 />\n//               </CardFooter> \n//             )\n//           //FOR_SALE\n//           case '4':\n//             return  (\n//               <CardFooter className=\"p-0\">\n//                 <SaleModal \n//                   nftAddress={nftAddress}\n//                   tokenId={tokenId}\n//                   assetPrice={assetPrice}\n//                   expiresAt={expiresAt} \n//                   props={props} \n//                   userManaBalance={userManaBalance}\n//                 />\n//               </CardFooter> \n//             )\n//         //PAYINGOUT\n//           case '6':\n//             return  (\n//               <>\n//                 <CardFooter className=\"p-0\">\n//                   <SoldModal \n//                     nftAddress={nftAddress}\n//                     tokenId={tokenId}\n//                     assetPrice={assetPrice}\n//                     expiresAt={expiresAt} \n//                     props={props} \n//                     userManaBalance={userManaBalance}\n//                   />\n//                 </CardFooter> \n//               </>\n//             )\n//             case '7':\n//               return  (\n//                 <>\n//                   <CardFooter className=\"p-0\">\n//                     <PaidOutModal\n//                       nftAddress={nftAddress}\n//                       tokenId={tokenId}\n//                       assetPrice={assetPrice}\n//                       expiresAt={expiresAt} \n//                       props={props} \n//                       userManaBalance={userManaBalance}\n//                     />\n//                   </CardFooter> \n//                 </>\n//             )\n//             case null :\n//               return  (\n//                 <>\n//                   <CardFooter className=\"p-0\">\n//                   null:{storedOrderId}\n//                     <NominationModal\n//                       nftAddress={nftAddress}\n//                       tokenId={tokenId}\n//                       assetPrice={assetPrice}\n//                       expiresAt={expiresAt} \n//                       props={props} \n//                       orderId={orderId}\n//                       userManaBalance={userManaBalance}\n//                       orderStatus={orderStatus}\n//                     />\n//                   </CardFooter> \n//                 </>\n//             )\n//           case 'error':\n//             return'error'\n//           default:\n//             return (\n//               <CardFooter className=\"p-0\">\n//                 default:{storedOrderId}\n//                 <NominationModal\n//                   nftAddress={nftAddress}\n//                   tokenId={tokenId}\n//                   assetPrice={assetPrice}\n//                   expiresAt={expiresAt} \n//                   props={props} \n//                   orderId={orderId}\n//                   userManaBalance={userManaBalance}\n//                   orderStatus={orderStatus}\n//                 />\n//               </CardFooter> \n//             );\n//         }\n//       }\n//       )()}\n//     </>\n//     )\n//   }\n\nconst Nominations = ({\n  orders,\n  loading,\n  props,\n  userManaBalance,\n  getSoldStatus,\n  getOrderId,\n  storedOrderId\n}) => {\n  if (loading) {\n    return __jsx(Loader, {\n      className: \"mt-2 mx-auto\",\n      size: \"30px\",\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Row, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, orders.map(parcel => __jsx(\"div\", {\n    key: parcel.nft.activeOrder.txHash,\n    className: \"jsx-104154341\" + \" \" + \"mb-4 col-sm-12 col-md-12 col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, __jsx(CardHeader, {\n    className: \"asset-header p-2 card-title text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, \"Decentraland\"), __jsx(\"div\", {\n    className: \"jsx-104154341\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-104154341\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, __jsx(CardTitle, {\n    className: \"asset-title text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-104154341\" + \" \" + \"current-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"Price:\\xA0\", Web3.utils.fromWei(\"\".concat(parcel.nft.activeOrder.price), 'ether'), \" MANA\")))), __jsx(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, __jsx(NominationDetailsLink, {\n    tokenId: parcel.nft.parcel.tokenId,\n    drizzle: props.drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  })), __jsx(CardBody, {\n    className: \"pb-.4rem;px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    className: \"asset-image align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: 'https://api.decentraland.org/v1/parcels/' + parcel.nft.parcel.x + '/' + parcel.nft.parcel.y + '/map.png?height=260&width=260&size=12',\n    className: \"jsx-104154341\" + \" \" + \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  })), __jsx(Row, {\n    className: \"mt-2 justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-104154341\" + \" \" + \"my-2 asset-card text-center card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \"Parcel:\\xA0\", parcel.nft.parcel.x, \",\", parcel.nft.parcel.y)), __jsx(Row, {\n    className: \"mt-3 justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-104154341\" + \" \" + \"mb-2 col-sm asset-card text-left card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, \"End Date\"), __jsx(\"div\", {\n    className: \"jsx-104154341\" + \" \" + \"mb-2 col-sm asset-card-time text-right card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, typeof Number(parcel.nft.activeOrder.expiresAt) == 'number' ? __jsx(Moment, {\n    format: \"h:mma M/DD/YY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }\n  }, Number(parcel.nft.activeOrder.expiresAt)) : 'no end date'))), __jsx(CardFooterButton, {\n    tokenId: parcel.nft.parcel.tokenId,\n    assetPrice: parcel.nft.activeOrder.price,\n    expiresAt: parcel.nft.activeOrder.expiresAt,\n    nftAddress: parcel.nft.activeOrder.nftAddress,\n    orderId: parcel.nft.activeOrder.id,\n    orderStatus: parcel.status,\n    props: props,\n    storedOrderId: storedOrderId,\n    userManaBalance: userManaBalance,\n    getSoldStatus: getSoldStatus,\n    getOrderId: getOrderId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"104154341\",\n    __self: this\n  }, \".modal-content.jsx-104154341{border-top:2px solid #bff;}.asset-card.jsx-104154341{font-weight:400;color:black;font-size:.9rem;font-family:Poppins;}.card-footer-btn.jsx-104154341{font-family:Poppins;font-weight:400;color:#000;font-size:1rem;-webkit-letter-spacing:.3rem;-moz-letter-spacing:.3rem;-ms-letter-spacing:.3rem;letter-spacing:.3rem;border-radius:.01rem .01rem .2rem .2rem;}.card-footer-btn.jsx-104154341:hover{background:#007bff;color:white;}.asset-total-fund.jsx-104154341{font-weight:200;font-size:.9rem;-webkit-letter-spacing:.2rem;-moz-letter-spacing:.2rem;-ms-letter-spacing:.2rem;letter-spacing:.2rem;color:#000;}.asset-card-numbers.jsx-104154341{font-size:1rem;-webkit-letter-spacing:.2rem;-moz-letter-spacing:.2rem;-ms-letter-spacing:.2rem;letter-spacing:.2rem;color:#007bff;hover:black;}.asset-card-time.jsx-104154341{font-weight:400;color:#ff8080;font-size:.9rem;font-family:Poppins;}.current-price.jsx-104154341{font-size:.9rem;-webkit-letter-spacing:.1rem;-moz-letter-spacing:.1rem;-ms-letter-spacing:.1rem;letter-spacing:.1rem;font-weight:400;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Samsung\\\\\\\\code\\\\\\\\cacp\\\\\\\\client\\\\\\\\components\\\\\\\\Nominations.js */\"))));\n};\n\n_c = Nominations;\n\nconst mapStateToProps = state => ({\n  storedOrderId: state.appReducers.storedOrderId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getSoldStatus: (proposalBalance, soldStatus) => dispatch({\n    type: \"GOT_SOLD_STATUS\",\n    status: soldStatus,\n    proposalBalance: proposalBalance\n  }),\n  getOrderId: storedOrderId => dispatch({\n    type: \"GOT_STORED_ORDER_ID\",\n    storedOrderId: storedOrderId\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nominations);\n\nvar _c;\n\n$RefreshReg$(_c, \"Nominations\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/Nominations.js"],"names":["React","useState","useEffect","connect","Web3","Loader","Card","CardHeader","CardBody","CardFooter","CardTitle","Button","Row","NominationModal","FundingModal","SaleModal","SoldModal","PaidOutModal","PurchaseModal","NominationDetailsLink","CardFooterButton","Moment","Nominations","orders","loading","props","userManaBalance","getSoldStatus","getOrderId","storedOrderId","map","parcel","nft","activeOrder","txHash","utils","fromWei","price","tokenId","drizzle","x","y","Number","expiresAt","nftAddress","id","status","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","proposalBalance","soldStatus","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport { Loader } from 'rimble-ui';\r\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, Button, Row } from \"shards-react\";\r\nimport NominationModal from './modals/NominationModal';\r\nimport FundingModal from './modals/FundingModal.js';\r\nimport SaleModal from './modals/SaleModal.js';\r\nimport SoldModal from './modals/SoldModal.js';\r\nimport PaidOutModal from './modals/PaidOutModal.js';\r\nimport PurchaseModal from './modals/PurchaseModal.js';\r\nimport NominationDetailsLink from './NominationDetailsLink.js';\r\nimport CardFooterButton from './buttons/CardFooterBtn.js';\r\nimport Moment from \"react-moment\";\r\n\r\n// const CardFooterButton = ({ props, userManaBalance, getSoldStatus, nftAddress, expiresAt, assetPrice, tokenId, orderId, getOrderId, orderStatus, storedOrderId }) => {\r\n//   const [isStatus, setStatus] = useState(null);\r\n//   // const [isStoredOrderId, setStoredOrderId] = useState();\r\n//   console.log(storedOrderId)\r\n//   const fetchProposals = async () => {\r\n//     const proposal = await props.drizzle.contracts.ProposalController.methods.deployedProposals(`${tokenId}`).call();\r\n//     if(proposal){\r\n//       const proposalAddress = await props.drizzle.contracts.ProposalController.methods.proposalTokenIdMap(`${tokenId}`).call();\r\n//       const proposalBalance = await props.drizzle.contracts.MANAToken.methods.balanceOf(`${proposalAddress}`).call();\r\n//       const propData = await props.drizzle.contracts.ProposalController.methods.getPropData(`${proposalAddress}`).call();\r\n//       const status = propData[0];\r\n//       getOrderId(propData[2]);\r\n//       if(status === '4'){\r\n//         if(proposalBalance > assetPrice){\r\n//           const soldStatus = '6';\r\n//           getSoldStatus(proposalBalance, soldStatus);\r\n//           setStatus('6');\r\n//         }\r\n//           else{\r\n//             setStatus(status);\r\n//             getOrderId(orderId);\r\n//           }\r\n//       }\r\n//         else {\r\n//           setStatus(status);\r\n//           getOrderId(orderId);\r\n//         }\r\n//       }\r\n//       else{\r\n//         setStatus(null)\r\n//         getOrderId(orderId);\r\n//       }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//       fetchProposals();\r\n//     }, [tokenId]);\r\n\r\n//     return (\r\n//         <>\r\n//         {(() => {\r\n//         switch (isStatus) {\r\n//         //switch ('6') {\r\n//           //0-FUNDING\r\n//           case '0':\r\n//             return (\r\n//               <CardFooter className=\"p-0\">  \r\n//                 Funding:{orderId}\r\n//                 <FundingModal \r\n//                   nftAddress={nftAddress}\r\n//                   tokenId={tokenId}\r\n//                   assetPrice={assetPrice}\r\n//                   expiresAt={expiresAt}  \r\n//                   props={props} \r\n//                   userManaBalance={userManaBalance}\r\n//                 />\r\n//               </CardFooter> \r\n//             )\r\n//             // case '0'  && orderId === storedOrderId:\r\n//             //   return  (\r\n//             //     <>\r\n//             //       <CardFooter className=\"p-0\"> \r\n//             //       Nomination=0:{storedOrderId} \r\n//             //         <NominationModal\r\n//             //           nftAddress={nftAddress}\r\n//             //           tokenId={tokenId}\r\n//             //           assetPrice={assetPrice}\r\n//             //           expiresAt={expiresAt} \r\n//             //           props={props} \r\n//             //           orderId={orderId}\r\n//             //           userManaBalance={userManaBalance}\r\n//             //           orderStatus={orderStatus}\r\n//             //         />\r\n//             //       </CardFooter> \r\n//             //     </>\r\n//             // )\r\n//           //FUNDED\r\n//           case '1':\r\n//             return (\r\n//               <CardFooter className=\"p-0\">\r\n//                 <PurchaseModal \r\n//                   nftAddress={nftAddress}\r\n//                   tokenId={tokenId}\r\n//                   assetPrice={assetPrice}\r\n//                   expiresAt={expiresAt} \r\n//                   props={props} \r\n//                   userManaBalance={userManaBalance}\r\n//                 />\r\n//               </CardFooter> \r\n//             )\r\n//           //FOR_SALE\r\n//           case '4':\r\n//             return  (\r\n//               <CardFooter className=\"p-0\">\r\n//                 <SaleModal \r\n//                   nftAddress={nftAddress}\r\n//                   tokenId={tokenId}\r\n//                   assetPrice={assetPrice}\r\n//                   expiresAt={expiresAt} \r\n//                   props={props} \r\n//                   userManaBalance={userManaBalance}\r\n//                 />\r\n//               </CardFooter> \r\n//             )\r\n//         //PAYINGOUT\r\n//           case '6':\r\n//             return  (\r\n//               <>\r\n//                 <CardFooter className=\"p-0\">\r\n//                   <SoldModal \r\n//                     nftAddress={nftAddress}\r\n//                     tokenId={tokenId}\r\n//                     assetPrice={assetPrice}\r\n//                     expiresAt={expiresAt} \r\n//                     props={props} \r\n//                     userManaBalance={userManaBalance}\r\n//                   />\r\n//                 </CardFooter> \r\n//               </>\r\n//             )\r\n//             case '7':\r\n//               return  (\r\n//                 <>\r\n//                   <CardFooter className=\"p-0\">\r\n//                     <PaidOutModal\r\n//                       nftAddress={nftAddress}\r\n//                       tokenId={tokenId}\r\n//                       assetPrice={assetPrice}\r\n//                       expiresAt={expiresAt} \r\n//                       props={props} \r\n//                       userManaBalance={userManaBalance}\r\n//                     />\r\n//                   </CardFooter> \r\n//                 </>\r\n//             )\r\n//             case null :\r\n//               return  (\r\n//                 <>\r\n//                   <CardFooter className=\"p-0\">\r\n//                   null:{storedOrderId}\r\n//                     <NominationModal\r\n//                       nftAddress={nftAddress}\r\n//                       tokenId={tokenId}\r\n//                       assetPrice={assetPrice}\r\n//                       expiresAt={expiresAt} \r\n//                       props={props} \r\n//                       orderId={orderId}\r\n//                       userManaBalance={userManaBalance}\r\n//                       orderStatus={orderStatus}\r\n//                     />\r\n//                   </CardFooter> \r\n//                 </>\r\n//             )\r\n//           case 'error':\r\n//             return'error'\r\n//           default:\r\n//             return (\r\n//               <CardFooter className=\"p-0\">\r\n//                 default:{storedOrderId}\r\n//                 <NominationModal\r\n//                   nftAddress={nftAddress}\r\n//                   tokenId={tokenId}\r\n//                   assetPrice={assetPrice}\r\n//                   expiresAt={expiresAt} \r\n//                   props={props} \r\n//                   orderId={orderId}\r\n//                   userManaBalance={userManaBalance}\r\n//                   orderStatus={orderStatus}\r\n//                 />\r\n//               </CardFooter> \r\n//             );\r\n//         }\r\n//       }\r\n//       )()}\r\n//     </>\r\n//     )\r\n//   }\r\n\r\nconst Nominations =  ({ orders, loading, props, userManaBalance, getSoldStatus, getOrderId, storedOrderId }) => {\r\n  \r\n  if (loading) {\r\n    return <Loader className=\"mt-2 mx-auto\" size=\"30px\" color=\"blue\" />\r\n  }\r\n  return (  \r\n    <Row className=\"mt-4\">\r\n      {orders.map(parcel => (\r\n          <div key={parcel.nft.activeOrder.txHash} className=\"mb-4 col-sm-12 col-md-12 col-lg-4\">\r\n            <Card>\r\n              <CardHeader className=\"asset-header p-2 card-title text-center\">Decentraland</CardHeader>\r\n              <div>\r\n                <div>\r\n                  <CardTitle className=\"asset-title text-center\">\r\n                    <div className=\"current-price\">Price:&nbsp;{Web3.utils.fromWei(`${parcel.nft.activeOrder.price}`,'ether')} MANA</div>\r\n                  </CardTitle>   \r\n                </div>  \r\n              </div>  \r\n              <Row className=\"justify-content-center\">\r\n                <NominationDetailsLink tokenId={parcel.nft.parcel.tokenId} drizzle={props.drizzle} />\r\n              </Row>\r\n              <CardBody className=\"pb-.4rem;px-2\">\r\n                <Row className=\"asset-image align-items-center\">\r\n                  <img className=\"mx-auto\" src={'https://api.decentraland.org/v1/parcels/' + parcel.nft.parcel.x + '/' + parcel.nft.parcel.y + '/map.png?height=260&width=260&size=12'} />\r\n                </Row>\r\n                <Row className=\"mt-2 justify-content-center\">\r\n                <div className=\"my-2 asset-card text-center card-text\">Parcel:&nbsp;{parcel.nft.parcel.x},{parcel.nft.parcel.y}</div>\r\n                </Row>\r\n                <Row className=\"mt-3 justify-content-center\">\r\n                  <div className=\"mb-2 col-sm asset-card text-left card-text\">End Date</div>\r\n                  <div className=\"mb-2 col-sm asset-card-time text-right card-text\">\r\n                    {(typeof(Number(parcel.nft.activeOrder.expiresAt)) == 'number')?\r\n                      <Moment format=\"h:mma M/DD/YY\">\r\n                        {Number(parcel.nft.activeOrder.expiresAt)}\r\n                      </Moment>       \r\n                    :\r\n                      'no end date'\r\n                    }\r\n                  </div> \r\n                </Row>  \r\n              </CardBody>   \r\n              <CardFooterButton \r\n                 tokenId={parcel.nft.parcel.tokenId} \r\n                 assetPrice={parcel.nft.activeOrder.price} \r\n                 expiresAt={parcel.nft.activeOrder.expiresAt} \r\n                 nftAddress={parcel.nft.activeOrder.nftAddress} \r\n                 orderId={parcel.nft.activeOrder.id} \r\n                 orderStatus={parcel.status}\r\n                 props={props} \r\n                 storedOrderId={storedOrderId}\r\n                 userManaBalance={userManaBalance}\r\n                 getSoldStatus={getSoldStatus}\r\n                 getOrderId={getOrderId}\r\n              />\r\n            </Card>  \r\n          <style jsx> {` \r\n            .modal-content{border-top:2px solid #bff}\r\n            .asset-card{font-weight:400;color:black;font-size:.9rem;font-family: Poppins;}\r\n            .card-footer-btn{font-family: Poppins;font-weight:400;color:#000;font-size:1rem;\r\n            letter-spacing:.3rem;border-radius:.01rem .01rem .2rem .2rem;}\r\n            .card-footer-btn:hover{background:#007bff;color:white;}\r\n            .asset-total-fund{font-weight:200;font-size:.9rem;letter-spacing:.2rem;color:#000;}\r\n            .asset-card-numbers{font-size:1rem;letter-spacing:.2rem;color:#007bff;hover:black;}\r\n            .asset-card-time{font-weight:400;color:#ff8080;font-size:.9rem;font-family:Poppins;}\r\n            .current-price{font-size:.9rem;letter-spacing:.1rem;font-weight:400;}\r\n            `}    \r\n          </style>\r\n        </div>   \r\n      ))}\r\n    </Row> \r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  storedOrderId: state.appReducers.storedOrderId \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getSoldStatus: (proposalBalance, soldStatus) =>  dispatch({ type: \"GOT_SOLD_STATUS\", status: soldStatus, proposalBalance: proposalBalance }),\r\n  getOrderId: (storedOrderId) =>  dispatch({ type: \"GOT_STORED_ORDER_ID\", storedOrderId: storedOrderId })\r\n});\r\n  \r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nominations);"]},"metadata":{},"sourceType":"module"}