{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\NominationDetailsLink.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Button } from \"shards-react\";\n\nconst NominationDetailsLink = ({\n  parcel\n}) => {\n  const {\n    0: bids,\n    1: setBids\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const fetchDetailsLink = async () => {\n    let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n        targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace';\n    fetch(targetUrl, {\n      body: `{\"query\":{\n        parcels(where: {tokenId:\"${1.15792089237316195423570985008687907844762925492617102452873218822118924353538e+77}\"}) {\n          id\n          x\n          y\n      }\n  },\"variables\":null}`,\n      method: \"POST\"\n    }).then(r => r.json()).then(r => {\n      const parcelData = r.data.parcels[0];\n      console.log(`${tokenId} is ${parcelData.x},${parcelData.y}`);\n    }); //   let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n    //   targetUrl = 'https://api.decentraland.org/v1/parcels/' + parcel.x + '/' + parcel.y + '/bids?status=all'\n    //   fetch(proxyUrl + targetUrl)\n    //     .then(res => res.json())\n    //     .then(\n    //       (result) => {\n    //         setBids(result.data);\n    //         setLoading(false); \n    //       },\n    //       (error) => {\n    //         this.setState({\n    //           isLoaded: true,\n    //           error\n    //         });\n    //       }\n    // ) \n  };\n\n  return __jsx(Accordion, {\n    defaultActiveKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(Accordion.Toggle, {\n    as: Button,\n    onClick: fetchDetailsLink,\n    variant: \"link\",\n    eventKey: \"0\",\n    outline: true,\n    theme: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Property Details\")), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3 mt-3 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Decentraland\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    href: `https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/115792089237316195423570985008687907844762925492617102452873218822118924353538`,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"OpenSea\"))))));\n};\n\nexport default NominationDetailsLink;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/NominationDetailsLink.js"],"names":["React","useState","Accordion","Button","NominationDetailsLink","parcel","bids","setBids","loading","setLoading","fetchDetailsLink","proxyUrl","targetUrl","fetch","body","method","then","r","json","parcelData","data","parcels","console","log","tokenId","x","y"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAGA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAE5C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMS,gBAAgB,GAAG,YAAY;AAErC,QAAIC,QAAQ,GAAG,sCAAf;AAAA,QACAC,SAAS,GAAG,kEADZ;AAGAC,IAAAA,KAAK,CAACD,SAAD,EAAY;AACjBE,MAAAA,IAAI,EAAG;mCAC0B,mFAAoF;;;;;sBAFpG;AAQjBC,MAAAA,MAAM,EAAE;AARS,KAAZ,CAAL,CAUCC,IAVD,CAUOC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAVb,EAWCF,IAXD,CAWOC,CAAD,IAAO;AACX,YAAME,UAAU,GAAGF,CAAC,CAACG,IAAF,CAAOC,OAAP,CAAe,CAAf,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEC,OAAQ,OAAML,UAAU,CAACM,CAAE,IAAGN,UAAU,CAACO,CAAE,EAA1D;AACD,KAdD,EALqC,CAoBrC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,GAtCD;;AAwCF,SACI,MAAC,SAAD;AAAW,IAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,EAAE,EAAEvB,MAAtB;AAA8B,IAAA,OAAO,EAAEO,gBAAvC;AAAyD,IAAA,OAAO,EAAC,MAAjE;AAAwE,IAAA,QAAQ,EAAC,GAAjF;AAAqF,IAAA,OAAO,MAA5F;AAA6F,IAAA,KAAK,EAAC,OAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADF,EAII,MAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,MAAM,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAG,4KAAV;AAAwL,IAAA,MAAM,EAAC,QAA/L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,CAFF,CAJJ,CADF,CADJ;AAoBC,CAjED;;AAmEA,eAAeN,qBAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Button } from \"shards-react\";\r\n\r\n\r\nconst NominationDetailsLink = ({ parcel }) => { \r\n\r\n  const [bids, setBids] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchDetailsLink = async () => {\r\n\r\n  let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n  targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\r\n\r\n  fetch(targetUrl, {\r\n  body: `{\"query\":{\r\n        parcels(where: {tokenId:\"${1.15792089237316195423570985008687907844762925492617102452873218822118924353538e+77}\"}) {\r\n          id\r\n          x\r\n          y\r\n      }\r\n  },\"variables\":null}`,\r\n  method: \"POST\",\r\n})\r\n  .then((r) => r.json())\r\n  .then((r) => {\r\n    const parcelData = r.data.parcels[0];\r\n    console.log(`${tokenId} is ${parcelData.x},${parcelData.y}`);\r\n  });\r\n  //   let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n  //   targetUrl = 'https://api.decentraland.org/v1/parcels/' + parcel.x + '/' + parcel.y + '/bids?status=all'\r\n   \r\n  //   fetch(proxyUrl + targetUrl)\r\n  //     .then(res => res.json())\r\n  //     .then(\r\n  //       (result) => {\r\n  //         setBids(result.data);\r\n  //         setLoading(false); \r\n  //       },\r\n  //       (error) => {\r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           error\r\n  //         });\r\n  //       }\r\n  // ) \r\n\r\n  }\r\n  \r\nreturn (\r\n    <Accordion defaultActiveKey=\"1\">\r\n      <div>  \r\n        <Accordion.Toggle as={Button} onClick={fetchDetailsLink} variant=\"link\" eventKey=\"0\" outline theme=\"light\">\r\n        <div>Property Details</div>\r\n        </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n          \r\n            <div className=\"p-3 mt-3 border rounded\">\r\n              <div>\r\n                <a  target=\"_blank\">Decentraland</a>\r\n              </div>\r\n              <div>\r\n                <a href={`https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/115792089237316195423570985008687907844762925492617102452873218822118924353538`}  target=\"_blank\">OpenSea</a>\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n      </div> \r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default NominationDetailsLink;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}