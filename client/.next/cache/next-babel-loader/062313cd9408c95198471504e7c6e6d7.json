{"ast":null,"code":"import React from 'react';\nimport Navbar from '../components/layout/Navbar.js';\nimport HeadOne from '../components/layout/Head.js';\nimport Footer from '../components/layout/Footer.js';\nimport { connect, Provider } from 'react-redux';\nimport { DrizzleContext, DrizzleProvider, drizzleConnect } from \"@drizzle/react-plugin\";\nimport { ToastContainer } from 'react-toastify';\nimport { generateStore } from \"@drizzle/store\";\nimport drizzleOptions from \"../EthComponents/drizzleOptions\";\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\nimport rootSaga from '../middleware/sagas/fetchSaga';\nimport appSagas from '../middleware/sagas/rootSaga';\nimport reducer from '../middleware/reducers/appReducers.js';\nimport MyComponent from './innerInnerTestPage'; // const InnerTestPage = ({ propAddress,getCurrentProp }) => {\n//   getCurrentProp()\n// return (\n//   <div>\n//  {console.log(propAddress)}\n//     <div>Hello</div>\n//   </div>\n//     );\n// }\n\nconst mapStateToProps = state => ({\n  propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentProp: () => dispatch({\n    type: \"GET_PROP_ADDRESS\",\n    propAddress: 3\n  })\n});\n\nconst InnerTestPage = drizzleConnect(MyComponent, mapStateToProps, mapDispatchToProps);\nexport default InnerTestPage; //export default connect(mapStateToProps, mapDispatchToProps)(InnerTestPage);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/pages/innerTestPage.js"],"names":["React","Navbar","HeadOne","Footer","connect","Provider","DrizzleContext","DrizzleProvider","drizzleConnect","ToastContainer","generateStore","drizzleOptions","contractEventSaga","joinTransactionSaga","rootSaga","appSagas","reducer","MyComponent","mapStateToProps","state","propAddress","appReducers","mapDispatchToProps","dispatch","getCurrentProp","type","InnerTestPage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,cAA1C,QAAiE,uBAAjE;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,cAAP,MAA4B,iCAA5B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,6BAAvD;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,WAAW,EAAED,KAAK,CAACE,WAAN,CAAkBD;AADG,CAAZ,CAAxB;;AAIC,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACvCC,EAAAA,cAAc,EAAE,MAAOD,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,kBAAR;AAA2BL,IAAAA,WAAW,EAAC;AAAvC,GAAD;AADQ,CAAf,CAA3B;;AAIA,MAAMM,aAAa,GAAGlB,cAAc,CACnCS,WADmC,EAEnCC,eAFmC,EAGnCI,kBAHmC,CAApC;AAMD,eAAeI,aAAf,C,CAEC","sourcesContent":["import React from 'react';\r\nimport Navbar from '../components/layout/Navbar.js';\r\nimport HeadOne from '../components/layout/Head.js';\r\nimport Footer from '../components/layout/Footer.js'\r\nimport { connect, Provider } from 'react-redux';\r\nimport { DrizzleContext, DrizzleProvider, drizzleConnect  } from \"@drizzle/react-plugin\"; \r\nimport { ToastContainer } from 'react-toastify';   \r\nimport { generateStore } from \"@drizzle/store\";\r\nimport drizzleOptions  from \"../EthComponents/drizzleOptions\";\r\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\r\nimport rootSaga from '../middleware/sagas/fetchSaga';\r\nimport appSagas from '../middleware/sagas/rootSaga';\r\nimport reducer from '../middleware/reducers/appReducers.js'\r\nimport MyComponent from './innerInnerTestPage'\r\n\r\n\r\n\r\n// const InnerTestPage = ({ propAddress,getCurrentProp }) => {\r\n//   getCurrentProp()\r\n// return (\r\n\r\n//   <div>\r\n//  {console.log(propAddress)}\r\n//     <div>Hello</div>\r\n \r\n\r\n//   </div>\r\n//     );\r\n\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  propAddress: state.appReducers.propAddress\r\n })\r\n \r\n const mapDispatchToProps = (dispatch) => ({\r\n    getCurrentProp: () =>  dispatch({ type: \"GET_PROP_ADDRESS\",propAddress:3 })\r\n });\r\n\r\n const InnerTestPage = drizzleConnect(\r\n  MyComponent,\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)\r\n\r\nexport default InnerTestPage;\r\n \r\n //export default connect(mapStateToProps, mapDispatchToProps)(InnerTestPage);"]},"metadata":{},"sourceType":"module"}