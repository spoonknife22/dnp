{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\JoinForm.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Web3 from \"web3\";\nimport { toast } from 'react-toastify';\nimport JoinSubmitBtn from '../components/buttons/JoinSubmit';\nimport { drizzleConnect, DrizzleContext } from '@drizzle/react-plugin';\nimport PropTypes from 'prop-types';\n\nconst Input = ({\n  title,\n  value,\n  onChange\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, __jsx(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, title), __jsx(\"input\", {\n  className: \"form-control form-control-sm\",\n  value: value,\n  onChange: onChange,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n})); //export default class JoinForm extends React.Component {\n\n\nclass JoinForm extends React.Component {\n  constructor(props, context) {\n    super(props); //const contracts = context.drizzle.contracts;\n\n    _defineProperty(this, \"state\", {\n      username: \"\"\n    });\n\n    _defineProperty(this, \"check\", () => {\n      const {\n        drizzle\n      } = this.props;\n      let store = drizzle.store;\n      const checkMeta = store.dispatch({\n        type: \"CHECK_METAMASK_DONE\"\n      }); // this.setState(checkMeta )\n    });\n\n    _defineProperty(this, \"updateField\", (fieldName, e) => {\n      const newState = {};\n      newState[fieldName] = e.target.value;\n      this.setState(newState);\n    });\n\n    _defineProperty(this, \"createUser\", async e => {\n      e.preventDefault(); // Some quick validation checks\n\n      for (let key in this.state) {\n        if (!this.state[key]) {\n          return toast.error(\"You must fill in your \".concat(key, \"!\"), {\n            position: toast.POSITION.TOP_CENTER\n          });\n        }\n      }\n\n      const {\n        username\n      } = this.state;\n\n      try {\n        const {\n          drizzle\n        } = this.props;\n        let state = drizzle.store.getState();\n        const contract = drizzle.contracts.UserController;\n        const uName = Web3.utils.fromAscii(username);\n        contract.methods[\"createUser\"].cacheSend(uName);\n      } catch (err) {\n        toast.error(\"\".concat(err), {\n          position: toast.POSITION.TOP_CENTER\n        });\n      }\n    });\n  }\n\n  render() {\n    console.log(this.checkMeta); //const { store } = this.props;\n    //let state = drizzle.store.getState();\n    //let transactError = state.transaction.metaMaskReject;\n\n    return __jsx(\"div\", {\n      className: \"jsx-813449678\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, __jsx(\"form\", {\n      onSubmit: this.createUser,\n      className: \"jsx-813449678\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-813449678\" + \" \" + 'join-form-dialog modal-body',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      className: \"jsx-813449678\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Access the Crypto Asset Protocal to use a set of tools that help you take advantage passive investment stratigies\"), __jsx(Input, {\n      title: \"Desired Username\",\n      onChange: e => this.updateField(\"username\", e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"jsx-813449678\" + \" \" + \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      onclick: this.checkMeta,\n      className: \"jsx-813449678\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Button\"), __jsx(JoinSubmitBtn, {\n      drizzle: this.props.drizzle,\n      createUser: this.createUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }))), __jsx(_JSXStyle, {\n      id: \"813449678\",\n      __self: this\n    }, \".join-form-btn.jsx-813449678{font-family:Poppins;-webkit-letter-spacing:5.5px;-moz-letter-spacing:5.5px;-ms-letter-spacing:5.5px;letter-spacing:5.5px;}.join-form-dialog.jsx-813449678{font-family:Poppins;font-size:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxFdGhDb21wb25lbnRzXFxKb2luRm9ybS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRlMsQUFDc0MsQUFDYSxvQkFETyxBQUNRLGVBQUMsc0ZBRFIiLCJmaWxlIjoiQzpcXFVzZXJzXFxTYW1zdW5nXFxjb2RlXFxjYWNwXFxjbGllbnRcXEV0aENvbXBvbmVudHNcXEpvaW5Gb3JtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgV2ViMyBmcm9tIFwid2ViM1wiO1xyXG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gJ3JlYWN0LXRvYXN0aWZ5JztcclxuaW1wb3J0IEpvaW5TdWJtaXRCdG4gZnJvbSAnLi4vY29tcG9uZW50cy9idXR0b25zL0pvaW5TdWJtaXQnO1xyXG5pbXBvcnQgeyBkcml6emxlQ29ubmVjdCxEcml6emxlQ29udGV4dCB9IGZyb20gJ0Bkcml6emxlL3JlYWN0LXBsdWdpbidcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuXHJcblxyXG5cclxuY29uc3QgSW5wdXQgPSAoeyB0aXRsZSwgdmFsdWUsIG9uQ2hhbmdlIH0pID0+IChcclxuICA8ZGl2PlxyXG4gICAgPGxhYmVsPlxyXG4gICAgICB7dGl0bGV9XHJcbiAgICA8L2xhYmVsPlxyXG4gICAgPGlucHV0IGNsYXNzTmFtZT1cImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtc21cIiB2YWx1ZT17dmFsdWV9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz5cclxuICA8L2Rpdj5cclxuKSBcclxuXHJcbi8vZXhwb3J0IGRlZmF1bHQgY2xhc3MgSm9pbkZvcm0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5jbGFzcyBKb2luRm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgc3RhdGUgPSB7IHVzZXJuYW1lOlwiXCIsIH07XHJcbiAgY29uc3RydWN0b3IocHJvcHMsIGNvbnRleHQpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuXHJcbiAgLy9jb25zdCBjb250cmFjdHMgPSBjb250ZXh0LmRyaXp6bGUuY29udHJhY3RzO1xyXG4gIH1cclxuXHJcbiAgY2hlY2sgPSAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGRyaXp6bGUgfSA9IHRoaXMucHJvcHM7XHJcbiAgICBsZXQgc3RvcmUgPSBkcml6emxlLnN0b3JlO1xyXG4gICAgY29uc3QgY2hlY2tNZXRhID0gc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiBcIkNIRUNLX01FVEFNQVNLX0RPTkVcIiB9KVxyXG4gICAgLy8gdGhpcy5zZXRTdGF0ZShjaGVja01ldGEgKVxyXG4gIH1cclxuXHJcbnVwZGF0ZUZpZWxkID0gKGZpZWxkTmFtZSwgZSkgPT4ge1xyXG4gIGNvbnN0IG5ld1N0YXRlID0ge31cclxuICBuZXdTdGF0ZVtmaWVsZE5hbWVdID0gZS50YXJnZXQudmFsdWU7XHJcblxyXG4gIHRoaXMuc2V0U3RhdGUobmV3U3RhdGUpXHJcbn1cclxuXHJcbmNyZWF0ZVVzZXIgPSBhc3luYyAoZSkgPT4ge1xyXG4gIGUucHJldmVudERlZmF1bHQoKSBcclxuXHJcbiAgLy8gU29tZSBxdWljayB2YWxpZGF0aW9uIGNoZWNrc1xyXG4gIGZvciAobGV0IGtleSBpbiB0aGlzLnN0YXRlKSB7XHJcbiAgICBpZiAoIXRoaXMuc3RhdGVba2V5XSkge1xyXG4gICAgICByZXR1cm4gdG9hc3QuZXJyb3IoIGBZb3UgbXVzdCBmaWxsIGluIHlvdXIgJHtrZXl9IWAsIHsgcG9zaXRpb246IHRvYXN0LlBPU0lUSU9OLlRPUF9DRU5URVIgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGNvbnN0IHsgdXNlcm5hbWUgfSA9IHRoaXMuc3RhdGVcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBkcml6emxlIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgbGV0IHN0YXRlID0gZHJpenpsZS5zdG9yZS5nZXRTdGF0ZSgpO1xyXG4gICAgY29uc3QgY29udHJhY3QgPSBkcml6emxlLmNvbnRyYWN0cy5Vc2VyQ29udHJvbGxlcjtcclxuICAgIGNvbnN0IHVOYW1lID0gV2ViMy51dGlscy5mcm9tQXNjaWkodXNlcm5hbWUpO1xyXG4gICAgY29udHJhY3QubWV0aG9kc1tcImNyZWF0ZVVzZXJcIl0uY2FjaGVTZW5kKHVOYW1lKTtcclxuXHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICB0b2FzdC5lcnJvciggYCR7ZXJyfWAsIHsgcG9zaXRpb246IHRvYXN0LlBPU0lUSU9OLlRPUF9DRU5URVIgfSlcclxuIFxyXG4gIH1cclxufVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICBjb25zb2xlLmxvZyh0aGlzLmNoZWNrTWV0YSlcclxuICAgIC8vY29uc3QgeyBzdG9yZSB9ID0gdGhpcy5wcm9wcztcclxuICAgIC8vbGV0IHN0YXRlID0gZHJpenpsZS5zdG9yZS5nZXRTdGF0ZSgpO1xyXG4gICAgLy9sZXQgdHJhbnNhY3RFcnJvciA9IHN0YXRlLnRyYW5zYWN0aW9uLm1ldGFNYXNrUmVqZWN0O1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8Zm9ybSBvblN1Ym1pdD17dGhpcy5jcmVhdGVVc2VyfT5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nam9pbi1mb3JtLWRpYWxvZyBtb2RhbC1ib2R5Jz5cclxuICAgICAgICA8cD5BY2Nlc3MgdGhlIENyeXB0byBBc3NldCBQcm90b2NhbCB0byB1c2UgYSBzZXQgb2YgdG9vbHMgdGhhdCBoZWxwIHlvdSB0YWtlIGFkdmFudGFnZSBwYXNzaXZlIGludmVzdG1lbnQgc3RyYXRpZ2llczwvcD5cclxuICAgICAgICA8SW5wdXQgXHJcbiAgICAgICAgICB0aXRsZT1cIkRlc2lyZWQgVXNlcm5hbWVcIiBcclxuICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IHRoaXMudXBkYXRlRmllbGQoXCJ1c2VybmFtZVwiLCBlKX0gXHJcbiAgICAgICAgLz4gIFxyXG4gICAgICAgIDwvZGl2PiBcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWZvb3RlclwiPlxyXG4gICAgICAgICAgPGJ1dHRvbiBvbmNsaWNrPXt0aGlzLmNoZWNrTWV0YX0+QnV0dG9uPC9idXR0b24+XHJcbiAgICAgICAgICA8Sm9pblN1Ym1pdEJ0biBkcml6emxlPXt0aGlzLnByb3BzLmRyaXp6bGV9ICBjcmVhdGVVc2VyID0ge3RoaXMuY3JlYXRlVXNlcn0gLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9mb3JtPlxyXG4gIFxyXG4gICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgIHtgICAuam9pbi1mb3JtLWJ0biB7Zm9udC1mYW1pbHk6IFBvcHBpbnM7bGV0dGVyLXNwYWNpbmc6NS41cHg7fVxyXG4gICAgICAgICAgICAuam9pbi1mb3JtLWRpYWxvZyB7Zm9udC1mYW1pbHk6IFBvcHBpbnM7IGZvbnQtc2l6ZToxcmVtO31cclxuICAgICAgICBgfSAgICAgICAgICAgICAgICBcclxuICAgICAgPC9zdHlsZT5cclxuICAgIDwvZGl2PlxyXG4gICAgKVxyXG4gIH1cclxuICBcclxufVxyXG5cclxuLy8gSm9pbkZvcm0uY29udGV4dFR5cGVzID0ge1xyXG4vLyAgIGRyaXp6bGU6IFByb3BUeXBlcy5vYmplY3RcclxuLy8gfVxyXG4vLyBKb2luRm9ybS5jb250ZXh0VHlwZSA9IERyaXp6bGVDb250ZXh0LkNvbnRleHQ7XHJcblxyXG4vLyBjb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XHJcbi8vICAgcmV0dXJuIHtcclxuLy8gICAgIG9uTWV0YU1hc2tDaGVja0RvbmU6ICgpID0+IGRpc3BhdGNoKHsgdHlwZTogXCJDSEVDS19NRVRBTUFTS19ET05FXCIgfSksXHJcbi8vICAgICBvblR4RXJyb3JEb25lOiAoKSA9PiBkaXNwYXRjaCh7IHR5cGU6IFwiVFhfRVJST1JfTUVUQU1BU0tfRE9ORVwiIH0pLFxyXG4vLyAgICAgb25SZWRpcmVjdFRvSG9tZURvbmU6ICgpID0+IGRpc3BhdGNoKHsgdHlwZTogXCJSRURJUkVDVF9UT19IT01FX0RPTkVcIn0pXHJcbi8vICAgfTtcclxuLy8gfTtcclxuXHJcbi8vZXhwb3J0IGRlZmF1bHQgZHJpenpsZUNvbm5lY3QoSm9pbkZvcm0sbWFwRGlzcGF0Y2hUb1Byb3BzKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEpvaW5Gb3JtOyAiXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Samsung\\\\\\\\code\\\\\\\\cacp\\\\\\\\client\\\\\\\\EthComponents\\\\\\\\JoinForm.js */\"));\n  }\n\n} // JoinForm.contextTypes = {\n//   drizzle: PropTypes.object\n// }\n// JoinForm.contextType = DrizzleContext.Context;\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onMetaMaskCheckDone: () => dispatch({ type: \"CHECK_METAMASK_DONE\" }),\n//     onTxErrorDone: () => dispatch({ type: \"TX_ERROR_METAMASK_DONE\" }),\n//     onRedirectToHomeDone: () => dispatch({ type: \"REDIRECT_TO_HOME_DONE\"})\n//   };\n// };\n//export default drizzleConnect(JoinForm,mapDispatchToProps);\n\n\nexport default JoinForm;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/JoinForm.js"],"names":["React","Web3","toast","JoinSubmitBtn","drizzleConnect","DrizzleContext","PropTypes","Input","title","value","onChange","JoinForm","Component","constructor","props","context","username","drizzle","store","checkMeta","dispatch","type","fieldName","e","newState","target","setState","preventDefault","key","state","error","position","POSITION","TOP_CENTER","getState","contract","contracts","UserController","uName","utils","fromAscii","methods","cacheSend","err","render","console","log","createUser","updateField"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { toast } from 'react-toastify';\r\nimport JoinSubmitBtn from '../components/buttons/JoinSubmit';\r\nimport { drizzleConnect,DrizzleContext } from '@drizzle/react-plugin'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Input = ({ title, value, onChange }) => (\r\n  <div>\r\n    <label>\r\n      {title}\r\n    </label>\r\n    <input className=\"form-control form-control-sm\" value={value} onChange={onChange} />\r\n  </div>\r\n) \r\n\r\n//export default class JoinForm extends React.Component {\r\nclass JoinForm extends React.Component {\r\n  state = { username:\"\", };\r\n  constructor(props, context) {\r\n    super(props);\r\n\r\n  //const contracts = context.drizzle.contracts;\r\n  }\r\n\r\n  check = () => {\r\n    const { drizzle } = this.props;\r\n    let store = drizzle.store;\r\n    const checkMeta = store.dispatch({ type: \"CHECK_METAMASK_DONE\" })\r\n    // this.setState(checkMeta )\r\n  }\r\n\r\nupdateField = (fieldName, e) => {\r\n  const newState = {}\r\n  newState[fieldName] = e.target.value;\r\n\r\n  this.setState(newState)\r\n}\r\n\r\ncreateUser = async (e) => {\r\n  e.preventDefault() \r\n\r\n  // Some quick validation checks\r\n  for (let key in this.state) {\r\n    if (!this.state[key]) {\r\n      return toast.error( `You must fill in your ${key}!`, { position: toast.POSITION.TOP_CENTER });\r\n    }\r\n  }\r\n  const { username } = this.state\r\n  try {\r\n    const { drizzle } = this.props;\r\n    let state = drizzle.store.getState();\r\n    const contract = drizzle.contracts.UserController;\r\n    const uName = Web3.utils.fromAscii(username);\r\n    contract.methods[\"createUser\"].cacheSend(uName);\r\n\r\n  } catch (err) {\r\n    toast.error( `${err}`, { position: toast.POSITION.TOP_CENTER })\r\n \r\n  }\r\n}\r\n\r\n  render() {\r\n    console.log(this.checkMeta)\r\n    //const { store } = this.props;\r\n    //let state = drizzle.store.getState();\r\n    //let transactError = state.transaction.metaMaskReject;\r\n  return (\r\n    <div>\r\n      <form onSubmit={this.createUser}>\r\n        <div className='join-form-dialog modal-body'>\r\n        <p>Access the Crypto Asset Protocal to use a set of tools that help you take advantage passive investment stratigies</p>\r\n        <Input \r\n          title=\"Desired Username\" \r\n          onChange={e => this.updateField(\"username\", e)} \r\n        />  \r\n        </div> \r\n        <div className=\"modal-footer\">\r\n          <button onclick={this.checkMeta}>Button</button>\r\n          <JoinSubmitBtn drizzle={this.props.drizzle}  createUser = {this.createUser} />\r\n        </div>\r\n      </form>\r\n  \r\n      <style jsx>\r\n        {`  .join-form-btn {font-family: Poppins;letter-spacing:5.5px;}\r\n            .join-form-dialog {font-family: Poppins; font-size:1rem;}\r\n        `}                \r\n      </style>\r\n    </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n// JoinForm.contextTypes = {\r\n//   drizzle: PropTypes.object\r\n// }\r\n// JoinForm.contextType = DrizzleContext.Context;\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onMetaMaskCheckDone: () => dispatch({ type: \"CHECK_METAMASK_DONE\" }),\r\n//     onTxErrorDone: () => dispatch({ type: \"TX_ERROR_METAMASK_DONE\" }),\r\n//     onRedirectToHomeDone: () => dispatch({ type: \"REDIRECT_TO_HOME_DONE\"})\r\n//   };\r\n// };\r\n\r\n//export default drizzleConnect(JoinForm,mapDispatchToProps);\r\n\r\nexport default JoinForm; "]},"metadata":{},"sourceType":"module"}