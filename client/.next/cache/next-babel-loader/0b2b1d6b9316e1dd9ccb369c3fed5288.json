{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\pages\\\\testpage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Navbar from '../components/layout/Navbar.js';\nimport HeadOne from '../components/layout/Head.js';\nimport Footer from '../components/layout/Footer.js';\nimport { connect, Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";\nimport { ToastContainer } from 'react-toastify';\nimport { generateStore, generateContractsInitialState } from \"@drizzle/store\";\nimport drizzleOptions from \"../EthComponents/drizzleOptions\";\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare'; //import rootSaga from '../middleware/sagas/fetchSaga';\n//import appSagas from '../middleware/sagas/rootSaga';\n\nimport rootSaga from '../middleware/sagas/fetchSaga';\nimport reducer from '../middleware/reducers/appReducers.js';\nimport App from './innerTestPage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport PropTypes from 'prop-types';\nconst contractEventNotifier = contractEventSaga;\nconst joinTransactionComplete = joinTransactionSaga;\nconst appMiddlewares = [contractEventNotifier(), joinTransactionComplete];\nconst appReducers = {\n  appReducers: reducer\n};\nconst appSagas = [rootSaga];\nconst initialState = {\n  contracts: generateContractsInitialState(drizzleOptions)\n}; //const sagaMiddleware = createSagaMiddleware();\n//const allMiddlewares = [...appMiddlewares, sagaMiddleware];\n\nconst store = generateStore({\n  appReducers,\n  initialState,\n  appSagas\n}); //sagaMiddleware.run(rootSaga);\n\nclass TestPage extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(DrizzleProvider, {\n      options: drizzleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default TestPage;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/pages/testpage.js"],"names":["React","Navbar","HeadOne","Footer","connect","Provider","createStore","applyMiddleware","compose","DrizzleContext","DrizzleProvider","ToastContainer","generateStore","generateContractsInitialState","drizzleOptions","contractEventSaga","joinTransactionSaga","rootSaga","reducer","App","composeWithDevTools","createSagaMiddleware","PropTypes","contractEventNotifier","joinTransactionComplete","appMiddlewares","appReducers","appSagas","initialState","contracts","store","TestPage","Component","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,uBAAhD;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAT,EAAwBC,6BAAxB,QAA6D,gBAA7D;AACA,OAAOC,cAAP,MAA4B,iCAA5B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,6BAAvD,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,MAAMC,qBAAqB,GAAGR,iBAA9B;AACA,MAAMS,uBAAuB,GAAGR,mBAAhC;AACA,MAAMS,cAAc,GAAG,CAAEF,qBAAqB,EAAvB,EAA2BC,uBAA3B,CAAvB;AACA,MAAME,WAAW,GAAG;AAACA,EAAAA,WAAW,EAAER;AAAd,CAApB;AACA,MAAMS,QAAQ,GAAG,CAACV,QAAD,CAAjB;AAEA,MAAMW,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAEhB,6BAA6B,CAACC,cAAD;AADrB,CAArB,C,CAIA;AAEA;;AAEA,MAAMgB,KAAK,GAAGlB,aAAa,CAAC;AAC1Bc,EAAAA,WAD0B;AAEtBE,EAAAA,YAFsB;AAGtBD,EAAAA;AAHsB,CAAD,CAA3B,C,CAMA;;AAEA,MAAMI,QAAN,SAAuB/B,KAAK,CAACgC,SAA7B,CAAuC;AAGrCC,EAAAA,MAAM,GAAG;AACP,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEnB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CAFF;AAYD;;AAhBoC;;AAqBvC,eAAeiB,QAAf","sourcesContent":["import React from 'react';\r\nimport Navbar from '../components/layout/Navbar.js';\r\nimport HeadOne from '../components/layout/Head.js';\r\nimport Footer from '../components/layout/Footer.js'\r\nimport { connect, Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\"; \r\nimport { ToastContainer } from 'react-toastify';   \r\nimport { generateStore, generateContractsInitialState } from \"@drizzle/store\";\r\nimport drizzleOptions  from \"../EthComponents/drizzleOptions\";\r\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\r\n//import rootSaga from '../middleware/sagas/fetchSaga';\r\n//import appSagas from '../middleware/sagas/rootSaga';\r\nimport rootSaga from '../middleware/sagas/fetchSaga';\r\nimport reducer from '../middleware/reducers/appReducers.js'\r\nimport App from './innerTestPage';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport PropTypes from 'prop-types'\r\nconst contractEventNotifier = contractEventSaga;\r\nconst joinTransactionComplete = joinTransactionSaga;\r\nconst appMiddlewares = [ contractEventNotifier(), joinTransactionComplete ];\r\nconst appReducers = {appReducers: reducer};\r\nconst appSagas = [rootSaga];\r\n\r\nconst initialState = {\r\n  contracts: generateContractsInitialState(drizzleOptions)\r\n};\r\n\r\n//const sagaMiddleware = createSagaMiddleware();\r\n\r\n//const allMiddlewares = [...appMiddlewares, sagaMiddleware];\r\n\r\nconst store = generateStore({\r\n  appReducers,\r\n      initialState,\r\n      appSagas\r\n});\r\n\r\n//sagaMiddleware.run(rootSaga);\r\n\r\nclass TestPage extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n     \r\n      <div>\r\n           {/* <DrizzleContext.Provider> */}\r\n        <DrizzleProvider options={drizzleOptions} >\r\n \r\n          <App />\r\n    \r\n        </DrizzleProvider>\r\n        {/* </DrizzleContext.Provider> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}