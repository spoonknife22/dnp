{"ast":null,"code":"import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\nconst GOT_TOKEN_ID = 'GOT_TOKEN_ID';\n\nfunction* txSuccessful() {\n  console.log('hi');\n}\n\nfunction* fetchTokenId() {\n  console.log('hello'); //yield put({ type: GOT_TOKEN_ID,tokenId:33 })\n  //toast.info('hi', { position: toast.POSITION.TOP_RIGHT })\n}\n\nfunction* tokenSaga() {\n  yield takeEvery('GOT_TOKEN_ID', fetchTokenId);\n}\n\nfunction* txSaga() {\n  yield takeEvery('TX_SUCCESSFUL', txSuccessful);\n}\n\nconst appSagas = [{\n  txSaga,\n  tokenSaga\n}];\nexport default appSagas;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/appSagas.js"],"names":["all","fork","takeLatest","put","call","take","race","select","takeEvery","toast","TX_PROCESSING_DONE","GOT_TOKEN_ID","txSuccessful","console","log","fetchTokenId","tokenSaga","txSaga","appSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+DC,SAA/D,QAAgF,oBAAhF;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,YAAY,GAAG,cAArB;;AAGA,UAAUC,YAAV,GAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AAGD,UAAUC,YAAV,GAAyB;AACvBF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADuB,CAEvB;AACE;AACF;;AAED,UAAUE,SAAV,GAAuB;AACtB,QAAMR,SAAS,CAAC,cAAD,EAAiBO,YAAjB,CAAf;AACD;;AAED,UAAUE,MAAV,GAAoB;AAClB,QAAMT,SAAS,CAAC,eAAD,EAAkBI,YAAlB,CAAf;AACD;;AAID,MAAMM,QAAQ,GAAG,CAAC;AAClBD,EAAAA,MADkB;AAElBD,EAAAA;AAFkB,CAAD,CAAjB;AAKA,eAAeE,QAAf","sourcesContent":["import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TX_PROCESSING_DONE = \"TX_PROCESSING_DONE\";\r\nconst GOT_TOKEN_ID = 'GOT_TOKEN_ID';\r\n \r\n\r\nfunction* txSuccessful() {\r\n  console.log('hi')\r\n}\r\n\r\n\r\nfunction* fetchTokenId() {\r\n  console.log('hello')\r\n  //yield put({ type: GOT_TOKEN_ID,tokenId:33 })\r\n    //toast.info('hi', { position: toast.POSITION.TOP_RIGHT })\r\n }\r\n\r\n function* tokenSaga () {\r\n  yield takeEvery('GOT_TOKEN_ID', fetchTokenId)\r\n}\r\n\r\nfunction* txSaga () {\r\n  yield takeEvery('TX_SUCCESSFUL', txSuccessful);\r\n}\r\n\r\n\r\n\r\nconst appSagas = [{\r\ntxSaga,\r\ntokenSaga}\r\n];\r\n\r\nexport default appSagas;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}