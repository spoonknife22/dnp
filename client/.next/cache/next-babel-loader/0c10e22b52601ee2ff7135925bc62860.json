{"ast":null,"code":"import { generateStore, EventActions, drizzleReducers } from '@drizzle/store';\nimport drizzleOptions from '../drizzleOptions';\nimport { toast } from 'react-toastify';\nimport { contractEventSaga, joinTransactionSaga } from './capSagas'; // const appReducers = { todos: todosReducer }\n// const appSagas = [appRootSaga]\n\nconst contractEventNotifier = contractEventSaga;\nconst joinTransactionNotifier = joinTransactionSaga; //const joinTransactionNotifier = [joinTransactionSaga];\n// const contractEventNotifier = store => next => action => {\n//   if (action.type === EventActions.EVENT_FIRED) {\n//     const message = action.event.returnValues._message\n//     const display = `${message}`\n//     toast.success(display, { position: toast.POSITION.BOTTOM_RIGHT })\n//   }\n//   return next(action)\n// }\n// const joinTransactionNotifier = store => next => action => {\n//   if (action.type === 'TX_SUCCESSFUL') {\n//     const broadcast = action.txHash\n//     //const txStatus = action.event.event\n//     const message = action.receipt\n//     console.log({broadcast})\n//     const display = `${broadcast}`\n//     toast.success(display, { position: toast.POSITION.BOTTOM_LEFT })\n//   }\n//   return next(action)\n// }\n\nconst appMiddlewares = [contractEventNotifier, joinTransactionNotifier];\nconst store = generateStore({\n  drizzleOptions,\n  appMiddlewares,\n  disableReduxDevTools: false // enable ReduxDevTools!\n\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/middleware/index.js"],"names":["generateStore","EventActions","drizzleReducers","drizzleOptions","toast","contractEventSaga","joinTransactionSaga","contractEventNotifier","joinTransactionNotifier","appMiddlewares","store","disableReduxDevTools"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,eAAtC,QAA6D,gBAA7D;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,YAAvD,C,CAEA;AACA;;AAEA,MAAMC,qBAAqB,GAAGF,iBAA9B;AAEA,MAAMG,uBAAuB,GAAGF,mBAAhC,C,CACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMG,cAAc,GAAG,CAAEF,qBAAF,EAAyBC,uBAAzB,CAAvB;AAEA,MAAME,KAAK,GAAGV,aAAa,CAAC;AAC1BG,EAAAA,cAD0B;AAE1BM,EAAAA,cAF0B;AAG1BE,EAAAA,oBAAoB,EAAE,KAHI,CAGG;;AAHH,CAAD,CAA3B;AAMA,eAAeD,KAAf","sourcesContent":["import { generateStore, EventActions, drizzleReducers } from '@drizzle/store'\r\nimport drizzleOptions from '../drizzleOptions'\r\nimport { toast } from 'react-toastify'\r\nimport { contractEventSaga, joinTransactionSaga } from './capSagas';\r\n\r\n// const appReducers = { todos: todosReducer }\r\n// const appSagas = [appRootSaga]\r\n\r\nconst contractEventNotifier = contractEventSaga;\r\n\r\nconst joinTransactionNotifier = joinTransactionSaga;\r\n//const joinTransactionNotifier = [joinTransactionSaga];\r\n\r\n// const contractEventNotifier = store => next => action => {\r\n//   if (action.type === EventActions.EVENT_FIRED) {\r\n//     const message = action.event.returnValues._message\r\n//     const display = `${message}`\r\n \r\n//     toast.success(display, { position: toast.POSITION.BOTTOM_RIGHT })\r\n//   }\r\n//   return next(action)\r\n// }\r\n\r\n// const joinTransactionNotifier = store => next => action => {\r\n//   if (action.type === 'TX_SUCCESSFUL') {\r\n//     const broadcast = action.txHash\r\n//     //const txStatus = action.event.event\r\n//     const message = action.receipt\r\n//     console.log({broadcast})\r\n//     const display = `${broadcast}`\r\n \r\n//     toast.success(display, { position: toast.POSITION.BOTTOM_LEFT })\r\n//   }\r\n//   return next(action)\r\n// }\r\n\r\nconst appMiddlewares = [ contractEventNotifier, joinTransactionNotifier ]\r\n\r\nconst store = generateStore({\r\n  drizzleOptions,\r\n  appMiddlewares,\r\n  disableReduxDevTools: false  // enable ReduxDevTools!\r\n})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}