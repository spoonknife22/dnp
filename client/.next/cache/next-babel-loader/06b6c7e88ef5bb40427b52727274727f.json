{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\cards\\\\NominateAssetCards.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '../../components/Pagination';\nimport Nominations from '../../components/Nominations'; //import Moment from \"react-moment\";\n\nimport moment from \"moment\";\nimport { Card } from 'react-bootstrap';\n\nconst NominationAssetCards = ({\n  props,\n  userManaBalance,\n  ordersActive\n}) => {\n  _s();\n\n  const _useState = useState([]),\n        orders = _useState[0],\n        setOrders = _useState[1];\n\n  const _useState2 = useState(false),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(1),\n        currentPage = _useState3[0],\n        setCurrentPage = _useState3[1];\n\n  const _useState4 = useState(6),\n        parcelsPerPage = _useState4[0];\n\n  const _useState5 = useState(),\n        totalOrders = _useState5[0],\n        setTotalOrders = _useState5[1];\n\n  console.log(ordersActive);\n  const nowUnix = moment().valueOf();\n  ;\n  useEffect(() => {\n    const fetchParcels = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              setOrders(ordersActive);\n              setTotalOrders(ordersActive.length);\n              setLoading(false);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchParcels() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchParcels();\n  }, []); // Get current orders\n\n  const indexOfLastParcel = currentPage * parcelsPerPage;\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\n  const currentParcels = orders.slice(indexOfFirstParcel, indexOfLastParcel); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(React.Fragment, null, __jsx(Nominations, {\n    orders: currentParcels,\n    loading: loading,\n    props: props,\n    userManaBalance: userManaBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    currentPage: currentPage,\n    parcelsPerPage: parcelsPerPage,\n    totalParcels: totalOrders,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }\n  }));\n};\n\n_s(NominationAssetCards, \"bJyDl1LdBflfhvAVAPwVI64uMwY=\");\n\n_c = NominationAssetCards;\nexport default NominationAssetCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NominationAssetCards\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/cards/NominateAssetCards.js"],"names":["React","useState","useEffect","Pagination","Nominations","moment","Card","NominationAssetCards","props","userManaBalance","ordersActive","orders","setOrders","loading","setLoading","currentPage","setCurrentPage","parcelsPerPage","totalOrders","setTotalOrders","console","log","nowUnix","valueOf","fetchParcels","length","indexOfLastParcel","indexOfFirstParcel","currentParcels","slice","paginate","pageNumber"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,eAAT;AAA0BC,EAAAA;AAA1B,CAAD,KAA8C;AAAA;;AAAA,oBAE7CT,QAAQ,CAAC,EAAD,CAFqC;AAAA,QAElEU,MAFkE;AAAA,QAE1DC,SAF0D;;AAAA,qBAG3CX,QAAQ,CAAC,KAAD,CAHmC;AAAA,QAGlEY,OAHkE;AAAA,QAGzDC,UAHyD;;AAAA,qBAInCb,QAAQ,CAAC,CAAD,CAJ2B;AAAA,QAIlEc,WAJkE;AAAA,QAIrDC,cAJqD;;AAAA,qBAKhDf,QAAQ,CAAC,CAAD,CALwC;AAAA,QAKlEgB,cALkE;;AAAA,qBAMnChB,QAAQ,EAN2B;AAAA,QAMlEiB,WANkE;AAAA,QAMrDC,cANqD;;AAOzEC,EAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACA,QAAMY,OAAO,GAAGjB,MAAM,GAAGkB,OAAT,EAAhB;AAAmC;AAEnCrB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,YAAY;AAAA,0EAAG;AAAA;AAAA;AAAA;AACrBZ,cAAAA,SAAS,CAACF,YAAD,CAAT;AACAS,cAAAA,cAAc,CAACT,YAAY,CAACe,MAAd,CAAd;AACAX,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZU,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAKFA,IAAAA,YAAY;AACb,GAPU,EAOR,EAPQ,CAAT,CAVyE,CAqBzE;;AACA,QAAME,iBAAiB,GAAGX,WAAW,GAAGE,cAAxC;AACA,QAAMU,kBAAkB,GAAGD,iBAAiB,GAAGT,cAA/C;AACA,QAAMW,cAAc,GAAGjB,MAAM,CAACkB,KAAP,CAAaF,kBAAb,EAAiCD,iBAAjC,CAAvB,CAxByE,CA0BzE;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIf,cAAc,CAACe,UAAD,CAA7C;;AAEA,SACE,4BACE,MAAC,WAAD;AACE,IAAA,MAAM,EAAEH,cADV;AAEE,IAAA,OAAO,EAAEf,OAFX;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,eAAe,EAAEC,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOG,MAAC,UAAD;AACC,IAAA,WAAW,EAAGM,WADf;AAEC,IAAA,cAAc,EAAEE,cAFjB;AAGC,IAAA,YAAY,EAAEC,WAHf;AAIC,IAAA,QAAQ,EAAEY,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,CADF;AAgBD,CA7CD;;GAAMvB,oB;;KAAAA,oB;AAgDN,eAAeA,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport Nominations from '../../components/Nominations'\r\n//import Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst NominationAssetCards = ({ props, userManaBalance, ordersActive }) => {\r\n  \r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [parcelsPerPage] = useState(6);\r\n  const [totalOrders, setTotalOrders] = useState();\r\n  console.log(ordersActive)\r\n  const nowUnix = moment().valueOf();;\r\n\r\n  useEffect(() => {\r\n    const fetchParcels = async () => {\r\n    setOrders(ordersActive);\r\n    setTotalOrders(ordersActive.length)\r\n    setLoading(false); \r\n  }\r\n  fetchParcels();  \r\n}, []);\r\n\r\n\r\n\r\n  // Get current orders\r\n  const indexOfLastParcel = currentPage * parcelsPerPage;\r\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\r\n  const currentParcels = orders.slice(indexOfFirstParcel, indexOfLastParcel);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (   \r\n    <>\r\n      <Nominations \r\n        orders={currentParcels} \r\n        loading={loading} \r\n        props={props}   \r\n        userManaBalance={userManaBalance}\r\n      />\r\n       <Pagination\r\n        currentPage ={currentPage }\r\n        parcelsPerPage={parcelsPerPage}\r\n        totalParcels={totalOrders}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default NominationAssetCards;\r\n\r\n"]},"metadata":{},"sourceType":"module"}