{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\ProposalForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // import {Col, Button} from 'react-bootstrap'\n\nimport { Col } from \"shards-react\";\nimport { toast } from 'react-toastify';\nimport NominationButton from '../buttons/NominateButton';\n\nconst ProposalForm = ({\n  drizzle,\n  drizzleState,\n  props,\n  onSetDrizzleState,\n  tokenId,\n  assetPrice\n}) => {\n  // const {  drizzle, drizzleState } = props;\n  // const[drizzleStateSet, setDrizzle] = useState(drizzle);\n  // onSetDrizzleState(drizzleStateSet);\n  const nominateAsset = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var text, reSalePrice, listPrice, account, memberBool, user, userId, contract;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            text = values.text, reSalePrice = values.reSalePrice;\n            listPrice = assetPrice;\n            account = drizzleState.accounts[0];\n            _context.next = 5;\n            return drizzle.contracts.UserStorage.methods.addresses(account).call();\n\n          case 5:\n            memberBool = _context.sent;\n\n            if (!memberBool) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 9;\n            return drizzle.contracts.UserStorage.methods.profiles(account).call();\n\n          case 9:\n            user = _context.sent;\n            userId = user.userId;\n            _context.next = 13;\n            return drizzle.contracts.ProposalController;\n\n          case 13:\n            contract = _context.sent;\n            _context.prev = 14;\n            contract.methods[\"createProposal\"].cacheSend(userId, listPrice, reSalePrice, text, tokenId);\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](14);\n            return _context.abrupt(\"return\", toast.error(\"Sorry, we couldn't create asset nomination: \".concat(_context.t0), {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 21:\n            _context.next = 24;\n            break;\n\n          case 23:\n            return _context.abrupt(\"return\", toast.warning(\"Join the Consortium and nominate this asset\", {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[14, 18]]);\n    }));\n\n    return function nominateAsset(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  let yup = require('yup');\n\n  const schema = yup.object({\n    text: yup.string().max(100, 'To many characters').required('Required'),\n    reSalePrice: yup.number().typeError(\"Must be a number\").moreThan(2000, 'Must be more than current price.').required('Required'),\n    termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\n  });\n  console.log(props.propAddress);\n  return __jsx(React.Fragment, null, __jsx(Formik, {\n    initialValues: {\n      text: '',\n      reSalePrice: '',\n      termsOfService: false\n    },\n    validationSchema: schema,\n    onSubmit: (values, actions) => {\n      nominateAsset(values);\n      actions.resetForm();\n      addReview(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, ({\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    touched,\n    errors\n  }) => __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationFormik01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Pitch\"), __jsx(Form.Control, {\n    type: \"text\",\n    as: \"textarea\",\n    rows: 3,\n    name: \"text\",\n    placeholder: \"100 Character Max\",\n    value: values.text,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isValid: values.text,\n    isInvalid: touched.text && !!errors.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, errors.text)), __jsx(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"validationFormik02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Resale Price\"), __jsx(Form.Control, {\n    type: \"text\",\n    name: \"reSalePrice\",\n    placeholder: \"Resale Price\",\n    value: values.reSalePrice,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.reSalePrice && !!errors.reSalePrice,\n    isValid: values.reSalePrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, errors.reSalePrice))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Check, {\n    required: true,\n    name: \"termsOfService\",\n    label: \"Agree to terms and conditions\",\n    onChange: handleChange,\n    isInvalid: !!errors.termsOfService,\n    feedback: errors.termsOfService,\n    id: \"validationFormik0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(NominationButton, {\n    props: props,\n    tokenId: tokenId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  })))));\n};\n\n_c = ProposalForm;\n\nconst mapStateToProps = state => ({\n  //tokenIdState: state.reducer.appReducers.tokenId,\n  propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({//onSetDrizzleState: (drizzleStateSet) => dispatch({ type: \"SET_DRIZZLE_STATE\", drizzle: drizzleStateSet }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm); //export default ProposalForm;      \n\nvar _c;\n\n$RefreshReg$(_c, \"ProposalForm\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/ProposalForm.js"],"names":["React","useState","useEffect","Modal","connect","Form","Formik","Yup","Col","toast","NominationButton","ProposalForm","drizzle","drizzleState","props","onSetDrizzleState","tokenId","assetPrice","nominateAsset","values","text","reSalePrice","listPrice","account","accounts","contracts","UserStorage","methods","addresses","call","memberBool","profiles","user","userId","ProposalController","contract","cacheSend","error","position","POSITION","TOP_RIGHT","warning","yup","require","schema","object","string","max","required","number","typeError","moreThan","termsOfService","bool","oneOf","console","log","propAddress","actions","resetForm","addReview","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Formik} from 'formik';\r\nimport  * as Yup from 'yup';\r\n// import {Col, Button} from 'react-bootstrap'\r\nimport { Col } from \"shards-react\";\r\nimport { toast } from 'react-toastify';\r\nimport NominationButton from '../buttons/NominateButton';\r\n\r\nconst ProposalForm = ({ drizzle, drizzleState, props, onSetDrizzleState, tokenId, assetPrice }) => {\r\n  \r\n  // const {  drizzle, drizzleState } = props;\r\n  // const[drizzleStateSet, setDrizzle] = useState(drizzle);\r\n  // onSetDrizzleState(drizzleStateSet);\r\n\r\n \r\n\r\n  const nominateAsset = async (values) => {\r\n      \r\n    const { text, reSalePrice } = values;\r\n    const listPrice = assetPrice;\r\n    const account = drizzleState.accounts[0];\r\n    const memberBool = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n   \r\n    if(memberBool) {\r\n      const user = await drizzle.contracts.UserStorage.methods.profiles(account).call();\r\n      const { userId } = user;\r\n      const contract = await drizzle.contracts.ProposalController;\r\n    try {\r\n      contract.methods[\"createProposal\"].cacheSend(userId, listPrice, reSalePrice, text, tokenId );\r\n \r\n    } catch (err) {\r\n        return toast.error(`Sorry, we couldn't create asset nomination: ${err}`,{ position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n    else {\r\n      return toast.warning( `Join the Consortium and nominate this asset`, { position: toast.POSITION.TOP_RIGHT });\r\n  }\r\n}\r\n\r\n\r\nlet yup = require('yup');\r\nconst schema = yup.object({\r\n  text: yup.string()\r\n  .max(100, 'To many characters')\r\n  .required('Required'),\r\n  reSalePrice: yup.number()\r\n  .typeError(\"Must be a number\")\r\n  .moreThan(2000, 'Must be more than current price.')\r\n  .required('Required'),\r\n  termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\n\r\nconsole.log(props.propAddress)\r\nreturn (   \r\n    <> \r\n      <Formik\r\n        initialValues={{\r\n        text: '',\r\n        reSalePrice: '',\r\n        termsOfService:false,\r\n        }}\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n        nominateAsset(values);\r\n        actions.resetForm();\r\n        addReview(values);\r\n      }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n                <Form.Label>Pitch</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  as=\"textarea\" \r\n                  rows={3}\r\n                  name=\"text\"\r\n                  placeholder='100 Character Max'\r\n                  value={values.text}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={values.text}\r\n                  isInvalid={touched.text && !!errors.text}\r\n                  />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.text}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                <Form.Label>Resale Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\" \r\n                  name=\"reSalePrice\"\r\n                  placeholder=\"Resale Price\"\r\n                  value={values.reSalePrice}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.reSalePrice && !!errors.reSalePrice}\r\n                  isValid={values.reSalePrice}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">  \r\n                {errors.reSalePrice}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Group>\r\n              <Form.Check\r\n                required\r\n                name=\"termsOfService\"\r\n                label=\"Agree to terms and conditions\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.termsOfService}\r\n                feedback={errors.termsOfService}\r\n                id=\"validationFormik0\"\r\n              />\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n              <NominationButton props={props} tokenId={tokenId} />\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );    \r\n} \r\n\r\n  const mapStateToProps = (state) => ({\r\n    //tokenIdState: state.reducer.appReducers.tokenId,\r\n    propAddress: state.appReducers.propAddress,\r\n  })\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n  //onSetDrizzleState: (drizzleStateSet) => dispatch({ type: \"SET_DRIZZLE_STATE\", drizzle: drizzleStateSet }),\r\n  });\r\n        \r\n        \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalForm);\r\n\r\n    //export default ProposalForm;      "]},"metadata":{},"sourceType":"module"}