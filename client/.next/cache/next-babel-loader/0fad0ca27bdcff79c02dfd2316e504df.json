{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { EventActions } from \"@drizzle/store\";\nimport { toast } from 'react-toastify';\nconst GET_PROP_ADDRESS = 'GET_PROP_ADDRESS';\nexport const joinTransactionSaga = store => next => action => {\n  if (action.type === \"TX_BROADCASTED\") {\n    store.dispatch({\n      type: \"TX_PROCESSING\"\n    });\n  }\n\n  if (action.type === \"TX_SUCCESSFUL\") {\n    const transactionHash = action.txHash;\n    const transactionNumber = \"\".concat(transactionHash);\n    store.dispatch({\n      type: \"TX_PROCESSING_DONE\"\n    });\n    toast(transactionNumber, {\n      position: toast.POSITION.BOTTOM_LEFT,\n      className: 'successful-transaction'\n    });\n  }\n\n  return next(action);\n};\nexport const depositCurrency = store => next => /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(action) {\n    var _store$getState, transactions, transactionStack, appReducers, contracts, drizzleStatus, accounts, account, convertedContribution, propAddress, stackId, drizzle, state, txHash, propContract;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(action.type === \"GOT_STACK_ID\")) {\n            _context.next = 18;\n            break;\n          }\n\n          _store$getState = store.getState(), transactions = _store$getState.transactions, transactionStack = _store$getState.transactionStack, appReducers = _store$getState.appReducers, contracts = _store$getState.contracts, drizzleStatus = _store$getState.drizzleStatus, accounts = _store$getState.accounts;\n          account = accounts[0];\n          convertedContribution = action.convertedContribution, propAddress = action.propAddress, stackId = action.stackId, drizzle = action.drizzle;\n          state = drizzle.store.getState();\n\n          if (!state.transactionStack[stackId]) {\n            _context.next = 18;\n            break;\n          }\n\n          txHash = transactionStack[stackId];\n\n          if (txHash) {\n            _context.next = 11;\n            break;\n          }\n\n          return _context.abrupt(\"return\", console.log(\"!txHash capMiddleWare 32\"));\n\n        case 11:\n          _context.next = 13;\n          return contracts[\"\".concat(propAddress)];\n\n        case 13:\n          propContract = _context.sent;\n          console.log(propContract);\n          propContract.methods[\"contribute\"].cacheSend(convertedContribution, {\n            from: \"\".concat(account),\n            gas: 3000000\n          });\n          toast('you', {\n            position: toast.POSITION.BOTTOM_LEFT,\n            className: 'successful-stackId'\n          });\n\n        case 17:\n          return _context.abrupt(\"return\", console.log(\"loading from capMiddleWare 49\"));\n\n        case 18:\n          return _context.abrupt(\"return\", next(action));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const contractEventSaga = lastSeenEventId => store => next => action => {\n  if (action.type === EventActions.EVENT_FIRED) {\n    if (action.event.id !== lastSeenEventId) {\n      lastSeenEventId = action.event.id;\n      const message = action.event.returnValues._message;\n      const display = \"\".concat(message);\n\n      if (action.event.event === \"ContributionSuccess\") {\n        const poolDepth = action.event.returnValues.currentContractBalance;\n        store.dispatch({\n          type: \"PROPOSAL_BALANCE\",\n          balance: \"\".concat(poolDepth)\n        });\n      }\n\n      if (action.event.event === \"AssetNomination\") {\n        const propAddress = action.event.returnValues._proposalAddress;\n        const proposalAddress = \"\".concat(propAddress);\n        store.dispatch({\n          type: \"GOT_PROP_ADDRESS\",\n          proposalAddress: proposalAddress\n        });\n      }\n\n      toast.info(display, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n\n  return next(action);\n};","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/capMiddleWare.js"],"names":["EventActions","toast","GET_PROP_ADDRESS","joinTransactionSaga","store","next","action","type","dispatch","transactionHash","txHash","transactionNumber","position","POSITION","BOTTOM_LEFT","className","depositCurrency","getState","transactions","transactionStack","appReducers","contracts","drizzleStatus","accounts","account","convertedContribution","propAddress","stackId","drizzle","state","console","log","propContract","methods","cacheSend","from","gas","contractEventSaga","lastSeenEventId","EVENT_FIRED","event","id","message","returnValues","_message","display","poolDepth","currentContractBalance","balance","_proposalAddress","proposalAddress","info","TOP_RIGHT"],"mappings":"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","sourcesContent":["import { EventActions } from \"@drizzle/store\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst GET_PROP_ADDRESS ='GET_PROP_ADDRESS';\r\n\r\nexport const joinTransactionSaga = store => next => action => {\r\n  if (action.type === \"TX_BROADCASTED\") {\r\n    store.dispatch({type:\"TX_PROCESSING\"})\r\n  }\r\n  if (action.type === \"TX_SUCCESSFUL\") { \r\n    const transactionHash = action.txHash\r\n    const transactionNumber = `${transactionHash}`\r\n    store.dispatch({type:\"TX_PROCESSING_DONE\"})\r\n    toast(transactionNumber, { position: toast.POSITION.BOTTOM_LEFT,className:'successful-transaction' })\r\n  }\r\n  return next(action)\r\n}\r\n\r\n\r\n\r\nexport const depositCurrency = store => next => async (action) => {\r\n  if (action.type === \"GOT_STACK_ID\") {\r\n    const { transactions, transactionStack, appReducers, contracts, drizzleStatus, accounts } = store.getState();\r\n    const account = accounts[0];\r\n    const { convertedContribution, propAddress, stackId, drizzle } = action;\r\n    let state = drizzle.store.getState();\r\n\r\n    if (state.transactionStack[stackId]) {\r\n      const txHash = transactionStack[stackId];\r\n      if (!txHash) {\r\n        return(\r\n          console.log(\"!txHash capMiddleWare 32\")\r\n        )\r\n      }\r\n      else {\r\n        const propContract = await contracts[`${propAddress}`];\r\n        console.log(propContract)\r\n        propContract.methods[\"contribute\"].cacheSend(convertedContribution,{from:`${account}`, gas:3000000}) \r\n        toast('you', { position: toast.POSITION.BOTTOM_LEFT,className:'successful-stackId' })\r\n      }\r\n      return(\r\n        console.log(\"loading from capMiddleWare 49\")\r\n      )\r\n    }\r\n   \r\n  }\r\n  return next(action)\r\n}\r\n\r\nexport const contractEventSaga = lastSeenEventId => store => next => action => {\r\n  if (action.type === EventActions.EVENT_FIRED) {\r\n    if (action.event.id !== lastSeenEventId) {\r\n      lastSeenEventId = action.event.id\r\n       const message = action.event.returnValues._message\r\n       const display = `${message}`\r\n       if(action.event.event === \"ContributionSuccess\"){\r\n        const poolDepth = action.event.returnValues.currentContractBalance\r\n        store.dispatch({type:\"PROPOSAL_BALANCE\", balance:`${poolDepth}`})\r\n       }\r\n       if(action.event.event === \"AssetNomination\"){\r\n        const propAddress = action.event.returnValues._proposalAddress\r\n        const proposalAddress = `${propAddress}`\r\n        store.dispatch({type:\"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress})\r\n        }\r\n       toast.info(display, { position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n  return next(action)\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}