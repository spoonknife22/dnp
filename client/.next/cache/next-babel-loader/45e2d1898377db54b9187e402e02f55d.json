{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\";\n\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2({\n    props,\n    gotContractBalance,\n    gotPropContract,\n    proposalStorageAbi\n  }) {\n    var drizzleState, drizzle, propAddress, tokenId, assetPrice, state, web3, fetchProposalAddress;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          drizzleState = props.drizzleState, drizzle = props.drizzle, propAddress = props.propAddress, tokenId = props.tokenId, assetPrice = props.assetPrice;\n          state = drizzle.store.getState();\n          web3 = new Web3(Web3.givenProvider); // const account = drizzleState.accounts[0];\n          // const manaContract = drizzle.contracts.MANAToken; \n          // const dataKey = manaContract.methods.allowance.cacheCall(account,propAddress);\n          // const approveMana = state.contracts.MANAToken.allowance[dataKey].value\n          // console.log(approveMana)\n\n          if (!(tokenId === null)) {\n            _context2.next = 5;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", __jsx(\"div\", {\n            className: \"mx-auto\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 7\n            }\n          }, \"TokenId\", console.log(tokenId), __jsx(Loader, {\n            color: \"#007bff\",\n            size: \"40px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 9\n            }\n          })));\n\n        case 5:\n          propAddress && proposalStorageAbi ? useEffect(() => {\n            const account = drizzleState.accounts[0];\n          }, [propAddress]) : __jsx(\"div\", {\n            className: \"mx-auto\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 5\n            }\n          }, propAddress, \" ContributeInnerModal 27\", __jsx(Loader, {\n            color: \"#007bff\",\n            size: \"40px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 7\n            }\n          }));\n\n          fetchProposalAddress = /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n              var proposalAddress, contractConfig, events, proposalContract, propBalance, manaContract, approvedMana;\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    proposalAddress = \"\".concat(propAddress);\n                    contractConfig = {\n                      contractName: \"\".concat(propAddress),\n                      web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\n                    };\n\n                    if (!drizzle.contracts[\"\".concat(propAddress)]) {\n                      events = ['ContributionSuccess', 'ProposalEvent', 'LogNewProvableQuery', 'RandomFailure'];\n                      drizzle.addContract(contractConfig, events);\n                    }\n\n                    if (!drizzle.contracts[\"\".concat(propAddress)]) {\n                      _context.next = 14;\n                      break;\n                    }\n\n                    proposalContract = drizzle.contracts[\"\".concat(propAddress)];\n                    _context.next = 7;\n                    return proposalContract.methods.getSummary(\"\".concat(tokenId)).call();\n\n                  case 7:\n                    propBalance = _context.sent;\n                    manaContract = drizzle.contracts.MANAToken;\n                    _context.next = 11;\n                    return manaContract.methods.allowance.cacheCall(account, propAddress);\n\n                  case 11:\n                    approvedMana = _context.sent;\n                    gotContractBalance(propBalance, approvedMana);\n                    gotPropContract(proposalContract);\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n\n            return function fetchProposalAddress() {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n\n          if (!(propAddress === null || propAddress === 'undefined')) {\n            _context2.next = 11;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", __jsx(\"div\", {\n            className: \"mx-auto\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 5\n            }\n          }, propAddress, \" ContributeInnerModal 52\", __jsx(Loader, {\n            className: \"mx-auto\",\n            color: \"#007bff\",\n            size: \"40px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 7\n            }\n          })));\n\n        case 11:\n          return _context2.abrupt(\"return\", __jsx(React.Fragment, null, __jsx(ContributeForm, {\n            drizzle: drizzle,\n            drizzleState: drizzleState,\n            assetPrice: assetPrice,\n            propAddress: propAddress,\n            tokenId: tokenId,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }\n          })));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n\n  return function ContributeInnnerModal(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst mapStateToProps = state => ({\n  proposalStorageAbi: state.appReducers.proposalStorageAbi\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gotContractBalance: (propBalance, approvedMana) => dispatch({\n    type: 'PROPOSAL_BALANCE',\n    balance: \"\".concat(propBalance),\n    approvedMana: approvedMana\n  }),\n  gotPropContract: proposalContract => dispatch({\n    type: 'PROPOSAL_STORAGE_CONTRACT',\n    proposalStorage: proposalContract\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","connect","Web3","ContributeForm","Loader","ContributeInnnerModal","props","gotContractBalance","gotPropContract","proposalStorageAbi","drizzleState","drizzle","propAddress","tokenId","assetPrice","state","store","getState","web3","givenProvider","console","log","account","accounts","fetchProposalAddress","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","contracts","events","addContract","proposalContract","methods","getSummary","call","propBalance","manaContract","MANAToken","allowance","cacheCall","approvedMana","mapStateToProps","appReducers","mapDispatchToProps","dispatch","type","balance","proposalStorage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal = async ({ props, gotContractBalance, gotPropContract, proposalStorageAbi }) => {\r\n  const { drizzleState, drizzle, propAddress, tokenId, assetPrice } = props;\r\n  var state = drizzle.store.getState()\r\n  let web3 = new Web3(Web3.givenProvider);\r\n  // const account = drizzleState.accounts[0];\r\n  // const manaContract = drizzle.contracts.MANAToken; \r\n  // const dataKey = manaContract.methods.allowance.cacheCall(account,propAddress);\r\n  // const approveMana = state.contracts.MANAToken.allowance[dataKey].value\r\n  // console.log(approveMana)\r\n\r\n  if(tokenId === null){\r\n    return(\r\n      <div className=\"mx-auto\">   \r\n      TokenId{console.log(tokenId)}\r\n        <Loader color=\"#007bff\" size=\"40px\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  {propAddress && proposalStorageAbi ? \r\n    useEffect(() => {\r\n      const account = drizzleState.accounts[0];\r\n    }, [propAddress])\r\n\r\n  :\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 27\r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\nconst fetchProposalAddress = async () => {\r\n      let proposalAddress = `${propAddress}`;\r\n      const contractConfig = {\r\n        contractName: `${propAddress}`,\r\n        web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\r\n      };\r\n      if (!drizzle.contracts[`${propAddress}`]) {\r\n      let events = ['ContributionSuccess','ProposalEvent','LogNewProvableQuery','RandomFailure'] ;  \r\n      drizzle.addContract(contractConfig, events);\r\n      }\r\n      if(drizzle.contracts[`${propAddress}`]){\r\n        const proposalContract = drizzle.contracts[`${propAddress}`];\r\n        const propBalance = await proposalContract.methods.getSummary(`${tokenId}`).call();\r\n        const manaContract = drizzle.contracts.MANAToken; \r\n        const approvedMana = await manaContract.methods.allowance.cacheCall(account,propAddress);\r\n  \r\n        gotContractBalance(propBalance, approvedMana); \r\n        gotPropContract(proposalContract);\r\n    }\r\n}\r\n\r\nif(propAddress === null || propAddress === 'undefined') {\r\n  return (\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 52\r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  )\r\n}  \r\nelse {\r\n  return ( \r\n        <>\r\n          <ContributeForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} propAddress={propAddress} tokenId={tokenId} />\r\n        </>\r\n      );    \r\n  } \r\n}\r\n\r\n  const mapStateToProps = (state) => ({\r\n    proposalStorageAbi: state.appReducers.proposalStorageAbi\r\n  })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  gotContractBalance: (propBalance,approvedMana) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${propBalance}`, approvedMana:approvedMana }),\r\n  gotPropContract: (proposalContract) => dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:proposalContract})\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);"]},"metadata":{},"sourceType":"module"}