{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\EthAccounts.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ContractForm, AccountData, ContractData } from \"@drizzle/react-components\";\nimport Web3 from \"web3\";\n\nclass EthAccounts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null,\n      userId: null,\n      user: null,\n      id: null\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.UserStorage;\n    const account = drizzleState.accounts[0];\n    const {\n      UserStorage\n    } = this.props.drizzleState.contracts;\n    const user = contract.methods['addresses'].cacheCall(account);\n    const id = UserStorage.addresses[user];\n    const userId = [id && id.value[0]]; //const userId = await drizzle.contracts.UserStorage.methods.addresses(account).call();\n\n    const dataKey = await contract.methods[\"profiles\"].cacheCall(1);\n    this.setState({\n      dataKey,\n      user\n    });\n  }\n\n  render() {\n    const {\n      UserStorage\n    } = this.props.drizzleState.contracts;\n    const displayData = UserStorage.profiles[this.state.dataKey]; // if displayData (an object) exists, then we can display the value \n\n    console.log(this.state.user); //const userId = UserStorage.addresses[this.state.user];   \n    //console.log(userId && userId.value[0]);\n    //const username = displayData && displayData.value[1];\n    //const userface = Web3.utils.toAscii(username);\n    //username: Web3.utils.toAscii(username),\n\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, \"Hi: \", displayData && displayData.value[1]);\n  }\n\n}\n\nexport default EthAccounts; //  <ContractData contract=\"Storage\" method=\"getData\" toUtf8 toAscii />","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/EthAccounts.js"],"names":["React","ContractForm","AccountData","ContractData","Web3","EthAccounts","Component","dataKey","userId","user","id","componentDidMount","drizzle","drizzleState","props","contract","contracts","UserStorage","account","accounts","methods","cacheCall","addresses","value","setState","render","displayData","profiles","state","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,YAApC,QAAwD,2BAAxD;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCACjC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,MAAM,EAAE,IAAzB;AAA8BC,MAAAA,IAAI,EAAE,IAApC;AAAyCC,MAAAA,EAAE,EAAE;AAA7C,KADiC;AAAA;;AAGzC,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4B,KAAKC,KAAvC;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,SAAR,CAAkBC,WAAnC;AACA,UAAMC,OAAO,GAAGL,YAAY,CAACM,QAAb,CAAsB,CAAtB,CAAhB;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAkB,KAAKH,KAAL,CAAWD,YAAX,CAAwBG,SAAhD;AAED,UAAMP,IAAI,GAAGM,QAAQ,CAACK,OAAT,CAAiB,WAAjB,EAA8BC,SAA9B,CAAwCH,OAAxC,CAAb;AACA,UAAMR,EAAE,GAAGO,WAAW,CAACK,SAAZ,CAAsBb,IAAtB,CAAX;AACA,UAAMD,MAAM,GAAG,CAACE,EAAE,IAAIA,EAAE,CAACa,KAAH,CAAS,CAAT,CAAP,CAAf,CARyB,CAUzB;;AAGA,UAAMhB,OAAO,GAAG,MAAMQ,QAAQ,CAACK,OAAT,CAAiB,UAAjB,EAA6BC,SAA7B,CAAuC,CAAvC,CAAtB;AACA,SAAKG,QAAL,CAAc;AAAEjB,MAAAA,OAAF;AAAWE,MAAAA;AAAX,KAAd;AAEA;;AAGDgB,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAER,MAAAA;AAAF,QAAkB,KAAKH,KAAL,CAAWD,YAAX,CAAwBG,SAAhD;AACA,UAAMU,WAAW,GAAGT,WAAW,CAACU,QAAZ,CAAqB,KAAKC,KAAL,CAAWrB,OAAhC,CAApB,CAHO,CAGuD;;AAC9DsB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWnB,IAAvB,EAJO,CAKP;AACD;AAEA;AACA;AAEC;;AAEA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQiB,WAAW,IAAIA,WAAW,CAACH,KAAZ,CAAkB,CAAlB,CAAvB,CAFF;AAID;;AAvCwC;;AA0C1C,eAAelB,WAAf,C,CAEA","sourcesContent":["import React from 'react';\r\nimport { ContractForm, AccountData, ContractData } from \"@drizzle/react-components\";\r\nimport Web3 from \"web3\"\r\n\r\nclass EthAccounts extends React.Component {\r\n state = { dataKey: null, userId: null,user: null,id: null };\r\n\r\n async componentDidMount() {\r\n   const { drizzle, drizzleState } = this.props;\r\n   const contract = drizzle.contracts.UserStorage;\r\n   const account = drizzleState.accounts[0];\r\n   const { UserStorage } = this.props.drizzleState.contracts;\r\n                                                        \r\n  const user = contract.methods['addresses'].cacheCall(account);\r\n  const id = UserStorage.addresses[user]; \r\n  const userId = [id && id.value[0]];\r\n\r\n  //const userId = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n \r\n \r\n  const dataKey = await contract.methods[\"profiles\"].cacheCall(1);\r\n  this.setState({ dataKey, user });\r\n\r\n }\r\n\r\n\r\n render() {\r\n  \r\n   const { UserStorage } = this.props.drizzleState.contracts;\r\n   const displayData = UserStorage.profiles[this.state.dataKey]; // if displayData (an object) exists, then we can display the value \r\n   console.log(this.state.user)\r\n   //const userId = UserStorage.addresses[this.state.user];   \r\n  //console.log(userId && userId.value[0]);\r\n\r\n  //const username = displayData && displayData.value[1];\r\n  //const userface = Web3.utils.toAscii(username);\r\n  \r\n   //username: Web3.utils.toAscii(username),\r\n\r\n   return (\r\n    \r\n     <p>Hi: {displayData && displayData.value[1]}</p>\r\n   )\r\n }\r\n}\r\n\r\nexport default EthAccounts\r\n\r\n//  <ContractData contract=\"Storage\" method=\"getData\" toUtf8 toAscii />\r\n"]},"metadata":{},"sourceType":"module"}