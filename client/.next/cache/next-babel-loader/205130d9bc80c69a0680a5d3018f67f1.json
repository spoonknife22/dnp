{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\cards\\\\NominateAssetCards.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '../../components/Pagination';\nimport Nominations from '../../components/Nominations'; //import Moment from \"react-moment\";\n\nimport moment from \"moment\";\nimport { Card } from 'react-bootstrap';\n\nconst NominationAssetCards = ({\n  props,\n  userManaBalance,\n  ordersActive\n}) => {\n  // const [orders, setOrders] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [parcelsPerPage] = useState(6);\n  // const [totalOrders, setTotalOrders] = useState();\n  console.log(ordersActive);\n  const nowUnix = moment().valueOf();\n  ;\n  const totalOrders = ordersActive.length;\n  const parcelsPerPage = 6;\n  const currentPage = 1; //   useEffect(() => {\n  //     const fetchParcels = async () => {\n  //     setOrders(ordersActive);\n  //     setTotalOrders(ordersActive.length)\n  //     setLoading(false); \n  //   }\n  //   fetchParcels();  \n  // }, []);\n  // Get current orders\n\n  const indexOfLastParcel = currentPage * parcelsPerPage;\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\n  const currentParcels = ordersActive.slice(indexOfFirstParcel, indexOfLastParcel); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(React.Fragment, null, __jsx(Nominations, {\n    orders: currentParcels,\n    loading: loading,\n    props: props,\n    userManaBalance: userManaBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    currentPage: currentPage,\n    parcelsPerPage: parcelsPerPage,\n    totalParcels: totalOrders,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }));\n};\n\n_c = NominationAssetCards;\nexport default NominationAssetCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NominationAssetCards\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/cards/NominateAssetCards.js"],"names":["React","useState","useEffect","Pagination","Nominations","moment","Card","NominationAssetCards","props","userManaBalance","ordersActive","console","log","nowUnix","valueOf","totalOrders","length","parcelsPerPage","currentPage","indexOfLastParcel","indexOfFirstParcel","currentParcels","slice","paginate","pageNumber","setCurrentPage","loading"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,eAAT;AAA0BC,EAAAA;AAA1B,CAAD,KAA8C;AAEzE;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,QAAMG,OAAO,GAAGR,MAAM,GAAGS,OAAT,EAAhB;AAAmC;AAEnC,QAAMC,WAAW,GAAGL,YAAY,CAACM,MAAjC;AACA,QAAMC,cAAc,GAAG,CAAvB;AACA,QAAMC,WAAW,GAAG,CAApB,CAZyE,CAc3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIE;;AACA,QAAMC,iBAAiB,GAAGD,WAAW,GAAGD,cAAxC;AACA,QAAMG,kBAAkB,GAAGD,iBAAiB,GAAGF,cAA/C;AACA,QAAMI,cAAc,GAAGX,YAAY,CAACY,KAAb,CAAmBF,kBAAnB,EAAuCD,iBAAvC,CAAvB,CA5ByE,CA8BzE;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIC,cAAc,CAACD,UAAD,CAA7C;;AAEA,SACE,4BACE,MAAC,WAAD;AACE,IAAA,MAAM,EAAEH,cADV;AAEE,IAAA,OAAO,EAAEK,OAFX;AAGE,IAAA,KAAK,EAAElB,KAHT;AAIE,IAAA,eAAe,EAAEC,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOG,MAAC,UAAD;AACC,IAAA,WAAW,EAAGS,WADf;AAEC,IAAA,cAAc,EAAED,cAFjB;AAGC,IAAA,YAAY,EAAEF,WAHf;AAIC,IAAA,QAAQ,EAAEQ,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,CADF;AAgBD,CAjDD;;KAAMhB,oB;AAoDN,eAAeA,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport Nominations from '../../components/Nominations'\r\n//import Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst NominationAssetCards = ({ props, userManaBalance, ordersActive }) => {\r\n  \r\n  // const [orders, setOrders] = useState([]);\r\n  // const [loading, setLoading] = useState(false);\r\n  // const [currentPage, setCurrentPage] = useState(1);\r\n  // const [parcelsPerPage] = useState(6);\r\n  // const [totalOrders, setTotalOrders] = useState();\r\n  console.log(ordersActive)\r\n  const nowUnix = moment().valueOf();;\r\n\r\n  const totalOrders = ordersActive.length;\r\n  const parcelsPerPage = 6;\r\n  const currentPage = 1;\r\n\r\n//   useEffect(() => {\r\n//     const fetchParcels = async () => {\r\n//     setOrders(ordersActive);\r\n//     setTotalOrders(ordersActive.length)\r\n//     setLoading(false); \r\n//   }\r\n//   fetchParcels();  \r\n// }, []);\r\n\r\n\r\n\r\n  // Get current orders\r\n  const indexOfLastParcel = currentPage * parcelsPerPage;\r\n  const indexOfFirstParcel = indexOfLastParcel - parcelsPerPage;\r\n  const currentParcels = ordersActive.slice(indexOfFirstParcel, indexOfLastParcel);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (   \r\n    <>\r\n      <Nominations \r\n        orders={currentParcels} \r\n        loading={loading} \r\n        props={props}   \r\n        userManaBalance={userManaBalance}\r\n      />\r\n       <Pagination\r\n        currentPage ={currentPage }\r\n        parcelsPerPage={parcelsPerPage}\r\n        totalParcels={totalOrders}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default NominationAssetCards;\r\n\r\n"]},"metadata":{},"sourceType":"module"}