{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\NominationModal.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport NominationForm from '../forms/NominationForm';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\nimport ProposalForm from '../forms/ProposalForm';\nimport { Loader } from 'rimble-ui';\n\nconst NominationModal = ({\n  parcel,\n  props,\n  userManaBalance,\n  getNftAddress\n}) => {\n  const drizzleState = props.drizzleState,\n        drizzle = props.drizzle;\n  const tokenId = parcel.parcel.tokenId;\n\n  const _useState = useState(false),\n        show = _useState[0],\n        setShow = _useState[1];\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false); //const [tokenId, setTokenId] = useState(null);\n  //graphql call\n  // const myHeaders = new Headers();\n  // myHeaders.append(\"Content-Type\", \"application/json\");\n  //   useEffect(() => {\n  //   const fetchDetailsLink = async () => {\n  //     const tokenId = await drizzle.contracts.LANDRegistry.methods.encodeTokenId(parcel.parcel.x, parcel.parcel.y).call();\n  //     const nftAddress = '0x3f27363c9f86E8ac151a0D332abC2C3b60B7bCf5';\n  //     setTokenId(tokenId);\n  //     getNftAddress(nftAddress);\n  //   //graphql call\n  //   // const graphql= JSON.stringify({ query: \n  //   //   `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) \n  //   //     {\n  //   //       nft{\n  //   //         activeOrder{\n  //   //             Order:\n  //   //             nftAddress\n  //   //             price\n  //   //         }\n  //   //         tokenId\n  //   //       }\n  //   //     }\n  //   //   }`\n  //   // })\n  //   //graphql call\n  //   // const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n  //   // targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\n  //   // fetch(proxyUrl + targetUrl, {\n  //   //   method: \"POST\",\n  //   //   headers:myHeaders,  \n  //   //   body:graphql, variables:{},\n  //   //   redirect: 'follow'\n  //   // })\n  //   //   .then(res => res.json())\n  //   //   .then((result) => {\n  //   //     const parcelData = result.data.parcels[0];\n  //   //     return parcelData;\n  //   //   })\n  //   //   .then((result) => { \n  //   //     const { nft } = result;\n  //   //     const { tokenId } = nft;\n  //   //     //const nftAddress = nft.activeOrder.Order\n  //   //     const nftAddress = '0x3f27363c9f86E8ac151a0D332abC2C3b60B7bCf5';\n  //   //     setTokenId(tokenId);\n  //   //     getNftAddress(nftAddress);\n  //   //   })\n  //   };\n  // fetchDetailsLink();\n  // }, []);\n\n\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    type: \"button\",\n    onClick: handleShow,\n    className: \"jsx-2818753896\" + \" \" + \"btn btn-lg btn-block card-footer-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Nominate Asset\"), __jsx(Modal, {\n    className: \"nomintation-modal\",\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    className: \"text-center justify-content-center\",\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    className: \"text-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Current Price:\\xA0\", parcel.activeOrder.price, \"\\xA0MANA\", __jsx(\"p\", {\n    className: \"jsx-2818753896\" + \" \" + \"mana-balance mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Your MANA Balance:\\xA0\", __jsx(\"span\", {\n    className: \"jsx-2818753896\" + \" \" + \"amount-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 71\n    }\n  }, \"\".concat(parcel.activeOrder.price))))), __jsx(Modal.Body, {\n    className: \"pt-1 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, tokenId !== null ? __jsx(ProposalForm, {\n    assetPrice: parcel.activeOrder.price,\n    props: props,\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    tokenId: tokenId,\n    userManaBalance: userManaBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }) : __jsx(\"div\", {\n    className: \"jsx-2818753896\" + \" \" + \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, tokenId, \" Nomination Modal 76\", __jsx(Loader, {\n    className: \"mx-auto\",\n    color: \"#007bff\",\n    size: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"2818753896\",\n    __self: this\n  }, \".nomintation-modal.jsx-2818753896{font-family:Poppins;}.mana-balance.jsx-2818753896{font-size:.9rem;color:#000;font-weight:200;text-align:left;}.amount-number.jsx-2818753896{font-family:Poppins;color:#66a3ff;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxjb21wb25lbnRzXFxtb2RhbHNcXE5vbWluYXRpb25Nb2RhbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwR1csQUFDeUMsQUFDRSxBQUNLLGdCQURLLElBRFgsQUFFbUIsT0FEUSxPQUNQLFNBRHFCLGdCQUFDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxjb21wb25lbnRzXFxtb2RhbHNcXE5vbWluYXRpb25Nb2RhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiAgXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtYm9vdHN0cmFwL01vZGFsJztcclxuaW1wb3J0IE5vbWluYXRpb25Gb3JtIGZyb20gJy4uL2Zvcm1zL05vbWluYXRpb25Gb3JtJztcclxuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IFdlYjMgZnJvbSAnd2ViMyc7XHJcbmltcG9ydCBQcm9wb3NhbEZvcm0gZnJvbSAnLi4vZm9ybXMvUHJvcG9zYWxGb3JtJztcclxuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSAncmltYmxlLXVpJztcclxuXHJcbmNvbnN0IE5vbWluYXRpb25Nb2RhbCA9ICh7IHBhcmNlbCwgcHJvcHMsIHVzZXJNYW5hQmFsYW5jZSwgZ2V0TmZ0QWRkcmVzcyB9KSA9PiB7XHJcblxyXG4gIGNvbnN0IHtkcml6emxlU3RhdGUsIGRyaXp6bGV9ID0gcHJvcHM7XHJcbiAgY29uc3QgdG9rZW5JZCA9IHBhcmNlbC5wYXJjZWwudG9rZW5JZFxyXG5cclxuICBjb25zdCBbc2hvdywgc2V0U2hvd10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgaGFuZGxlU2hvdyA9ICgpID0+IHNldFNob3codHJ1ZSk7XHJcbiAgY29uc3QgaGFuZGxlQ2xvc2UgPSAoKSA9PiBzZXRTaG93KGZhbHNlKTtcclxuICAvL2NvbnN0IFt0b2tlbklkLCBzZXRUb2tlbklkXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICAvL2dyYXBocWwgY2FsbFxyXG4gIC8vIGNvbnN0IG15SGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcbiAgLy8gbXlIZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XHJcblxyXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbi8vICAgY29uc3QgZmV0Y2hEZXRhaWxzTGluayA9IGFzeW5jICgpID0+IHtcclxuXHJcbi8vICAgICBjb25zdCB0b2tlbklkID0gYXdhaXQgZHJpenpsZS5jb250cmFjdHMuTEFORFJlZ2lzdHJ5Lm1ldGhvZHMuZW5jb2RlVG9rZW5JZChwYXJjZWwucGFyY2VsLngsIHBhcmNlbC5wYXJjZWwueSkuY2FsbCgpO1xyXG5cclxuLy8gICAgIGNvbnN0IG5mdEFkZHJlc3MgPSAnMHgzZjI3MzYzYzlmODZFOGFjMTUxYTBEMzMyYWJDMkMzYjYwQjdiQ2Y1JztcclxuLy8gICAgIHNldFRva2VuSWQodG9rZW5JZCk7XHJcbi8vICAgICBnZXROZnRBZGRyZXNzKG5mdEFkZHJlc3MpO1xyXG4gIFxyXG4vLyAgIC8vZ3JhcGhxbCBjYWxsXHJcbi8vICAgLy8gY29uc3QgZ3JhcGhxbD0gSlNPTi5zdHJpbmdpZnkoeyBxdWVyeTogXHJcbi8vICAgLy8gICBgeyBwYXJjZWxzKHdoZXJlOiB7eDpcIiR7cGFyY2VsLnh9XCIseTpcIiR7cGFyY2VsLnl9XCJ9KSBcclxuLy8gICAvLyAgICAge1xyXG4vLyAgIC8vICAgICAgIG5mdHtcclxuLy8gICAvLyAgICAgICAgIGFjdGl2ZU9yZGVye1xyXG4vLyAgIC8vICAgICAgICAgICAgIE9yZGVyOlxyXG4vLyAgIC8vICAgICAgICAgICAgIG5mdEFkZHJlc3NcclxuLy8gICAvLyAgICAgICAgICAgICBwcmljZVxyXG4vLyAgIC8vICAgICAgICAgfVxyXG4vLyAgIC8vICAgICAgICAgdG9rZW5JZFxyXG4vLyAgIC8vICAgICAgIH1cclxuLy8gICAvLyAgICAgfVxyXG4vLyAgIC8vICAgfWBcclxuLy8gICAvLyB9KVxyXG5cclxuLy8gICAvL2dyYXBocWwgY2FsbFxyXG4vLyAgIC8vIGNvbnN0IHByb3h5VXJsID0gJ2h0dHBzOi8vY29ycy1hbnl3aGVyZS5oZXJva3VhcHAuY29tLycsXHJcbi8vICAgLy8gdGFyZ2V0VXJsID0gJ2h0dHBzOi8vYXBpLnRoZWdyYXBoLmNvbS9zdWJncmFwaHMvbmFtZS9kZWNlbnRyYWxhbmQvbWFya2V0cGxhY2UnXHJcblxyXG4vLyAgIC8vIGZldGNoKHByb3h5VXJsICsgdGFyZ2V0VXJsLCB7XHJcbi8vICAgLy8gICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4vLyAgIC8vICAgaGVhZGVyczpteUhlYWRlcnMsICBcclxuLy8gICAvLyAgIGJvZHk6Z3JhcGhxbCwgdmFyaWFibGVzOnt9LFxyXG4vLyAgIC8vICAgcmVkaXJlY3Q6ICdmb2xsb3cnXHJcbi8vICAgLy8gfSlcclxuLy8gICAvLyAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxyXG4vLyAgIC8vICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4vLyAgIC8vICAgICBjb25zdCBwYXJjZWxEYXRhID0gcmVzdWx0LmRhdGEucGFyY2Vsc1swXTtcclxuLy8gICAvLyAgICAgcmV0dXJuIHBhcmNlbERhdGE7XHJcbi8vICAgLy8gICB9KVxyXG4vLyAgIC8vICAgLnRoZW4oKHJlc3VsdCkgPT4geyBcclxuLy8gICAvLyAgICAgY29uc3QgeyBuZnQgfSA9IHJlc3VsdDtcclxuLy8gICAvLyAgICAgY29uc3QgeyB0b2tlbklkIH0gPSBuZnQ7XHJcbi8vICAgLy8gICAgIC8vY29uc3QgbmZ0QWRkcmVzcyA9IG5mdC5hY3RpdmVPcmRlci5PcmRlclxyXG4vLyAgIC8vICAgICBjb25zdCBuZnRBZGRyZXNzID0gJzB4M2YyNzM2M2M5Zjg2RThhYzE1MWEwRDMzMmFiQzJDM2I2MEI3YkNmNSc7XHJcbi8vICAgLy8gICAgIHNldFRva2VuSWQodG9rZW5JZCk7XHJcbi8vICAgLy8gICAgIGdldE5mdEFkZHJlc3MobmZ0QWRkcmVzcyk7XHJcbi8vICAgLy8gICB9KVxyXG4vLyAgIH07XHJcbi8vIGZldGNoRGV0YWlsc0xpbmsoKTtcclxuXHJcbi8vIH0sIFtdKTtcclxuXHJcbnJldHVybiAoICAgXHJcbiAgICAgIDw+IFxyXG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tbGcgYnRuLWJsb2NrIGNhcmQtZm9vdGVyLWJ0blwiIG9uQ2xpY2s9e2hhbmRsZVNob3d9PlxyXG4gICAgICAgICAgTm9taW5hdGUgQXNzZXRcclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICA8TW9kYWwgY2xhc3NOYW1lPVwibm9taW50YXRpb24tbW9kYWxcIiBzaG93PXtzaG93fSBvbkhpZGU9e2hhbmRsZUNsb3NlfT5cclxuICAgICAgICAgIDxNb2RhbC5IZWFkZXIgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIganVzdGlmeS1jb250ZW50LWNlbnRlclwiIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgICA8TW9kYWwuVGl0bGUgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIganVzdGlmeS1jb250ZW50LWNlbnRlclwiPkN1cnJlbnQgUHJpY2U6Jm5ic3A7e3BhcmNlbC5hY3RpdmVPcmRlci5wcmljZX0mbmJzcDtNQU5BXHJcbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm1hbmEtYmFsYW5jZSBtYi0xXCIgPllvdXIgTUFOQSBCYWxhbmNlOiZuYnNwOzxzcGFuIGNsYXNzTmFtZT1cImFtb3VudC1udW1iZXJcIj57YCR7cGFyY2VsLmFjdGl2ZU9yZGVyLnByaWNlfWB9PC9zcGFuPjwvcD5cclxuICAgICAgICAgIDwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgICA8TW9kYWwuQm9keSBjbGFzc05hbWU9XCJwdC0xIGFsaWduLWl0ZW1zLWNlbnRlclwiPlxyXG4gICAgICAgICB7dG9rZW5JZCAhPT0gbnVsbCA/ICAgXHJcbiAgICAgICAgICA8UHJvcG9zYWxGb3JtICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGFzc2V0UHJpY2U9e3BhcmNlbC5hY3RpdmVPcmRlci5wcmljZX0gIFxyXG4gICAgICAgICAgICBwcm9wcz17cHJvcHN9XHJcbiAgICAgICAgICAgIGRyaXp6bGU9e2RyaXp6bGV9XHJcbiAgICAgICAgICAgIGRyaXp6bGVTdGF0ZT17ZHJpenpsZVN0YXRlfVxyXG4gICAgICAgICAgICB0b2tlbklkPXt0b2tlbklkfVxyXG4gICAgICAgICAgICB1c2VyTWFuYUJhbGFuY2U9e3VzZXJNYW5hQmFsYW5jZX1cclxuICAgICAgICAgICAgLz4gXHJcbiAgICAgICAgICA6XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWxpZ24taXRlbXMtY2VudGVyXCI+ICAgXHJcbiAgICAgICAgICAgIHt0b2tlbklkfSBOb21pbmF0aW9uIE1vZGFsIDc2XHJcbiAgICAgICAgICAgICAgPExvYWRlciBjbGFzc05hbWU9XCJteC1hdXRvXCIgY29sb3I9XCIjMDA3YmZmXCIgc2l6ZT1cIjQwcHhcIiAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIH0gXHJcbiAgICAgICAgICA8L01vZGFsLkJvZHk+XHJcbiAgICAgICAgPC9Nb2RhbD5cclxuICAgICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgICAge2AgIC5ub21pbnRhdGlvbi1tb2RhbHtmb250LWZhbWlseTogUG9wcGluczt9XHJcbiAgICAgICAgICAgICAgLm1hbmEtYmFsYW5jZXtmb250LXNpemU6LjlyZW07Y29sb3I6IzAwMDtmb250LXdlaWdodDogMjAwO3RleHQtYWxpZ246bGVmdH1cclxuICAgICAgICAgICAgICAuYW1vdW50LW51bWJlcntmb250LWZhbWlseTpQb3BwaW5zO2NvbG9yOiM2NmEzZmY7fVxyXG4gICAgICAgICAgYH0gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgPC9zdHlsZT5cclxuICAgICAgPC8+XHJcbiAgICAgICAgKTsgICAgXHJcbiAgICAgIH0gXHJcbiAgXHJcbiAgICAgICAgY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gKGRpc3BhdGNoKSA9PiAoe1xyXG4gICAgICAgICAgZ2V0VG9rZW5JZDogKHRva2VuSWQpID0+ICBkaXNwYXRjaCh7IHR5cGU6IFwiU0VUX1RPS0VOX0lEXCIsIHRva2VuSWQ6dG9rZW5JZCB9KSxcclxuICAgICAgICAgIGdldE5mdEFkZHJlc3M6IChuZnRBZGRyZXNzKSA9PiAgZGlzcGF0Y2goeyB0eXBlOiBcIlNFVF9OZnRBZGRyZXNzXCIsIE5mdEFkZHJlc3M6bmZ0QWRkcmVzcyB9KSxcclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICBcclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChudWxsLCBtYXBEaXNwYXRjaFRvUHJvcHMpKE5vbWluYXRpb25Nb2RhbCk7XHJcbiAgICAgIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Samsung\\\\\\\\code\\\\\\\\cacp\\\\\\\\client\\\\\\\\components\\\\\\\\modals\\\\\\\\NominationModal.js */\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getTokenId: tokenId => dispatch({\n    type: \"SET_TOKEN_ID\",\n    tokenId: tokenId\n  }),\n  getNftAddress: nftAddress => dispatch({\n    type: \"SET_NftAddress\",\n    NftAddress: nftAddress\n  })\n});\n\nexport default connect(null, mapDispatchToProps)(NominationModal);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/NominationModal.js"],"names":["React","useState","useEffect","Modal","NominationForm","connect","Web3","ProposalForm","Loader","NominationModal","parcel","props","userManaBalance","getNftAddress","drizzleState","drizzle","tokenId","show","setShow","handleShow","handleClose","activeOrder","price","mapDispatchToProps","dispatch","getTokenId","type","nftAddress","NftAddress"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,eAAjB;AAAkCC,EAAAA;AAAlC,CAAD,KAAuD;AAAA,QAEtEC,YAFsE,GAE7CH,KAF6C,CAEtEG,YAFsE;AAAA,QAExDC,OAFwD,GAE7CJ,KAF6C,CAExDI,OAFwD;AAG7E,QAAMC,OAAO,GAAGN,MAAM,CAACA,MAAP,CAAcM,OAA9B;;AAH6E,oBAKrDf,QAAQ,CAAC,KAAD,CAL6C;AAAA,QAKtEgB,IALsE;AAAA,QAKhEC,OALgE;;AAM7E,QAAMC,UAAU,GAAG,MAAMD,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAME,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC,CAP6E,CAQ7E;AAEA;AACA;AACA;AAEF;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,SACM,4BACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAuE,IAAA,OAAO,EAAEC,UAAhF;AAAA,wCAAgC,sCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAqC,IAAA,IAAI,EAAEF,IAA3C;AAAiD,IAAA,MAAM,EAAEG,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS,EAAC,oCAAxB;AAA6D,IAAA,WAAW,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAa,IAAA,SAAS,EAAC,oCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAiFV,MAAM,CAACW,WAAP,CAAmBC,KAApG,cACA;AAAA,wCAAa,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0D;AAAA,wCAAgB,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoCZ,MAAM,CAACW,WAAP,CAAmBC,KAAvD,EAA1D,CADA,CADF,CADF,EAME,MAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACAN,OAAO,KAAK,IAAZ,GACA,MAAC,YAAD;AACE,IAAA,UAAU,EAAEN,MAAM,CAACW,WAAP,CAAmBC,KADjC;AAEE,IAAA,KAAK,EAAEX,KAFT;AAGE,IAAA,OAAO,EAAEI,OAHX;AAIE,IAAA,YAAY,EAAED,YAJhB;AAKE,IAAA,OAAO,EAAEE,OALX;AAME,IAAA,eAAe,EAAEJ,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAUE;AAAA,wCAAe,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCI,OADD,0BAEE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,CANF,CAJF;AAAA;AAAA;AAAA,o4NADN;AAqCO,CAxGP;;AA0GQ,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,UAAU,EAAGT,OAAD,IAAcQ,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,cAAR;AAAwBV,IAAAA,OAAO,EAACA;AAAhC,GAAD,CADM;AAExCH,EAAAA,aAAa,EAAGc,UAAD,IAAiBH,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,gBAAR;AAA0BE,IAAAA,UAAU,EAACD;AAArC,GAAD;AAFA,CAAf,CAA3B;;AAMR,eAAetB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCd,eAAlC,CAAf","sourcesContent":["  \r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport NominationForm from '../forms/NominationForm';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from 'web3';\r\nimport ProposalForm from '../forms/ProposalForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst NominationModal = ({ parcel, props, userManaBalance, getNftAddress }) => {\r\n\r\n  const {drizzleState, drizzle} = props;\r\n  const tokenId = parcel.parcel.tokenId\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n  //const [tokenId, setTokenId] = useState(null);\r\n\r\n  //graphql call\r\n  // const myHeaders = new Headers();\r\n  // myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//   useEffect(() => {\r\n//   const fetchDetailsLink = async () => {\r\n\r\n//     const tokenId = await drizzle.contracts.LANDRegistry.methods.encodeTokenId(parcel.parcel.x, parcel.parcel.y).call();\r\n\r\n//     const nftAddress = '0x3f27363c9f86E8ac151a0D332abC2C3b60B7bCf5';\r\n//     setTokenId(tokenId);\r\n//     getNftAddress(nftAddress);\r\n  \r\n//   //graphql call\r\n//   // const graphql= JSON.stringify({ query: \r\n//   //   `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) \r\n//   //     {\r\n//   //       nft{\r\n//   //         activeOrder{\r\n//   //             Order:\r\n//   //             nftAddress\r\n//   //             price\r\n//   //         }\r\n//   //         tokenId\r\n//   //       }\r\n//   //     }\r\n//   //   }`\r\n//   // })\r\n\r\n//   //graphql call\r\n//   // const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n//   // targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\r\n\r\n//   // fetch(proxyUrl + targetUrl, {\r\n//   //   method: \"POST\",\r\n//   //   headers:myHeaders,  \r\n//   //   body:graphql, variables:{},\r\n//   //   redirect: 'follow'\r\n//   // })\r\n//   //   .then(res => res.json())\r\n//   //   .then((result) => {\r\n//   //     const parcelData = result.data.parcels[0];\r\n//   //     return parcelData;\r\n//   //   })\r\n//   //   .then((result) => { \r\n//   //     const { nft } = result;\r\n//   //     const { tokenId } = nft;\r\n//   //     //const nftAddress = nft.activeOrder.Order\r\n//   //     const nftAddress = '0x3f27363c9f86E8ac151a0D332abC2C3b60B7bCf5';\r\n//   //     setTokenId(tokenId);\r\n//   //     getNftAddress(nftAddress);\r\n//   //   })\r\n//   };\r\n// fetchDetailsLink();\r\n\r\n// }, []);\r\n\r\nreturn (   \r\n      <> \r\n        <button type=\"button\" className=\"btn btn-lg btn-block card-footer-btn\" onClick={handleShow}>\r\n          Nominate Asset\r\n        </button>\r\n        <Modal className=\"nomintation-modal\" show={show} onHide={handleClose}>\r\n          <Modal.Header className=\"text-center justify-content-center\" closeButton>\r\n            <Modal.Title className=\"text-center justify-content-center\">Current Price:&nbsp;{parcel.activeOrder.price}&nbsp;MANA\r\n            <p className=\"mana-balance mb-1\" >Your MANA Balance:&nbsp;<span className=\"amount-number\">{`${parcel.activeOrder.price}`}</span></p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n          <Modal.Body className=\"pt-1 align-items-center\">\r\n         {tokenId !== null ?   \r\n          <ProposalForm                  \r\n            assetPrice={parcel.activeOrder.price}  \r\n            props={props}\r\n            drizzle={drizzle}\r\n            drizzleState={drizzleState}\r\n            tokenId={tokenId}\r\n            userManaBalance={userManaBalance}\r\n            /> \r\n          :\r\n            <div className=\"align-items-center\">   \r\n            {tokenId} Nomination Modal 76\r\n              <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n            </div>\r\n          } \r\n          </Modal.Body>\r\n        </Modal>\r\n        <style jsx>\r\n          {`  .nomintation-modal{font-family: Poppins;}\r\n              .mana-balance{font-size:.9rem;color:#000;font-weight: 200;text-align:left}\r\n              .amount-number{font-family:Poppins;color:#66a3ff;}\r\n          `}                \r\n        </style>\r\n      </>\r\n        );    \r\n      } \r\n  \r\n        const mapDispatchToProps = (dispatch) => ({\r\n          getTokenId: (tokenId) =>  dispatch({ type: \"SET_TOKEN_ID\", tokenId:tokenId }),\r\n          getNftAddress: (nftAddress) =>  dispatch({ type: \"SET_NftAddress\", NftAddress:nftAddress }),\r\n        });\r\n        \r\n        \r\nexport default connect(null, mapDispatchToProps)(NominationModal);\r\n     "]},"metadata":{},"sourceType":"module"}