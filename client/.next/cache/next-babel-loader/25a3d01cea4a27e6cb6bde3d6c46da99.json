{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\ProposalForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Loader } from 'rimble-ui';\nimport InitialContributeModal from '../modals/InitialContibModal';\nimport InnerPropForm from './InnerPropForm';\nimport { newContextComponents } from \"@drizzle/react-components\";\nconst ContractData = newContextComponents.ContractData,\n      ContractForm = newContextComponents.ContractForm;\n\nconst ProposalForm = ({\n  drizzle,\n  drizzleState,\n  props,\n  getCurrentProp,\n  tokenId,\n  assetPrice,\n  userManaBalance\n}) => {\n  _s();\n\n  const _useState = useState(null),\n        currentProp = _useState[0],\n        setCurrentProp = _useState[1];\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var proposalAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return drizzle.contracts.ProposalController.methods.getPropTokenIdMap(\"\".concat(tokenId)).call();\n\n          case 2:\n            proposalAddress = _context.sent;\n            setCurrentProp(proposalAddress);\n            getCurrentProp(proposalAddress);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    fetchProposalAddress();\n  }, [currentProp]);\n\n  if (!currentProp) {\n    return __jsx(\"div\", {\n      className: \"align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, currentProp, \" ProposalForm 25\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  if (currentProp) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, __jsx(ContractForm, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      contract: \"ProposalStorage\",\n      method: \"transfer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 1\n      }\n    }), __jsx(ContractForm, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      contract: \"ProposalStorage\",\n      method: \"deposit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), __jsx(ContractForm, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      contract: \"ProposalStorage\",\n      method: \"transferFrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }\n    }), __jsx(InnerPropForm, {\n      assetPrice: assetPrice,\n      props: props,\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      tokenId: tokenId,\n      userManaBalance: userManaBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }));\n  } else {\n    __jsx(\"div\", {\n      className: \"align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, currentProp, \" ProposalForm 44\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }));\n  }\n};\n\n_s(ProposalForm, \"jLhwHeJqtoqgdS/9kOUjQw0xBUw=\");\n\n_c = ProposalForm;\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentProp: proposalAddress => dispatch({\n    type: \"GOT_PROP_ADDRESS\",\n    proposalAddress: proposalAddress\n  })\n});\n\nexport default connect(null, mapDispatchToProps)(ProposalForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProposalForm\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/ProposalForm.js"],"names":["React","useState","useEffect","connect","Loader","InitialContributeModal","InnerPropForm","newContextComponents","ContractData","ContractForm","ProposalForm","drizzle","drizzleState","props","getCurrentProp","tokenId","assetPrice","userManaBalance","currentProp","setCurrentProp","fetchProposalAddress","contracts","ProposalController","methods","getPropTokenIdMap","call","proposalAddress","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'rimble-ui';\r\nimport InitialContributeModal from '../modals/InitialContibModal';\r\nimport InnerPropForm  from './InnerPropForm'\r\nimport { newContextComponents } from \"@drizzle/react-components\";\r\nconst { ContractData, ContractForm } = newContextComponents;\r\n\r\nconst ProposalForm = ({ drizzle, drizzleState, props, getCurrentProp, tokenId, assetPrice, userManaBalance }) => {     \r\n\r\nconst [currentProp, setCurrentProp] = useState(null);\r\n\r\nconst fetchProposalAddress = async () => {\r\n  const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenId}`).call(); \r\n  setCurrentProp(proposalAddress);\r\n  getCurrentProp(proposalAddress);\r\n}\r\n\r\nuseEffect(() => {\r\n  fetchProposalAddress();\r\n}, [currentProp]);\r\n\r\n\r\nif(!currentProp){\r\n  return (\r\n    <div className=\"align-items-center\"> \r\n      {currentProp} ProposalForm 25  \r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n    )\r\n  }\r\nif(currentProp){\r\n return (\r\n   <div>\r\n<ContractForm\r\n              drizzle={drizzle}\r\n              drizzleState={drizzleState}\r\n              contract=\"ProposalStorage\"\r\n              method=\"transfer\"\r\n            />\r\n            <ContractForm\r\n              drizzle={drizzle}\r\n              drizzleState={drizzleState}\r\n              contract=\"ProposalStorage\"\r\n              method=\"deposit\"\r\n            />\r\n\r\n<ContractForm\r\n              drizzle={drizzle}\r\n              drizzleState={drizzleState}\r\n              contract=\"ProposalStorage\"\r\n              method=\"transferFrom\"\r\n            />\r\n\r\n\r\n    <InnerPropForm\r\n      assetPrice={assetPrice}  \r\n      props={props}\r\n      drizzle={drizzle}\r\n      drizzleState={drizzleState}\r\n      tokenId={tokenId}\r\n      userManaBalance={userManaBalance}\r\n    />\r\n    </div>\r\n    )\r\n  }\r\n  else{\r\n    <div className=\"align-items-center\"> \r\n      {currentProp} ProposalForm 44  \r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCurrentProp: (proposalAddress) =>  dispatch({ type: \"GOT_PROP_ADDRESS\", proposalAddress:proposalAddress })\r\n});\r\n      \r\n      \r\nexport default connect(null, mapDispatchToProps)(ProposalForm);"]},"metadata":{},"sourceType":"module"}