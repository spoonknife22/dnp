{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchPropAddr),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(root);\n\nimport { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\nimport { drizzleSagas } from '@drizzle/store';\nconst drizzleSaga = drizzleSagas; //const dtuff = ...drizzleSagas];\n\nconst GET_PROP_ADDRESS = 'GET_PROP_ADDRESS';\n\nfunction fetchPropAddr(action) {\n  return _regeneratorRuntime.wrap(function fetchPropAddr$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return put({\n          type: 'GOT_PROP_ADDRESS',\n          propAddress: 2\n        });\n\n      case 2:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}\n\nexport default function root() {\n  return _regeneratorRuntime.wrap(function root$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.next = 2;\n        return takeLatest(GET_PROP_ADDRESS, fetchPropAddr);\n\n      case 2:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2);\n} //export default fetchPropSaga;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/middleware/sagas/fetchSaga.js"],"names":["fetchPropAddr","root","all","fork","takeLatest","put","call","take","race","select","takeEvery","drizzleSagas","drizzleSaga","GET_PROP_ADDRESS","action","type","propAddress"],"mappings":";;oDAOWA,a;qDAKcC,I;;AAZzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,MAAvD,EAA+DC,SAA/D,QAAgF,oBAAhF;AACA,SAASC,YAAT,QAA8B,gBAA9B;AAEA,MAAMC,WAAW,GAAGD,YAApB,C,CACA;;AACA,MAAME,gBAAgB,GAAE,kBAAxB;;AAEA,SAAWb,aAAX,CAA0Bc,MAA1B;AAAA;AAAA;AAAA;AAAA;AAEE,eAAMT,GAAG,CAAC;AAAEU,UAAAA,IAAI,EAAE,kBAAR;AAA4BC,UAAAA,WAAW,EAAC;AAAxC,SAAD,CAAT;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUf,IAAV;AAAA;AAAA;AAAA;AAAA;AACb,eAAMG,UAAU,CAACS,gBAAD,EAAmBb,aAAnB,CAAhB;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIf","sourcesContent":["import { all, fork, takeLatest, put, call, take, race, select, takeEvery } from 'redux-saga/effects';\r\nimport { drizzleSagas }  from '@drizzle/store';\r\n\r\nconst drizzleSaga = drizzleSagas;\r\n//const dtuff = ...drizzleSagas];\r\nconst GET_PROP_ADDRESS ='GET_PROP_ADDRESS';\r\n\r\nfunction * fetchPropAddr (action) {\r\n  //console.log('ehho');\r\n  yield put({ type: 'GOT_PROP_ADDRESS', propAddress:2});\r\n}\r\n\r\nexport default function* root() {\r\n  yield takeLatest(GET_PROP_ADDRESS, fetchPropAddr);\r\n\r\n  }\r\n//export default fetchPropSaga;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}