{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\NominationModal.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport NominationForm from '../forms/NominationForm';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\nimport ProposalForm from '../forms/ProposalForm';\nimport { Loader } from 'rimble-ui';\n\nconst NominationModal = ({\n  parcel,\n  props,\n  userManaBalance,\n  getNftAddress\n}) => {\n  _s();\n\n  const drizzleState = props.drizzleState,\n        drizzle = props.drizzle;\n\n  const _useState = useState(false),\n        show = _useState[0],\n        setShow = _useState[1];\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const _useState2 = useState(null),\n        tokenId = _useState2[0],\n        setTokenId = _useState2[1];\n\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  useEffect(() => {\n    const fetchDetailsLink = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var graphql, proxyUrl, targetUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              //   const graphql= JSON.stringify({ query: \n              //   `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) { tokenId }}`\n              // })\n              //With NFTADDRESS(NFT CONTRACT ADDRESS)\n              graphql = JSON.stringify({\n                query: \"{ parcels(where: {x:\\\"\".concat(parcel.x, \"\\\",y:\\\"\").concat(parcel.y, \"\\\"}) \\n  {\\n  nft{\\n    activeOrder{\\n        Order:\\n        nftAddress\\n        price\\n    }\\n    tokenId\\n  }\\n}\\n}\")\n              });\n              proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace';\n              fetch(proxyUrl + targetUrl, {\n                method: \"POST\",\n                headers: myHeaders,\n                body: graphql,\n                variables: {},\n                redirect: 'follow'\n              }).then(res => res.json()).then(result => {\n                const parcelData = result.data.parcels[0];\n                return parcelData;\n              }).then(result => {\n                const nft = result.nft;\n                const tokenId = nft.tokenId;\n                const NftAddress = nft.activeOrder.Order;\n                setTokenId(tokenId); //getNftAddress(nftAddress);\n\n                console.log(tokenId);\n              }); // .then((result) => { \n              //   const { tokenId } = result;\n              //   setTokenId(tokenId);\n              // })\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchDetailsLink() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchDetailsLink();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    type: \"button\",\n    onClick: handleShow,\n    className: \"jsx-725598825\" + \" \" + \"btn btn-lg btn-block card-footer-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Nominate Asset\"), __jsx(Modal, {\n    className: \"nomintation-modal\",\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    className: \"text-center justify-content-center\",\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    className: \"text-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Current Price:\\xA0\", parcel.publication.price, \"\\xA0MANA\", __jsx(\"p\", {\n    className: \"jsx-725598825\" + \" \" + \"mana-balance mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Your MANA Balance:\\xA0\", \"\".concat(userManaBalance)))), __jsx(Modal.Body, {\n    className: \"pt-1 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, tokenId !== null ? __jsx(ProposalForm, {\n    assetPrice: parcel.publication.price,\n    props: props,\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    tokenId: tokenId,\n    userManaBalance: userManaBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }) : __jsx(\"div\", {\n    className: \"jsx-725598825\" + \" \" + \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, tokenId, \" Nomination Modal 76\", __jsx(Loader, {\n    className: \"mx-auto\",\n    color: \"#007bff\",\n    size: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"725598825\",\n    __self: this\n  }, \".nomintation-modal.jsx-725598825{font-family:Poppins;}.mana-balance.jsx-725598825{font-size:.8rem;color:#66a3ff;font-weight:200;text-align:left;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxjb21wb25lbnRzXFxtb2RhbHNcXE5vbWluYXRpb25Nb2RhbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwR1csQUFDeUMsQUFDRSxnQkFBYSxJQURkLFVBQzhCLGdCQUFjLGdCQUFDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcU2Ftc3VuZ1xcY29kZVxcY2FjcFxcY2xpZW50XFxjb21wb25lbnRzXFxtb2RhbHNcXE5vbWluYXRpb25Nb2RhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiAgXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtYm9vdHN0cmFwL01vZGFsJztcclxuaW1wb3J0IE5vbWluYXRpb25Gb3JtIGZyb20gJy4uL2Zvcm1zL05vbWluYXRpb25Gb3JtJztcclxuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IFdlYjMgZnJvbSAnd2ViMyc7XHJcbmltcG9ydCBQcm9wb3NhbEZvcm0gZnJvbSAnLi4vZm9ybXMvUHJvcG9zYWxGb3JtJztcclxuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSAncmltYmxlLXVpJztcclxuXHJcbmNvbnN0IE5vbWluYXRpb25Nb2RhbCA9ICh7IHBhcmNlbCwgcHJvcHMsIHVzZXJNYW5hQmFsYW5jZSwgZ2V0TmZ0QWRkcmVzcyB9KSA9PiB7XHJcblxyXG4gIGNvbnN0IHtkcml6emxlU3RhdGUsIGRyaXp6bGV9ID0gcHJvcHM7XHJcblxyXG4gIGNvbnN0IFtzaG93LCBzZXRTaG93XSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBoYW5kbGVTaG93ID0gKCkgPT4gc2V0U2hvdyh0cnVlKTtcclxuICBjb25zdCBoYW5kbGVDbG9zZSA9ICgpID0+IHNldFNob3coZmFsc2UpO1xyXG4gIGNvbnN0IFt0b2tlbklkLCBzZXRUb2tlbklkXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICBjb25zdCBteUhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xyXG4gIG15SGVhZGVycy5hcHBlbmQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gIGNvbnN0IGZldGNoRGV0YWlsc0xpbmsgPSBhc3luYyAoKSA9PiB7XHJcblxyXG4vLyAgIGNvbnN0IGdyYXBocWw9IEpTT04uc3RyaW5naWZ5KHsgcXVlcnk6IFxyXG4vLyAgIGB7IHBhcmNlbHMod2hlcmU6IHt4OlwiJHtwYXJjZWwueH1cIix5OlwiJHtwYXJjZWwueX1cIn0pIHsgdG9rZW5JZCB9fWBcclxuLy8gfSlcclxuXHJcbi8vV2l0aCBORlRBRERSRVNTKE5GVCBDT05UUkFDVCBBRERSRVNTKVxyXG5jb25zdCBncmFwaHFsPSBKU09OLnN0cmluZ2lmeSh7IHF1ZXJ5OiBcclxuICBgeyBwYXJjZWxzKHdoZXJlOiB7eDpcIiR7cGFyY2VsLnh9XCIseTpcIiR7cGFyY2VsLnl9XCJ9KSBcclxuICB7XHJcbiAgbmZ0e1xyXG4gICAgYWN0aXZlT3JkZXJ7XHJcbiAgICAgICAgT3JkZXI6XHJcbiAgICAgICAgbmZ0QWRkcmVzc1xyXG4gICAgICAgIHByaWNlXHJcbiAgICB9XHJcbiAgICB0b2tlbklkXHJcbiAgfVxyXG59XHJcbn1gXHJcbn0pXHJcblxyXG4gIGNvbnN0IHByb3h5VXJsID0gJ2h0dHBzOi8vY29ycy1hbnl3aGVyZS5oZXJva3VhcHAuY29tLycsXHJcbiAgdGFyZ2V0VXJsID0gJ2h0dHBzOi8vYXBpLnRoZWdyYXBoLmNvbS9zdWJncmFwaHMvbmFtZS9kZWNlbnRyYWxhbmQvbWFya2V0cGxhY2UnXHJcblxyXG4gIGZldGNoKHByb3h5VXJsICsgdGFyZ2V0VXJsLCB7XHJcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgaGVhZGVyczpteUhlYWRlcnMsICBcclxuICAgIGJvZHk6Z3JhcGhxbCwgdmFyaWFibGVzOnt9LFxyXG4gICAgcmVkaXJlY3Q6ICdmb2xsb3cnXHJcbiAgfSlcclxuICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxyXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgICBjb25zdCBwYXJjZWxEYXRhID0gcmVzdWx0LmRhdGEucGFyY2Vsc1swXTtcclxuICAgICAgcmV0dXJuIHBhcmNlbERhdGE7XHJcbiAgICB9KVxyXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4geyBcclxuICAgICAgY29uc3QgeyBuZnQgfSA9IHJlc3VsdDtcclxuICAgICAgY29uc3QgeyB0b2tlbklkIH0gPSBuZnQ7XHJcbiAgICAgIGNvbnN0IE5mdEFkZHJlc3MgPSBuZnQuYWN0aXZlT3JkZXIuT3JkZXJcclxuICAgICAgc2V0VG9rZW5JZCh0b2tlbklkKTtcclxuICAgICAgLy9nZXROZnRBZGRyZXNzKG5mdEFkZHJlc3MpO1xyXG4gICAgICBjb25zb2xlLmxvZyh0b2tlbklkKVxyXG4gICAgfSlcclxuICAgIC8vIC50aGVuKChyZXN1bHQpID0+IHsgXHJcbiAgICAvLyAgIGNvbnN0IHsgdG9rZW5JZCB9ID0gcmVzdWx0O1xyXG4gICAgLy8gICBzZXRUb2tlbklkKHRva2VuSWQpO1xyXG4gICAgLy8gfSlcclxuICB9O1xyXG5mZXRjaERldGFpbHNMaW5rKCk7XHJcblxyXG59LCBbXSk7XHJcblxyXG5cclxucmV0dXJuICggICBcclxuICAgICAgPD4gXHJcbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1sZyBidG4tYmxvY2sgY2FyZC1mb290ZXItYnRuXCIgb25DbGljaz17aGFuZGxlU2hvd30+XHJcbiAgICAgICAgICBOb21pbmF0ZSBBc3NldFxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDxNb2RhbCBjbGFzc05hbWU9XCJub21pbnRhdGlvbi1tb2RhbFwiIHNob3c9e3Nob3d9IG9uSGlkZT17aGFuZGxlQ2xvc2V9PlxyXG4gICAgICAgICAgPE1vZGFsLkhlYWRlciBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyXCIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICAgIDxNb2RhbC5UaXRsZSBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyXCI+Q3VycmVudCBQcmljZTombmJzcDt7cGFyY2VsLnB1YmxpY2F0aW9uLnByaWNlfSZuYnNwO01BTkFcclxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibWFuYS1iYWxhbmNlIG1iLTFcIiA+WW91ciBNQU5BIEJhbGFuY2U6Jm5ic3A7e2Ake3VzZXJNYW5hQmFsYW5jZX1gfTwvcD5cclxuICAgICAgICAgIDwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgICA8TW9kYWwuQm9keSBjbGFzc05hbWU9XCJwdC0xIGFsaWduLWl0ZW1zLWNlbnRlclwiPlxyXG4gICAgICAgICB7dG9rZW5JZCAhPT0gbnVsbCA/ICAgXHJcbiAgICAgICAgICA8UHJvcG9zYWxGb3JtICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGFzc2V0UHJpY2U9e3BhcmNlbC5wdWJsaWNhdGlvbi5wcmljZX0gIFxyXG4gICAgICAgICAgICBwcm9wcz17cHJvcHN9XHJcbiAgICAgICAgICAgIGRyaXp6bGU9e2RyaXp6bGV9XHJcbiAgICAgICAgICAgIGRyaXp6bGVTdGF0ZT17ZHJpenpsZVN0YXRlfVxyXG4gICAgICAgICAgICB0b2tlbklkPXt0b2tlbklkfVxyXG4gICAgICAgICAgICB1c2VyTWFuYUJhbGFuY2U9e3VzZXJNYW5hQmFsYW5jZX1cclxuICAgICAgICAgICAgLz4gXHJcbiAgICAgICAgICA6XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWxpZ24taXRlbXMtY2VudGVyXCI+ICAgXHJcbiAgICAgICAgICAgIHt0b2tlbklkfSBOb21pbmF0aW9uIE1vZGFsIDc2XHJcbiAgICAgICAgICAgICAgPExvYWRlciBjbGFzc05hbWU9XCJteC1hdXRvXCIgY29sb3I9XCIjMDA3YmZmXCIgc2l6ZT1cIjQwcHhcIiAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIH0gXHJcbiAgICAgICAgICA8L01vZGFsLkJvZHk+XHJcbiAgICAgICAgPC9Nb2RhbD5cclxuICAgICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgICAge2AgIC5ub21pbnRhdGlvbi1tb2RhbHtmb250LWZhbWlseTogUG9wcGluczt9XHJcbiAgICAgICAgICAgICAgLm1hbmEtYmFsYW5jZXtmb250LXNpemU6LjhyZW07Y29sb3I6IzY2YTNmZjtmb250LXdlaWdodDogMjAwO3RleHQtYWxpZ246bGVmdH1cclxuICAgICAgICAgIGB9ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIDwvc3R5bGU+XHJcbiAgICAgIDwvPlxyXG4gICAgICAgICk7ICAgIFxyXG4gICAgICB9IFxyXG4gIFxyXG4gICAgICAgIGNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IChkaXNwYXRjaCkgPT4gKHtcclxuICAgICAgICAgIGdldFRva2VuSWQ6ICh0b2tlbklkKSA9PiAgZGlzcGF0Y2goeyB0eXBlOiBcIlNFVF9UT0tFTl9JRFwiLCB0b2tlbklkOnRva2VuSWQgfSksXHJcbiAgICAgICAgICBnZXROZnRBZGRyZXNzOiAobmZ0QWRkcmVzcykgPT4gIGRpc3BhdGNoKHsgdHlwZTogXCJTRVRfTmZ0QWRkcmVzc1wiLCBOZnRBZGRyZXNzOm5mdEFkZHJlc3MgfSksXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobnVsbCwgbWFwRGlzcGF0Y2hUb1Byb3BzKShOb21pbmF0aW9uTW9kYWwpO1xyXG4gICAgICJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Samsung\\\\\\\\code\\\\\\\\cacp\\\\\\\\client\\\\\\\\components\\\\\\\\modals\\\\\\\\NominationModal.js */\"));\n};\n\n_s(NominationModal, \"K6fPIWpUWpwx+sITH8fqz4lRPf4=\");\n\n_c = NominationModal;\n\nconst mapDispatchToProps = dispatch => ({\n  getTokenId: tokenId => dispatch({\n    type: \"SET_TOKEN_ID\",\n    tokenId: tokenId\n  }),\n  getNftAddress: nftAddress => dispatch({\n    type: \"SET_NftAddress\",\n    NftAddress: nftAddress\n  })\n});\n\nexport default connect(null, mapDispatchToProps)(NominationModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"NominationModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/NominationModal.js"],"names":["React","useState","useEffect","Modal","NominationForm","connect","Web3","ProposalForm","Loader","NominationModal","parcel","props","userManaBalance","getNftAddress","drizzleState","drizzle","show","setShow","handleShow","handleClose","tokenId","setTokenId","myHeaders","Headers","append","fetchDetailsLink","graphql","JSON","stringify","query","x","y","proxyUrl","targetUrl","fetch","method","headers","body","variables","redirect","then","res","json","result","parcelData","data","parcels","nft","NftAddress","activeOrder","Order","console","log","publication","price","mapDispatchToProps","dispatch","getTokenId","type","nftAddress"],"mappings":"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","sourcesContent":["  \r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport NominationForm from '../forms/NominationForm';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from 'web3';\r\nimport ProposalForm from '../forms/ProposalForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst NominationModal = ({ parcel, props, userManaBalance, getNftAddress }) => {\r\n\r\n  const {drizzleState, drizzle} = props;\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n  const [tokenId, setTokenId] = useState(null);\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  useEffect(() => {\r\n  const fetchDetailsLink = async () => {\r\n\r\n//   const graphql= JSON.stringify({ query: \r\n//   `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) { tokenId }}`\r\n// })\r\n\r\n//With NFTADDRESS(NFT CONTRACT ADDRESS)\r\nconst graphql= JSON.stringify({ query: \r\n  `{ parcels(where: {x:\"${parcel.x}\",y:\"${parcel.y}\"}) \r\n  {\r\n  nft{\r\n    activeOrder{\r\n        Order:\r\n        nftAddress\r\n        price\r\n    }\r\n    tokenId\r\n  }\r\n}\r\n}`\r\n})\r\n\r\n  const proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n  targetUrl = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace'\r\n\r\n  fetch(proxyUrl + targetUrl, {\r\n    method: \"POST\",\r\n    headers:myHeaders,  \r\n    body:graphql, variables:{},\r\n    redirect: 'follow'\r\n  })\r\n    .then(res => res.json())\r\n    .then((result) => {\r\n      const parcelData = result.data.parcels[0];\r\n      return parcelData;\r\n    })\r\n    .then((result) => { \r\n      const { nft } = result;\r\n      const { tokenId } = nft;\r\n      const NftAddress = nft.activeOrder.Order\r\n      setTokenId(tokenId);\r\n      //getNftAddress(nftAddress);\r\n      console.log(tokenId)\r\n    })\r\n    // .then((result) => { \r\n    //   const { tokenId } = result;\r\n    //   setTokenId(tokenId);\r\n    // })\r\n  };\r\nfetchDetailsLink();\r\n\r\n}, []);\r\n\r\n\r\nreturn (   \r\n      <> \r\n        <button type=\"button\" className=\"btn btn-lg btn-block card-footer-btn\" onClick={handleShow}>\r\n          Nominate Asset\r\n        </button>\r\n        <Modal className=\"nomintation-modal\" show={show} onHide={handleClose}>\r\n          <Modal.Header className=\"text-center justify-content-center\" closeButton>\r\n            <Modal.Title className=\"text-center justify-content-center\">Current Price:&nbsp;{parcel.publication.price}&nbsp;MANA\r\n            <p className=\"mana-balance mb-1\" >Your MANA Balance:&nbsp;{`${userManaBalance}`}</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n          <Modal.Body className=\"pt-1 align-items-center\">\r\n         {tokenId !== null ?   \r\n          <ProposalForm                  \r\n            assetPrice={parcel.publication.price}  \r\n            props={props}\r\n            drizzle={drizzle}\r\n            drizzleState={drizzleState}\r\n            tokenId={tokenId}\r\n            userManaBalance={userManaBalance}\r\n            /> \r\n          :\r\n            <div className=\"align-items-center\">   \r\n            {tokenId} Nomination Modal 76\r\n              <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n            </div>\r\n          } \r\n          </Modal.Body>\r\n        </Modal>\r\n        <style jsx>\r\n          {`  .nomintation-modal{font-family: Poppins;}\r\n              .mana-balance{font-size:.8rem;color:#66a3ff;font-weight: 200;text-align:left}\r\n          `}                \r\n        </style>\r\n      </>\r\n        );    \r\n      } \r\n  \r\n        const mapDispatchToProps = (dispatch) => ({\r\n          getTokenId: (tokenId) =>  dispatch({ type: \"SET_TOKEN_ID\", tokenId:tokenId }),\r\n          getNftAddress: (nftAddress) =>  dispatch({ type: \"SET_NftAddress\", NftAddress:nftAddress }),\r\n        });\r\n        \r\n        \r\nexport default connect(null, mapDispatchToProps)(NominationModal);\r\n     "]},"metadata":{},"sourceType":"module"}