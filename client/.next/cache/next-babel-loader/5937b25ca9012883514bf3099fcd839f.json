{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\EthComponents\\\\AccountsContainer.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport MyAddBar from \"./AddressBar.js\";\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { Drizzle } from \"@drizzle/store\";\nimport options from \"./drizzleOptions\";\nimport { Loader } from 'rimble-ui';\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\nconst drizzle = new Drizzle(options);\n\nconst Address = () => {\n  return __jsx(DrizzleContext.Provider, {\n    drizzle: drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(DrizzleContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, drizzleContext => {\n    const {\n      drizzle,\n      drizzleState,\n      initialized\n    } = drizzleContext;\n\n    if (!initialized) {\n      return __jsx(Loader, {\n        size: \"30px\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const {\n      accounts\n    } = drizzleState;\n    const account = drizzleState.accounts[0];\n    let isMember;\n\n    isMember = async account => {\n      await drizzle.contracts.UserStorage.methods.addresses(account).call(); // return false;\n    };\n\n    console.log({\n      isMember\n    }); //const ember = isMember(account);\n\n    let button;\n\n    if ({\n      isMember\n    }) {\n      button = __jsx(MyAddBar, {\n        drizzleState: drizzleState,\n        drizzle: drizzle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }\n      });\n      console.log({\n        isMember\n      });\n    } else {\n      button = __jsx(JoinButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }\n      });\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, button);\n  }));\n};\n\nexport default Address;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/EthComponents/AccountsContainer.js"],"names":["React","UserInfo","MyAddBar","DrizzleContext","Drizzle","options","Loader","JoinButton","drizzle","Address","drizzleContext","drizzleState","initialized","accounts","account","isMember","contracts","UserStorage","methods","addresses","call","console","log","button"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAUC,MAAV,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,CAAYC,OAAZ,CAAhB;;AAEA,MAAOI,OAAO,GAAG,MAAM;AACrB,SACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,OAAO,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,IAAI;AACjB,UAAM;AAACF,MAAAA,OAAD;AAAUG,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,QAAwCF,cAA9C;;AAEA,QAAG,CAACE,WAAJ,EAAiB;AACf,aAAO,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAeF,YAArB;AACA,UAAMG,OAAO,GAAGH,YAAY,CAACE,QAAb,CAAsB,CAAtB,CAAhB;AACA,QAAIE,QAAJ;;AACAA,IAAAA,QAAQ,GAAG,MAAOD,OAAP,IAAmB;AAC/B,YAAMN,OAAO,CAACQ,SAAR,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCC,SAAtC,CAAgDL,OAAhD,EAAyDM,IAAzD,EAAN,CAD+B,CAE7B;AAEA,KAJD;;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACP,MAAAA;AAAD,KAAZ,EAfiB,CAgBjB;;AACE,QAAIQ,MAAJ;;AAEF,QAAI;AAACR,MAAAA;AAAD,KAAJ,EAAgB;AACZQ,MAAAA,MAAM,GAAG,MAAC,QAAD;AAAU,QAAA,YAAY,EAAEZ,YAAxB;AAAsC,QAAA,OAAO,EAAEH,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACJa,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACP,QAAAA;AAAD,OAAZ;AACG,KAHH,MAGS;AACLQ,MAAAA,MAAM,GAAG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,MADH,CADF;AAKH,GAhCH,CADF,CADF;AAuCD,CAxCD;;AAyCA,eAAed,OAAf","sourcesContent":["import React from \"react\";\r\nimport UserInfo from \"./UserInfo\"; \r\nimport MyAddBar from \"./AddressBar.js\"; \r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport options from \"./drizzleOptions\";\r\nimport {  Loader } from 'rimble-ui';\r\nimport JoinButton from \"../components/Buttons/JoinButton.js\";\r\n\r\nconst drizzle = new Drizzle(options);\r\n\r\nconst  Address = () => {\r\n  return  (\r\n    <DrizzleContext.Provider drizzle={drizzle}>\r\n      <DrizzleContext.Consumer>\r\n        {drizzleContext => {\r\n          const {drizzle, drizzleState, initialized } = drizzleContext;\r\n          \r\n          if(!initialized) {\r\n            return <Loader size=\"30px\" color=\"white\" />\r\n          }\r\n\r\n          const { accounts } = drizzleState;\r\n          const account = drizzleState.accounts[0];\r\n          let isMember;\r\n          isMember = async (account) => {\r\n         await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n           // return false;\r\n         \r\n          } \r\n          console.log({isMember})\r\n          //const ember = isMember(account);\r\n            let button;\r\n\r\n          if ({isMember}) {\r\n              button = <MyAddBar drizzleState={drizzleState} drizzle={drizzle} /> \r\n          console.log({isMember})\r\n            } else {\r\n              button = <JoinButton />\r\n            }\r\n        \r\n            return (\r\n              <div>\r\n                {button}\r\n              </div>\r\n            );\r\n        }}\r\n      </DrizzleContext.Consumer>\r\n    </DrizzleContext.Provider>\r\n);\r\n  \r\n}\r\nexport default Address;"]},"metadata":{},"sourceType":"module"}