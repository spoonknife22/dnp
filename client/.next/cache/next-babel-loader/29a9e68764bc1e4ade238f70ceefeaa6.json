{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Progress, Slider } from \"shards-react\";\nimport Web3 from \"web3\";\nimport ContributeForm from '../forms/ContributeForm';\nimport ProposalStorageAbi from '../../artifacts/contracts/ProposalStorageAbi';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = ({\n  drizzleState,\n  drizzle,\n  state,\n  handleSlide,\n  propAddress,\n  tokenId,\n  assetPrice,\n  newAbi\n}) => {\n  _s();\n\n  console.log(newAbi); //const newAbi = ProposalStorageAbi;\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var web3, proposalAddress, contractConfig, propBalance, proposalBalance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            web3 = new Web3(\"HTTP://127.0.0.1:7545\");\n\n            if (!(propAddress === null)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return drizzle.contracts.ProposalController.methods.getPropTokenIdMap(\"\".concat(tokenId)).call();\n\n          case 4:\n            proposalAddress = _context.sent;\n            contractConfig = {\n              contractName: \"ProposalStorage\",\n              web3Contract: new web3.eth.Contract(newAbi, \"\".concat(proposalAddress))\n            };\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              drizzle.addContract(contractConfig);\n            }\n\n          case 7:\n            if (propAddress !== null) {\n              contractConfig = {\n                contractName: \"ProposalStorage\",\n                web3Contract: new web3.eth.Contract(newAbi, \"\".concat(propAddress))\n              };\n\n              if (!drizzle.contracts['ProposalStorage']) {\n                drizzle.addContract(contractConfig);\n              }\n            }\n\n            if (!drizzle.contracts['ProposalStorage']) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 11;\n            return drizzle.contracts.ProposalStorage.methods.proposals(\"\".concat(tokenId)).call();\n\n          case 11:\n            propBalance = _context.sent;\n            _context.next = 14;\n            return propBalance.balance;\n\n          case 14:\n            proposalBalance = _context.sent;\n            drizzle.store.dispatch({\n              type: 'PROPOSAL_BALANCE',\n              balance: \"\".concat(proposalBalance)\n            });\n            _context.next = 19;\n            break;\n\n          case 18:\n            __jsx(\"div\", {\n              className: \"mx-auto\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 5\n              }\n            }, __jsx(Loader, {\n              color: \"#007bff\",\n              size: \"40px\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 7\n              }\n            }));\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (tokenId !== null) {\n    useEffect(() => {\n      fetchProposalAddress();\n    }, [propAddress]);\n  } //let value  = state.value;\n  // let contractBalance = drizzleState.appReducers.balance;\n  // let valueSlider = state.valueSlider;\n  // let maxRanger = `${assetPrice}`;\n  // let maxRange = parseInt(maxRanger);\n  // let minRange = contractBalance;\n  // let progressMax = maxRange-minRange;\n\n\n  return __jsx(React.Fragment, null, __jsx(ContributeForm, {\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    assetPrice: assetPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }));\n};\n\n_s(ContributeInnnerModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ContributeInnnerModal;\nexport default ContributeInnnerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeInnnerModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","Progress","Slider","Web3","ContributeForm","ProposalStorageAbi","Loader","ContributeInnnerModal","drizzleState","drizzle","state","handleSlide","propAddress","tokenId","assetPrice","newAbi","console","log","fetchProposalAddress","web3","contracts","ProposalController","methods","getPropTokenIdMap","call","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","addContract","ProposalStorage","proposals","propBalance","balance","proposalBalance","store","dispatch","type"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,cAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,qBAAqB,GAAI,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA,WAAhC;AAA6CC,EAAAA,WAA7C;AAA0DC,EAAAA,OAA1D;AAAmEC,EAAAA,UAAnE;AAA+EC,EAAAA;AAA/E,CAAD,KAA6F;AAAA;;AAC1HC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAD0H,CAE1H;;AAEA,QAAMG,oBAAoB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAEzBC,YAAAA,IAFyB,GAElB,IAAIhB,IAAJ,CAAS,uBAAT,CAFkB;;AAAA,kBAG1BS,WAAW,KAAK,IAHU;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAICH,OAAO,CAACW,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6CC,iBAA7C,WAAkEV,OAAlE,GAA6EW,IAA7E,EAJD;;AAAA;AAIvBC,YAAAA,eAJuB;AAKvBC,YAAAA,cALuB,GAKN;AACrBC,cAAAA,YAAY,EAAE,iBADO;AAErBC,cAAAA,YAAY,EAAE,IAAIT,IAAI,CAACU,GAAL,CAASC,QAAb,CAAsBf,MAAtB,YAAiCU,eAAjC;AAFO,aALM;;AAS7B,gBAAI,CAAChB,OAAO,CAACW,SAAR,CAAkB,iBAAlB,CAAL,EAA2C;AACzCX,cAAAA,OAAO,CAACsB,WAAR,CAAoBL,cAApB;AACC;;AAX0B;AAc7B,gBAAGd,WAAW,KAAK,IAAnB,EAAwB;AAChBc,cAAAA,cADgB,GACC;AACrBC,gBAAAA,YAAY,EAAE,iBADO;AAErBC,gBAAAA,YAAY,EAAE,IAAIT,IAAI,CAACU,GAAL,CAASC,QAAb,CAAsBf,MAAtB,YAAiCH,WAAjC;AAFO,eADD;;AAKtB,kBAAI,CAACH,OAAO,CAACW,SAAR,CAAkB,iBAAlB,CAAL,EAA2C;AACzCX,gBAAAA,OAAO,CAACsB,WAAR,CAAoBL,cAApB;AACD;AACF;;AAtB4B,iBAuB1BjB,OAAO,CAACW,SAAR,CAAkB,iBAAlB,CAvB0B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAwBHX,OAAO,CAACW,SAAR,CAAkBY,eAAlB,CAAkCV,OAAlC,CAA0CW,SAA1C,WAAuDpB,OAAvD,GAAkEW,IAAlE,EAxBG;;AAAA;AAwBvBU,YAAAA,WAxBuB;AAAA;AAAA,mBAyBCA,WAAW,CAACC,OAzBb;;AAAA;AAyBvBC,YAAAA,eAzBuB;AA0B7B3B,YAAAA,OAAO,CAAC4B,KAAR,CAAcC,QAAd,CAAuB;AAAEC,cAAAA,IAAI,EAAC,kBAAP;AAA2BJ,cAAAA,OAAO,YAAIC,eAAJ;AAAlC,aAAvB;AA1B6B;AAAA;;AAAA;AA8B3B;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,IAAI,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AA9B2B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApBlB,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AAoCA,MAAGL,OAAO,KAAK,IAAf,EAAqB;AACrBd,IAAAA,SAAS,CAAC,MAAM;AACdmB,MAAAA,oBAAoB;AACrB,KAFQ,EAEN,CAACN,WAAD,CAFM,CAAT;AAGC,GA5CyH,CA8CxH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACM,4BAEA,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEH,OAAzB;AAAkC,IAAA,YAAY,EAAED,YAAhD;AAA8D,IAAA,UAAU,EAAEM,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADN;AAmCC,CAzFL;;GAAMP,qB;;KAAAA,qB;AA2FN,eAAeA,qBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Progress, Slider } from \"shards-react\";\r\nimport Web3 from \"web3\";\r\nimport ContributeForm from '../forms/ContributeForm';\r\nimport ProposalStorageAbi from '../../artifacts/contracts/ProposalStorageAbi';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal =  ({ drizzleState, drizzle, state, handleSlide, propAddress, tokenId, assetPrice, newAbi }) => {\r\n  console.log(newAbi)\r\n  //const newAbi = ProposalStorageAbi;\r\n  \r\n  const fetchProposalAddress = async () => {\r\n  \r\n  let web3 = new Web3(\"HTTP://127.0.0.1:7545\");\r\n  if(propAddress === null) {\r\n  const proposalAddress = await drizzle.contracts.ProposalController.methods.getPropTokenIdMap(`${tokenId}`).call(); \r\n  const contractConfig = {\r\n    contractName: \"ProposalStorage\",\r\n    web3Contract: new web3.eth.Contract(newAbi, `${proposalAddress}`)\r\n    }\r\n  if (!drizzle.contracts['ProposalStorage']) {\r\n    drizzle.addContract(contractConfig);\r\n    } \r\n  }\r\n  \r\n  if(propAddress !== null){\r\n    const contractConfig = {\r\n      contractName: \"ProposalStorage\",\r\n      web3Contract: new web3.eth.Contract(newAbi, `${propAddress}`)\r\n    };\r\n    if (!drizzle.contracts['ProposalStorage']) {\r\n      drizzle.addContract(contractConfig);\r\n    }\r\n  }\r\n  if(drizzle.contracts['ProposalStorage']){\r\n  const propBalance = await drizzle.contracts.ProposalStorage.methods.proposals(`${tokenId}`).call();\r\n  const proposalBalance = await propBalance.balance;\r\n  drizzle.store.dispatch({ type:'PROPOSAL_BALANCE', balance:`${proposalBalance}` });\r\n    }\r\n  \r\n  else {\r\n    <div className=\"mx-auto\">   \r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }  \r\n  }\r\n  \r\n  if(tokenId !== null) {\r\n  useEffect(() => {\r\n    fetchProposalAddress();\r\n  }, [propAddress]);\r\n  }\r\n  \r\n    //let value  = state.value;\r\n    // let contractBalance = drizzleState.appReducers.balance;\r\n    // let valueSlider = state.valueSlider;\r\n    // let maxRanger = `${assetPrice}`;\r\n    // let maxRange = parseInt(maxRanger);\r\n    // let minRange = contractBalance;\r\n    // let progressMax = maxRange-minRange;\r\n  \r\n    return ( \r\n          <>\r\n\r\n          <ContributeForm drizzle={drizzle} drizzleState={drizzleState} assetPrice={assetPrice} />\r\n            {/* <div className=\"contribution-modal\">\r\n              <div className=\"current-price\">\r\n                <Progress value={minRange} max={maxRange} >{minRange}</Progress>\r\n                <p className=\"mt-2 mb-1\" >Current Price:&nbsp;{`${assetPrice}`}&nbsp;MANA</p>\r\n                <p className=\" mana-balance mt-2 mb-1\" >Your MANA Balance:&nbsp;{`${userManaBalance}`}</p>\r\n              </div>\r\n              <div>\r\n              <p className=\"mt-4 mb-1\" >Current Pool Depth: {minRange} MANA</p>\r\n                <Slider\r\n                  theme=\"success\"\r\n                  step={.01}\r\n                  pips={{ mode: \"range\", stepped: true, density: 3 }}\r\n                  onSlide={handleSlide}\r\n                  connect={[true, false]}\r\n                  start={[valueSlider]}\r\n                  range={{ min: 0, max: progressMax }}\r\n                />\r\n              </div>  \r\n              <div className=\"mt-4\">{valueSlider} MANA&nbsp;<span className=\"min-amount-text\">(min. 100 MANA)</span></div>               \r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <ContributeForm state={state} valueSlider={valueSlider} drizzle={drizzle} drizzleState={drizzleState} handleSlide={handleSlide} />\r\n            </div>\r\n            <style jsx>\r\n                {`  .contribution-modal{font-family: Poppins;}\r\n                    .min-amount-text {font-size:.7rem;}\r\n                    .mana-balance{font-size:.9rem;color:#007bff;}\r\n                `}                \r\n              </style> */}\r\n          </>\r\n           );    \r\n    } \r\n\r\nexport default ContributeInnnerModal;"]},"metadata":{},"sourceType":"module"}