{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\pages\\\\openseasdk.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from \"react\";\nimport { Container } from \"shards-react\"; //import OsSdk from '../components/api/OsSdk.js';\n\nimport OutterOsSdk from '../components/api/OutterOsSdk.js';\nimport { Page, Center } from '../components/layout/Layout.js';\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\nimport { Loader } from 'rimble-ui';\nexport default class SdkPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null\n    });\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _useState, projectTokenIds, setprojectTokenIds, proxyUrl, targetUrl, collectionSlug, collection, i, tokenIdArray;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            //const [projectTotal, setProjectTotal] = useState(0);\n            //const [loading, setLoading] = useState(false);\n            _useState = useState([]), projectTokenIds = _useState[0], setprojectTokenIds = _useState[1]; //const [projectTokenIdArray, setprojectTokenIdArray] = useState([]);\n            //const fetchStats = async () => { \n\n            proxyUrl = 'https://cors-anywhere.herokuapp.com/', targetUrl = 'https://api.opensea.io/api/v1/collection/';\n            collectionSlug = 'doodles-official/';\n            collection = 'stats';\n            tokenIdArray = [];\n            console.log(projectTokenIds); //setprojectTokenIds(tokenIdArray);\n\n            try {\n              fetch(targetUrl + collectionSlug + collection, {\n                header: 'x-api-key:2f2a0900458f4bdfbb489680a58e7526'\n              }).then(res => res.json()).then(res => {\n                setProjectTotal(res.stats.count);\n\n                for (i = 0; i < res.stats.count; i++) {\n                  tokenIdArray.push(i);\n                }\n\n                error => {\n                  setLoading(true), error;\n                };\n              }).then(() => {\n                setprojectTokenIds(tokenIdArray);\n\n                error => {\n                  setLoading(true), error;\n                };\n              }); // this.setState({ dataKey });\n            } catch (err) {\n              _this.setState({\n                errorMessage: err.message\n              });\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, __jsx(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, __jsx(DrizzleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, drizzleContext => {\n      const drizzle = drizzleContext.drizzle,\n            drizzleState = drizzleContext.drizzleState,\n            initialized = drizzleContext.initialized;\n\n      if (!initialized) {\n        return __jsx(\"div\", {\n          className: \"justify-content-center align-items-center mt-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }\n        }, __jsx(Loader, {\n          className: \"mx-auto\",\n          color: \"#007bff\",\n          size: \"40px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 31\n          }\n        }));\n      }\n\n      return __jsx(Container, {\n        fluid: true,\n        className: \"d-flex justify-content-center main-container-pp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/pages/openseasdk.js"],"names":["React","Component","useEffect","useState","Container","OutterOsSdk","Page","Center","DrizzleContext","Loader","SdkPage","dataKey","componentDidMount","projectTokenIds","setprojectTokenIds","proxyUrl","targetUrl","collectionSlug","collection","tokenIdArray","console","log","fetch","header","then","res","json","setProjectTotal","stats","count","i","push","error","setLoading","err","setState","errorMessage","message","render","drizzleContext","drizzle","drizzleState","initialized"],"mappings":"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","sourcesContent":["import  React, { Component, useEffect, useState  } from \"react\";\r\nimport { Container  } from \"shards-react\";\r\n//import OsSdk from '../components/api/OsSdk.js';\r\nimport OutterOsSdk from '../components/api/OutterOsSdk.js';\r\nimport { Page, Center } from '../components/layout/Layout.js';\r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport {  Loader } from 'rimble-ui';\r\n\r\n\r\nexport default class SdkPage extends Component {\r\n   \r\n    \r\n\r\nstate = { dataKey: null };\r\n\r\n    async componentDidMount() {\r\n \r\n        //const [projectTotal, setProjectTotal] = useState(0);\r\n        //const [loading, setLoading] = useState(false);\r\n        const [projectTokenIds, setprojectTokenIds] = useState([]);\r\n        //const [projectTokenIdArray, setprojectTokenIdArray] = useState([]);\r\n        //const fetchStats = async () => { \r\n   \r\n            var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n            targetUrl = 'https://api.opensea.io/api/v1/collection/';\r\n            const collectionSlug= 'doodles-official/';\r\n            const collection='stats';\r\n           \r\n            let i;\r\n            let tokenIdArray= [];\r\n            console.log(projectTokenIds)\r\n            //setprojectTokenIds(tokenIdArray);\r\n            try {\r\n            fetch(targetUrl + collectionSlug + collection,{header:'x-api-key:2f2a0900458f4bdfbb489680a58e7526'})\r\n              .then(res => res.json())\r\n              .then(\r\n                (res) => {\r\n                   setProjectTotal(res.stats.count)\r\n                   for (i = 0; i < res.stats.count; i++) {\r\n                   tokenIdArray.push(i)\r\n                  }           \r\n                  (error) => {\r\n                    setLoading(true),\r\n                    error;\r\n                  }\r\n                })   \r\n                .then( () => {\r\n                    setprojectTokenIds(tokenIdArray);\r\n                      (error) => {\r\n                        setLoading(true),\r\n                        error;\r\n                      }\r\n                })     \r\n                \r\n    \r\n     // this.setState({ dataKey });\r\n      }\r\n      catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n      }\r\n     }\r\n  \r\n\r\n\r\n\r\nrender() {\r\n    return (    \r\n            <div>\r\n              <Page>\r\n                <Center>\r\n                  <DrizzleContext.Consumer>\r\n                    {drizzleContext => {\r\n                     const {drizzle, drizzleState, initialized } = drizzleContext;\r\n                        if(!initialized) {\r\n                          return (\r\n                            <div className=\"justify-content-center align-items-center mt-3\">   \r\n                              <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n                            </div>\r\n                            )\r\n                          }                       \r\n                          return(\r\n                            <Container fluid className=\"d-flex justify-content-center main-container-pp\">                               \r\n                              {/* <OutterOsSdk  drizzleState={drizzleState} drizzle={drizzle}  /> */}\r\n                            </Container>\r\n                          )\r\n                       }\r\n                      }  \r\n                  </DrizzleContext.Consumer>\r\n                </Center>\r\n              </Page>    \r\n            </div>\r\n       \r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}