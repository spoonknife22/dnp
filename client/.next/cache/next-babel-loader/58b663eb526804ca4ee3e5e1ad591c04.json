{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\ProposalAddress.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // function DispatchAddress(props) {\n//   const { proposalAddress, drizzle } = props;\n//   drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\n//   return ( \n//     <div>\n//       Hello Again: {proposalAddress}\n//     </div>\n// )\n// }\n\nclass ProposalAddress extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataKey: null,\n      drizzleState: null,\n      tokenIdState: null,\n      drizzle: null\n    });\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          drizzle = _this$props.drizzle,\n          tokenIdState = _this$props.tokenIdState,\n          drizzleState = _this$props.drizzleState;\n    const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(\"\".concat(tokenIdState));\n    const ProposalController = drizzleState.contracts.ProposalController;\n    const displayData = ProposalController.getPropTokenIdMap[\"\".concat(dataKey)];\n    this.setState({\n      dataKey,\n      tokenIdState,\n      displayData\n    });\n  }\n\n  render() {\n    const displayData = this.state.displayData; // const { ProposalController } = this.props.drizzleState.contracts;\n    // const displayData = ProposalController.getPropTokenIdMap[`${this.state.dataKey}`];\n\n    const proposalAddress = displayData && displayData.value;\n    console.log(displayData, proposalAddress); //this.props.drizzle.store.dispatch({ type: \"GET_PROP_ADDRESS\", proposalAddress:proposalAddress });\n    //this.props.drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Hello: \", proposalAddress);\n  }\n\n}\n\nexport default ProposalAddress;","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/ProposalAddress.js"],"names":["React","ProposalAddress","Component","dataKey","drizzleState","tokenIdState","drizzle","componentDidMount","props","contracts","ProposalController","methods","cacheCall","displayData","getPropTokenIdMap","setState","render","state","proposalAddress","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAAA;AAAA;;AAAA,mCACrC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAC,IAA9B;AAAoCC,MAAAA,YAAY,EAAC,IAAjD;AAAuDC,MAAAA,OAAO,EAAC;AAA/D,KADqC;AAAA;;AAG9CC,EAAAA,iBAAiB,GAAG;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACVF,OADU,eACVA,OADU;AAAA,UACDD,YADC,eACDA,YADC;AAAA,UACaD,YADb,eACaA,YADb;AAElB,UAAMD,OAAO,GAAGG,OAAO,CAACG,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6C,mBAA7C,EAAkEC,SAAlE,WAA+EP,YAA/E,EAAhB;AAFkB,UAGVK,kBAHU,GAGaN,YAAY,CAACK,SAH1B,CAGVC,kBAHU;AAIlB,UAAMG,WAAW,GAAGH,kBAAkB,CAACI,iBAAnB,WAAwCX,OAAxC,EAApB;AACA,SAAKY,QAAL,CAAc;AAAEZ,MAAAA,OAAF;AAAWE,MAAAA,YAAX;AAAyBQ,MAAAA;AAAzB,KAAd;AACA;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACAH,WADA,GACgB,KAAKI,KADrB,CACAJ,WADA,EAER;AACA;;AACA,UAAMK,eAAe,GAAIL,WAAW,IAAIA,WAAW,CAACM,KAApD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ,EAAyBK,eAAzB,EALQ,CAMR;AACA;;AACC,WACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,eAAb,CADP;AAKD;;AAxB4C;;AA4B9C,eAAejB,eAAf","sourcesContent":["import React from 'react';\r\n\r\n// function DispatchAddress(props) {\r\n//   const { proposalAddress, drizzle } = props;\r\n//   drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\r\n//   return ( \r\n//     <div>\r\n//       Hello Again: {proposalAddress}\r\n//     </div>\r\n// )\r\n// }\r\n\r\nclass ProposalAddress extends React.Component {\r\n state = { dataKey: null, drizzleState:null, tokenIdState:null, drizzle:null };\r\n\r\ncomponentDidMount() {\r\n  const { drizzle, tokenIdState, drizzleState } = this.props;\r\n  const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(`${tokenIdState}`);   \r\n  const { ProposalController } = drizzleState.contracts;\r\n  const displayData = ProposalController.getPropTokenIdMap[`${dataKey}`];                                         \r\n  this.setState({ dataKey, tokenIdState, displayData });\r\n }\r\n  \r\n render() {\r\n  const { displayData } = this.state;\r\n  // const { ProposalController } = this.props.drizzleState.contracts;\r\n  // const displayData = ProposalController.getPropTokenIdMap[`${this.state.dataKey}`];\r\n  const proposalAddress =  displayData && displayData.value;\r\n  console.log(displayData, proposalAddress)\r\n  //this.props.drizzle.store.dispatch({ type: \"GET_PROP_ADDRESS\", proposalAddress:proposalAddress });\r\n  //this.props.drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\r\n   return ( \r\n          <div>Hello: {proposalAddress}\r\n          {/* <DispatchAddress proposalAddress={proposalAddress} drizzle={this.props.drizzle} /> */}\r\n          </div>\r\n      )\r\n }\r\n\r\n}\r\n\r\nexport default ProposalAddress;\r\n\r\n"]},"metadata":{},"sourceType":"module"}