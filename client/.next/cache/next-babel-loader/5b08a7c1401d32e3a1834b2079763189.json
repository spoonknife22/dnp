{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\pages\\\\innerTestPage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Navbar from '../components/layout/Navbar.js';\nimport HeadOne from '../components/layout/Head.js';\nimport Footer from '../components/layout/Footer.js';\nimport { connect, Provider } from 'react-redux';\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\";\nimport { ToastContainer } from 'react-toastify';\nimport { generateStore } from \"@drizzle/store\";\nimport drizzleOptions from \"../EthComponents/drizzleOptions\";\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\nimport rootSaga from '../middleware/sagas/fetchSaga';\nimport appSagas from '../middleware/sagas/rootSaga';\nimport reducer from '../middleware/reducers/appReducers.js';\n\nconst InnerTestPage = ({\n  propAddress,\n  getCurrentProp\n}) => {\n  getCurrentProp();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, console.log(propAddress), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"Hello\"));\n};\n\n_c = InnerTestPage;\n\nconst mapStateToProps = state => ({\n  propAddress: state.appReducers.propAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //onSetDrizzleState: (drizzleStateSet) => dispatch({ type: \"SET_DRIZZLE_STATE\", drizzle: drizzleStateSet }),\n  // getTokenId: (result) =>  dispatch({ type: \"TOKEN_ID_FETCH\", tokenId:result }),\n  getCurrentProp: () => dispatch({\n    type: \"GET_PROP_ADDRESS\",\n    propAddress: 3\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerTestPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"InnerTestPage\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/pages/innerTestPage.js"],"names":["React","Navbar","HeadOne","Footer","connect","Provider","DrizzleContext","DrizzleProvider","ToastContainer","generateStore","drizzleOptions","contractEventSaga","joinTransactionSaga","rootSaga","appSagas","reducer","InnerTestPage","propAddress","getCurrentProp","console","log","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,uBAAhD;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,cAAP,MAA4B,iCAA5B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,6BAAvD;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,OAAP,MAAoB,uCAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAcC,EAAAA;AAAd,CAAD,KAAoC;AACxDA,EAAAA,cAAc;AAChB,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACAC,OAAO,CAACC,GAAR,CAAYH,WAAZ,CADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAFF;AAUC,CAZD;;KAAMD,a;;AAcN,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAClCL,EAAAA,WAAW,EAAEK,KAAK,CAACC,WAAN,CAAkBN;AADG,CAAZ,CAAxB;;AAIC,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxC;AACA;AACCP,EAAAA,cAAc,EAAE,MAAOO,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA2BT,IAAAA,WAAW,EAAC;AAAvC,GAAD;AAHQ,CAAf,CAA3B;;AAMA,eAAeb,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,aAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport Navbar from '../components/layout/Navbar.js';\r\nimport HeadOne from '../components/layout/Head.js';\r\nimport Footer from '../components/layout/Footer.js'\r\nimport { connect, Provider } from 'react-redux';\r\nimport { DrizzleContext, DrizzleProvider } from \"@drizzle/react-plugin\"; \r\nimport { ToastContainer } from 'react-toastify';   \r\nimport { generateStore } from \"@drizzle/store\";\r\nimport drizzleOptions  from \"../EthComponents/drizzleOptions\";\r\nimport { contractEventSaga, joinTransactionSaga } from '../middleware/capMiddleWare';\r\nimport rootSaga from '../middleware/sagas/fetchSaga';\r\nimport appSagas from '../middleware/sagas/rootSaga';\r\nimport reducer from '../middleware/reducers/appReducers.js'\r\n\r\nconst InnerTestPage = ({ propAddress,getCurrentProp }) => {\r\n  getCurrentProp()\r\nreturn (\r\n\r\n  <div>\r\n {console.log(propAddress)}\r\n    <div>Hello</div>\r\n \r\n\r\n  </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  propAddress: state.appReducers.propAddress\r\n })\r\n \r\n const mapDispatchToProps = (dispatch) => ({\r\n   //onSetDrizzleState: (drizzleStateSet) => dispatch({ type: \"SET_DRIZZLE_STATE\", drizzle: drizzleStateSet }),\r\n   // getTokenId: (result) =>  dispatch({ type: \"TOKEN_ID_FETCH\", tokenId:result }),\r\n    getCurrentProp: () =>  dispatch({ type: \"GET_PROP_ADDRESS\",propAddress:3 })\r\n });\r\n \r\n export default connect(mapStateToProps, mapDispatchToProps)(InnerTestPage);"]},"metadata":{},"sourceType":"module"}