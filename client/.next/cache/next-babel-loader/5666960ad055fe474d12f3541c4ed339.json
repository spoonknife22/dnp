{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\ProposalAddress.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass ProposalAddress extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataKey: null,\n      drizzleState: null,\n      tokenIdState: null,\n      drizzle: null\n    };\n  } //state = { dataKey: null, drizzleState:null, tokenIdState:null, drizzle:null };\n\n\n  componentDidMount() {\n    const _this$props = this.props,\n          drizzle = _this$props.drizzle,\n          tokenIdState = _this$props.tokenIdState,\n          drizzleState = _this$props.drizzleState;\n    const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(\"\".concat(tokenIdState));\n    this.setState({\n      dataKey,\n      tokenIdState\n    });\n  }\n\n  render() {\n    const ProposalController = this.props.drizzleState.contracts.ProposalController;\n    const dataKey = this.state.dataKey;\n    const displayData = ProposalController.getPropTokenIdMap[\"\".concat(dataKey)];\n    const proposalAddress = displayData && displayData.value;\n    const getCurrentProp = this.props.getCurrentProp; //this.props.drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"Hello: \", proposalAddress);\n  }\n\n}\n\ngetCurrentProp(proposalAddress); // export default ProposalAddress;\n\nconst mapStateToProps = state => ({// tokenIdState: state.appReducers.tokenId,\n  // propAddress: state.appReducers.propAddress,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentProp: proposalAddress => dispatch({\n    type: \"GOT_PROP_ADDRESS\",\n    propAddress: proposalAddress\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalAddress);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/ProposalAddress.js"],"names":["React","connect","ProposalAddress","Component","constructor","props","state","dataKey","drizzleState","tokenIdState","drizzle","componentDidMount","contracts","ProposalController","methods","cacheCall","setState","render","displayData","getPropTokenIdMap","proposalAddress","value","getCurrentProp","mapStateToProps","mapDispatchToProps","dispatch","type","propAddress"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AACIC,MAAAA,YAAY,EAAC,IADjB;AACuBC,MAAAA,YAAY,EAAC,IADpC;AAC0CC,MAAAA,OAAO,EAAC;AADlD,KAAb;AAGD,GAN2C,CAO7C;;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,wBAC8B,KAAKN,KADnC;AAAA,UACVK,OADU,eACVA,OADU;AAAA,UACDD,YADC,eACDA,YADC;AAAA,UACaD,YADb,eACaA,YADb;AAElB,UAAMD,OAAO,GAAGG,OAAO,CAACE,SAAR,CAAkBC,kBAAlB,CAAqCC,OAArC,CAA6C,mBAA7C,EAAkEC,SAAlE,WAA+EN,YAA/E,EAAhB;AAEA,SAAKO,QAAL,CAAc;AAAET,MAAAA,OAAF;AAAWE,MAAAA;AAAX,KAAd;AACA;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,UAEAJ,kBAFA,GAEuB,KAAKR,KAAL,CAAWG,YAAX,CAAwBI,SAF/C,CAEAC,kBAFA;AAAA,UAGAN,OAHA,GAGY,KAAKD,KAHjB,CAGAC,OAHA;AAIR,UAAMW,WAAW,GAAGL,kBAAkB,CAACM,iBAAnB,WAAwCZ,OAAxC,EAApB;AACA,UAAMa,eAAe,GAAIF,WAAW,IAAIA,WAAW,CAACG,KAApD;AALQ,UAMDC,cANC,GAMiB,KAAKjB,KANtB,CAMDiB,cANC,EAOR;;AACC,WACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaF,eAAb,CADP;AAID;;AA5B4C;;AAiC9CE,cAAc,CAACF,eAAD,CAAd,C,CACA;;AAEA,MAAMG,eAAe,GAAIjB,KAAD,KAAY,CAClC;AACA;AAFkC,CAAZ,CAAxB;;AAKA,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACxCH,EAAAA,cAAc,EAAGF,eAAD,IAAsBK,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,WAAW,EAACP;AAAxC,GAAD;AADN,CAAf,CAA3B;;AAKA,eAAenB,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CtB,eAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProposalAddress extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataKey: null, drizzleState:null, tokenIdState:null, drizzle:null \r\n    }\r\n  }\r\n //state = { dataKey: null, drizzleState:null, tokenIdState:null, drizzle:null };\r\n\r\ncomponentDidMount() {\r\n  const { drizzle, tokenIdState, drizzleState } = this.props;\r\n  const dataKey = drizzle.contracts.ProposalController.methods[\"getPropTokenIdMap\"].cacheCall(`${tokenIdState}`);                                            \r\n\r\n  this.setState({ dataKey, tokenIdState });\r\n }\r\n  \r\n render() {\r\n\r\n  const { ProposalController } = this.props.drizzleState.contracts;\r\n  const { dataKey } = this.state;\r\n  const displayData = ProposalController.getPropTokenIdMap[`${dataKey}`];\r\n  const proposalAddress =  displayData && displayData.value;\r\n  const {getCurrentProp} = this.props;\r\n  //this.props.drizzle.store.dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress });\r\n   return ( \r\n          <div>Hello: {proposalAddress}\r\n          </div>\r\n      )\r\n }\r\n\r\n \r\n}\r\n\r\ngetCurrentProp(proposalAddress);\r\n// export default ProposalAddress;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // tokenIdState: state.appReducers.tokenId,\r\n  // propAddress: state.appReducers.propAddress,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCurrentProp: (proposalAddress) =>  dispatch({ type: \"GOT_PROP_ADDRESS\", propAddress:proposalAddress })\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalAddress);\r\n\r\n"]},"metadata":{},"sourceType":"module"}