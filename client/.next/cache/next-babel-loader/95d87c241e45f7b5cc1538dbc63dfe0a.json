{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dev_Account\\\\dnp\\\\client\\\\components\\\\api\\\\OsSdk.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network, OpenSeaAsset } from 'opensea-js';\nimport React, { Component, useEffect } from 'react';\nimport OpenSeaApi from \"./OpenSeaApi.js\";\nimport { OrderSide } from 'opensea-js/lib/types';\n\nconst OsSdk = tokenIdArray => {\n  _s();\n\n  const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\n  const seaport = new OpenSeaPort(provider, {\n    networkName: Network.Main,\n    apiKey: '2f2a0900458f4bdfbb489680a58e7526'\n  }); //calls to reach collection total\n\n  useEffect(() => {\n    let orderArray = [];\n    let i;\n    let j;\n    let offsetNum = 0;\n    let idArray = tokenIdArray.tokenIdArray;\n    const callsPerProject = Math.ceil(tokenIdArray.length / 50);\n    console.log(orderArray);\n\n    const fetchParcels = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$seaport$api$ge, orders, count;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return seaport.api.getOrders({\n                asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n                token_ids: [3396, 9998, 7024, 6508],\n                side: 0,\n                sale_kind: 0\n              });\n\n            case 2:\n              _yield$seaport$api$ge = _context.sent;\n              orders = _yield$seaport$api$ge.orders;\n              count = _yield$seaport$api$ge.count;\n              orderArray.push(orders);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fetchParcels() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchParcels();\n  }, []); // useEffect(() => {\n  // let orderArray = [];\n  // let i;\n  // let j;\n  // let offsetNum=0;\n  // let idArray = tokenIdArray.tokenIdArray;\n  // const callsPerProject = Math.ceil(tokenIdArray.length / 50);\n  //     const fetchParcels = async () => {\n  //         for (i = 0; i < callsPerProject; i++, offsetNum+=50) {\n  //         const  { orders } = await seaport.api.getOrders({\n  //             asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n  //             token_ids: [3396],\n  //             offset: offsetNum,\n  //             limit: 50,\n  //             side: 0,\n  //             sale_kind: 0,\n  //         })\n  //           .then(function(orders) {\n  //             orderArray.push(orders);\n  //             console.log(idArray)\n  //             orderArray.push(orders);\n  //         },\n  //           (error) => {\n  //            //setLoading(true),\n  //             error;\n  //           }\n  //         ) \n  //         }\n  //     }\n  //     fetchParcels();\n  // }, []);\n\n  return __jsx(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Hi Joe\"));\n};\n\n_s(OsSdk, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = OsSdk;\nexport default OsSdk; //https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=20&offset=0&order_by=created_date&order_direction=desc', options)\n\nvar _c;\n\n$RefreshReg$(_c, \"OsSdk\");","map":{"version":3,"sources":["C:/Users/Dev_Account/dnp/client/components/api/OsSdk.js"],"names":["Web3","OpenSeaPort","Network","OpenSeaAsset","React","Component","useEffect","OpenSeaApi","OrderSide","OsSdk","tokenIdArray","provider","providers","HttpProvider","seaport","networkName","Main","apiKey","orderArray","i","j","offsetNum","idArray","callsPerProject","Math","ceil","length","console","log","fetchParcels","api","getOrders","asset_contract_address","token_ids","side","sale_kind","orders","count","push"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,YAA/B,QAAoD,YAApD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAKA,MAAMC,KAAK,GAAIC,YAAD,IAAkB;AAAA;;AAEhC,QAAMC,QAAQ,GAAG,IAAIX,IAAI,CAACY,SAAL,CAAeC,YAAnB,CAAgC,2BAAhC,CAAjB;AAEA,QAAMC,OAAO,GAAG,IAAIb,WAAJ,CAAgBU,QAAhB,EAA0B;AACxCI,IAAAA,WAAW,EAAEb,OAAO,CAACc,IADmB;AAExCC,IAAAA,MAAM,EAAE;AAFgC,GAA1B,CAAhB,CAJgC,CAUhC;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIY,UAAU,GAAG,EAAjB;AAEA,QAAIC,CAAJ;AACA,QAAIC,CAAJ;AACA,QAAIC,SAAS,GAAC,CAAd;AACA,QAAIC,OAAO,GAAGZ,YAAY,CAACA,YAA3B;AACA,UAAMa,eAAe,GAAGC,IAAI,CAACC,IAAL,CAAUf,YAAY,CAACgB,MAAb,GAAsB,EAAhC,CAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;;AACA,UAAMW,YAAY;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYf,OAAO,CAACgB,GAAR,CAAYC,SAAZ,CAAsB;AACnDC,gBAAAA,sBAAsB,EAAE,4CAD2B;AAEnDC,gBAAAA,SAAS,EAAE,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,CAFwC;AAGnDC,gBAAAA,IAAI,EAAE,CAH6C;AAInDC,gBAAAA,SAAS,EAAE;AAJwC,eAAtB,CADZ;;AAAA;AAAA;AACZC,cAAAA,MADY,yBACZA,MADY;AACJC,cAAAA,KADI,yBACJA,KADI;AAOpBnB,cAAAA,UAAU,CAACoB,IAAX,CAAgBF,MAAhB;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZP,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAUIA,IAAAA,YAAY;AACf,GArBI,EAqBF,EArBE,CAAT,CAZgC,CAkChC;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADJ;AAQC,CAlFD;;GAAMpB,K;;KAAAA,K;AAoFN,eAAeA,KAAf,C,CAKA","sourcesContent":["import * as Web3 from 'web3';\r\nimport { OpenSeaPort, Network, OpenSeaAsset  } from 'opensea-js';\r\nimport React, { Component, useEffect } from 'react';\r\nimport OpenSeaApi from \"./OpenSeaApi.js\";\r\nimport { OrderSide } from 'opensea-js/lib/types';\r\n\r\n\r\n\r\n\r\nconst OsSdk = (tokenIdArray) => {\r\n\r\nconst provider = new Web3.providers.HttpProvider('https://mainnet.infura.io');\r\n\r\nconst seaport = new OpenSeaPort(provider, {\r\n  networkName: Network.Main,\r\n  apiKey: '2f2a0900458f4bdfbb489680a58e7526'\r\n});\r\n\r\n\r\n//calls to reach collection total\r\n\r\nuseEffect(() => {\r\n\r\n    let orderArray = [];\r\n\r\n    let i;\r\n    let j;\r\n    let offsetNum=0;\r\n    let idArray = tokenIdArray.tokenIdArray;\r\n    const callsPerProject = Math.ceil(tokenIdArray.length / 50);\r\n    console.log(orderArray);\r\n    const fetchParcels = async () => {\r\n    const  { orders, count } = await seaport.api.getOrders({\r\n        asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n        token_ids: [3396,9998,7024,6508],\r\n        side: 0,\r\n        sale_kind: 0,\r\n      })\r\n     orderArray.push(orders);\r\n\r\n        }\r\n        fetchParcels();\r\n    }, []);\r\n// useEffect(() => {\r\n// let orderArray = [];\r\n\r\n// let i;\r\n// let j;\r\n// let offsetNum=0;\r\n// let idArray = tokenIdArray.tokenIdArray;\r\n// const callsPerProject = Math.ceil(tokenIdArray.length / 50);\r\n\r\n//     const fetchParcels = async () => {\r\n\r\n//         for (i = 0; i < callsPerProject; i++, offsetNum+=50) {\r\n\r\n//         const  { orders } = await seaport.api.getOrders({\r\n     \r\n//             asset_contract_address: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\r\n//             token_ids: [3396],\r\n//             offset: offsetNum,\r\n//             limit: 50,\r\n//             side: 0,\r\n//             sale_kind: 0,\r\n//         })\r\n \r\n//           .then(function(orders) {\r\n//             orderArray.push(orders);\r\n//             console.log(idArray)\r\n//             orderArray.push(orders);\r\n     \r\n//         },\r\n//           (error) => {\r\n//            //setLoading(true),\r\n//             error;\r\n//           }\r\n//         ) \r\n//         }\r\n//     }\r\n//     fetchParcels();\r\n// }, []);\r\n\r\n\r\nreturn (\r\n    <div className=\"container2\">\r\n    <div className=\"container1\">\r\n        Hi Joe\r\n    </div>\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nexport default OsSdk;\r\n\r\n\r\n\r\n\r\n//https://api.opensea.io/wyvern/v1/orders?bundled=false&include_bundled=false&side=1&limit=20&offset=0&order_by=created_date&order_direction=desc', options)"]},"metadata":{},"sourceType":"module"}