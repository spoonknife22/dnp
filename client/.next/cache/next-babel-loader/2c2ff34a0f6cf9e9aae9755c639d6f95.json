{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\InnerPropForm.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Col } from \"shards-react\";\nimport { toast } from 'react-toastify';\nimport NominationButton from '../buttons/NominateButton';\nimport { Loader } from 'rimble-ui';\nimport InitialContributeModal from '../modals/InitialContibModal';\nimport Web3 from \"web3\";\n\nconst InnerPropForm = ({\n  drizzle,\n  drizzleState,\n  prevOrderStatus,\n  props,\n  propAddress,\n  tokenId,\n  assetPrice,\n  userManaBalance,\n  expiresAt,\n  orderId,\n  orderStatus,\n  storedOrderId\n}) => {\n  let web3 = new Web3(Web3.givenProvider);\n\n  const _useState = useState(null),\n        currentProp = _useState[0],\n        setCurrentProp = _useState[1];\n\n  const listPrice = web3.utils.fromWei(\"\".concat(assetPrice), 'ether'); //Test network address\n\n  const nftAddress = '0x804516C4c64E3D2a78ef5eAc0E6a57A0b6bB96B3';\n  useEffect(() => {\n    setCurrentProp(propAddress);\n  }, [propAddress]);\n\n  const nominateAsset = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(values) {\n      var text, salePrice, reSalePrice, account, memberBool, user, userId, contract;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            text = values.text, salePrice = values.salePrice;\n            reSalePrice = web3.utils.toWei(\"\".concat(salePrice), 'ether');\n            account = drizzleState.accounts['0'];\n            _context.next = 5;\n            return drizzle.contracts.UserStorage.methods.addresses(account).call();\n\n          case 5:\n            memberBool = _context.sent;\n\n            if (!memberBool) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 9;\n            return drizzle.contracts.UserStorage.methods.profiles(account).call();\n\n          case 9:\n            user = _context.sent;\n            userId = user.userId;\n            _context.next = 13;\n            return drizzle.contracts.ProposalController;\n\n          case 13:\n            contract = _context.sent;\n            _context.prev = 14;\n            contract.methods[\"createProposal\"].cacheSend(orderId, userId, expiresAt, assetPrice, reSalePrice, text, tokenId, nftAddress);\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](14);\n            return _context.abrupt(\"return\", toast.error(\"Sorry, we couldn't create asset nomination: \".concat(_context.t0), {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 21:\n            _context.next = 24;\n            break;\n\n          case 23:\n            return _context.abrupt(\"return\", toast.warning(\"Join the Consortium and nominate this asset\", {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[14, 18]]);\n    }));\n\n    return function nominateAsset(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  let yup = require('yup');\n\n  const schema = yup.object({\n    text: yup.string().max(100, 'To many characters').required('Required'),\n    salePrice: yup.number().typeError(\"Must be a number\").moreThan(listPrice.toString(), 'Must be more than current price.').required('Required'),\n    termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\n  });\n\n  if (currentProp === null) {\n    return __jsx(\"div\", {\n      className: \"align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, currentProp, \" InnerPropForm 65\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }));\n  } //if(currentProp === '0x0000000000000000000000000000000000000000' || prevOrderStatus === 'cancelled' ) {\n\n\n  if (currentProp === '0x0000000000000000000000000000000000000000' && orderStatus != 'sold') {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Details\\xA0\\xA0\", __jsx(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"1st yr. asset for sold at resale price. 2nd yr. at purchase price. If not resold asset awarded through random number generation\"))), __jsx(Formik, {\n      initialValues: {\n        text: '',\n        salePrice: '',\n        termsOfService: false\n      },\n      validationSchema: schema,\n      onSubmit: (values, actions) => {\n        nominateAsset(values);\n        addReview(values);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      errors\n    }) => __jsx(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"validationFormik01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      as: \"textarea\",\n      rows: 3,\n      name: \"text\",\n      placeholder: \"Pitch - 100 character max\",\n      value: values.text,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: values.text,\n      isInvalid: touched.text && !!errors.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, errors.text)), __jsx(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      name: \"salePrice\",\n      placeholder: \"Resale Price\",\n      value: values.salePrice,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: touched.salePrice && !!errors.salePrice,\n      isValid: values.salePrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, errors.salePrice))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Check, {\n      required: true,\n      name: \"termsOfService\",\n      label: \"Agree to terms and conditions\",\n      onChange: handleChange,\n      isInvalid: !!errors.termsOfService,\n      feedback: errors.termsOfService,\n      id: \"validationFormik0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    })), __jsx(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(NominationButton, {\n      props: props,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  if (currentProp !== 'undefined') {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, __jsx(InitialContributeModal, {\n      propAddress: currentProp,\n      userManaBalance: userManaBalance,\n      assetPrice: assetPrice,\n      drizzleState: drizzleState,\n      drizzle: drizzle,\n      tokenId: tokenId,\n      currentExpiresAt: expiresAt,\n      orderStatus: orderStatus,\n      orderId: orderId,\n      prevOrderStatus: prevOrderStatus,\n      storedOrderId: storedOrderId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, \"InnerPropFor 167\");\n  }\n};\n\nconst mapStateToProps = state => ({\n  propAddress: state.appReducers.propAddress\n});\n\nexport default connect(mapStateToProps, null)(InnerPropForm);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/InnerPropForm.js"],"names":["React","useState","useEffect","Modal","connect","Form","Formik","Yup","Col","toast","NominationButton","Loader","InitialContributeModal","Web3","InnerPropForm","drizzle","drizzleState","prevOrderStatus","props","propAddress","tokenId","assetPrice","userManaBalance","expiresAt","orderId","orderStatus","storedOrderId","web3","givenProvider","currentProp","setCurrentProp","listPrice","utils","fromWei","nftAddress","nominateAsset","values","text","salePrice","reSalePrice","toWei","account","accounts","contracts","UserStorage","methods","addresses","call","memberBool","profiles","user","userId","ProposalController","contract","cacheSend","error","position","POSITION","TOP_RIGHT","warning","yup","require","schema","object","string","max","required","number","typeError","moreThan","toString","termsOfService","bool","oneOf","actions","addReview","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","appReducers"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAQ,KAAKC,GAAb,MAAsB,KAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,sBAAP,MAAmC,8BAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA,eAAzB;AAA0CC,EAAAA,KAA1C;AAAiDC,EAAAA,WAAjD;AAA8DC,EAAAA,OAA9D;AAAuEC,EAAAA,UAAvE;AAAmFC,EAAAA,eAAnF;AAAoGC,EAAAA,SAApG;AAA+GC,EAAAA,OAA/G;AAAwHC,EAAAA,WAAxH;AAAqIC,EAAAA;AAArI,CAAD,KAA0J;AAC9K,MAAIC,IAAI,GAAG,IAAId,IAAJ,CAASA,IAAI,CAACe,aAAd,CAAX;;AAD8K,oBAExI3B,QAAQ,CAAC,IAAD,CAFgI;AAAA,QAEvK4B,WAFuK;AAAA,QAE1JC,cAF0J;;AAG9K,QAAMC,SAAS,GAAGJ,IAAI,CAACK,KAAL,CAAWC,OAAX,WAAsBZ,UAAtB,GAAmC,OAAnC,CAAlB,CAH8K,CAK9K;;AACA,QAAMa,UAAU,GAAG,4CAAnB;AAEAhC,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,cAAc,CAACX,WAAD,CAAd;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,QAAMgB,aAAa;AAAA,uEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AACZC,YAAAA,IADY,GACQD,MADR,CACZC,IADY,EACNC,SADM,GACQF,MADR,CACNE,SADM;AAGdC,YAAAA,WAHc,GAGAZ,IAAI,CAACK,KAAL,CAAWQ,KAAX,WAAoBF,SAApB,GAAgC,OAAhC,CAHA;AAKdG,YAAAA,OALc,GAKJzB,YAAY,CAAC0B,QAAb,CAAsB,GAAtB,CALI;AAAA;AAAA,mBAMK3B,OAAO,CAAC4B,SAAR,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCC,SAAtC,CAAgDL,OAAhD,EAAyDM,IAAzD,EANL;;AAAA;AAMdC,YAAAA,UANc;;AAAA,iBAQjBA,UARiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASCjC,OAAO,CAAC4B,SAAR,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCI,QAAtC,CAA+CR,OAA/C,EAAwDM,IAAxD,EATD;;AAAA;AASZG,YAAAA,IATY;AAUVC,YAAAA,MAVU,GAUCD,IAVD,CAUVC,MAVU;AAAA;AAAA,mBAWKpC,OAAO,CAAC4B,SAAR,CAAkBS,kBAXvB;;AAAA;AAWZC,YAAAA,QAXY;AAAA;AAalBA,YAAAA,QAAQ,CAACR,OAAT,CAAiB,gBAAjB,EAAmCS,SAAnC,CAA6C9B,OAA7C,EAAsD2B,MAAtD,EAA8D5B,SAA9D,EAAyEF,UAAzE,EAAqFkB,WAArF,EAAkGF,IAAlG,EAAwGjB,OAAxG,EAAiHc,UAAjH;AAbkB;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAgBTzB,KAAK,CAAC8C,KAAN,qEAAiE;AAAEC,cAAAA,QAAQ,EAAE/C,KAAK,CAACgD,QAAN,CAAeC;AAA3B,aAAjE,CAhBS;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAoBXjD,KAAK,CAACkD,OAAN,gDAA8D;AAAEH,cAAAA,QAAQ,EAAE/C,KAAK,CAACgD,QAAN,CAAeC;AAA3B,aAA9D,CApBW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbvB,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAwBF,MAAIyB,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,QAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAW;AACxB1B,IAAAA,IAAI,EAAEuB,GAAG,CAACI,MAAJ,GACLC,GADK,CACD,GADC,EACI,oBADJ,EAELC,QAFK,CAEI,UAFJ,CADkB;AAIxB5B,IAAAA,SAAS,EAAEsB,GAAG,CAACO,MAAJ,GACVC,SADU,CACA,kBADA,EAEVC,QAFU,CAEDtC,SAAS,CAACuC,QAAV,EAFC,EAEqB,kCAFrB,EAGVJ,QAHU,CAGD,UAHC,CAJa;AAQxBK,IAAAA,cAAc,EAAEX,GAAG,CAACY,IAAJ,GAAWC,KAAX,CAAiB,CAAC,IAAD,CAAjB,EAAyB,0CAAzB;AARQ,GAAX,CAAf;;AAWA,MAAG5C,WAAW,KAAK,IAAnB,EAAyB;AACvB,WACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WADH,uBAEE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAvD+K,CAyDhL;;;AACA,MAAGA,WAAW,KAAK,4CAAhB,IAAgEJ,WAAW,IAAI,MAAlF,EAA0F;AACxF,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIAFF,CADF,CADF,EAOE,MAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACfY,QAAAA,IAAI,EAAE,EADS;AAEfC,QAAAA,SAAS,EAAE,EAFI;AAGfiC,QAAAA,cAAc,EAAC;AAHA,OADjB;AAME,MAAA,gBAAgB,EAAET,MANpB;AAOE,MAAA,QAAQ,EAAE,CAAC1B,MAAD,EAASsC,OAAT,KAAqB;AAC/BvC,QAAAA,aAAa,CAACC,MAAD,CAAb;AACAuC,QAAAA,SAAS,CAACvC,MAAD,CAAT;AACC,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,CAAC;AACAwC,MAAAA,YADA;AAEAC,MAAAA,YAFA;AAGAC,MAAAA,UAHA;AAIA1C,MAAAA,MAJA;AAKA2C,MAAAA,OALA;AAMAC,MAAAA;AANA,KAAD,KAQC,MAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAEJ,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpE,GAAhB;AAAqB,MAAA,EAAE,EAAC,GAAxB;AAA4B,MAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAE,CAHR;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,2BALd;AAME,MAAA,KAAK,EAAE4B,MAAM,CAACC,IANhB;AAOE,MAAA,QAAQ,EAAEwC,YAPZ;AAQE,MAAA,MAAM,EAAEC,UARV;AASE,MAAA,OAAO,EAAE1C,MAAM,CAACC,IATlB;AAUE,MAAA,SAAS,EAAE0C,OAAO,CAAC1C,IAAR,IAAgB,CAAC,CAAC2C,MAAM,CAAC3C,IAVtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAcE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG2C,MAAM,CAAC3C,IADV,CAdF,CADF,EAmBE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE7B,GAAhB;AAAqB,MAAA,EAAE,EAAC,GAAxB;AAA4B,MAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,WAAW,EAAC,cAHd;AAIE,MAAA,KAAK,EAAE4B,MAAM,CAACE,SAJhB;AAKE,MAAA,QAAQ,EAAEuC,YALZ;AAME,MAAA,MAAM,EAAEC,UANV;AAOE,MAAA,SAAS,EAAEC,OAAO,CAACzC,SAAR,IAAqB,CAAC,CAAC0C,MAAM,CAAC1C,SAP3C;AAQE,MAAA,OAAO,EAAEF,MAAM,CAACE,SARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC0C,MAAM,CAAC1C,SADR,CAZF,CAnBF,CADF,EAqCE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,gBAFP;AAGE,MAAA,KAAK,EAAC,+BAHR;AAIE,MAAA,QAAQ,EAAEuC,YAJZ;AAKE,MAAA,SAAS,EAAE,CAAC,CAACG,MAAM,CAACT,cALtB;AAME,MAAA,QAAQ,EAAES,MAAM,CAACT,cANnB;AAOE,MAAA,EAAE,EAAC,mBAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArCF,EAgDE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAkB,MAAA,KAAK,EAAErD,KAAzB;AAAgC,MAAA,OAAO,EAAEE,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhDF,CApBJ,CAPF,CADF;AAoFD;;AACA,MAAGS,WAAW,KAAK,WAAnB,EAA+B;AAC5B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,sBAAD;AACE,MAAA,WAAW,EAAEA,WADf;AAEE,MAAA,eAAe,EAAEP,eAFnB;AAGE,MAAA,UAAU,EAAED,UAHd;AAIE,MAAA,YAAY,EAAEL,YAJhB;AAKE,MAAA,OAAO,EAAED,OALX;AAME,MAAA,OAAO,EAAEK,OANX;AAOE,MAAA,gBAAgB,EAAEG,SAPpB;AAQE,MAAA,WAAW,EAAEE,WARf;AASE,MAAA,OAAO,EAAED,OATX;AAUE,MAAA,eAAe,EAAEP,eAVnB;AAWE,MAAA,aAAa,EAAES,aAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ;AAiBD,GAlBF,MAmBK;AACF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF;AAGD;AACF,CAxKD;;AA0KA,MAAMuD,eAAe,GAAIC,KAAD,KAAY;AAClC/D,EAAAA,WAAW,EAAE+D,KAAK,CAACC,WAAN,CAAkBhE;AADG,CAAZ,CAAxB;;AAIA,eAAef,OAAO,CAAC6E,eAAD,EAAkB,IAAlB,CAAP,CAA+BnE,aAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Formik} from 'formik';\r\nimport  * as Yup from 'yup';\r\nimport { Col } from \"shards-react\";\r\nimport { toast } from 'react-toastify';\r\nimport NominationButton from '../buttons/NominateButton';\r\nimport { Loader } from 'rimble-ui';\r\nimport InitialContributeModal from '../modals/InitialContibModal';\r\nimport Web3 from \"web3\";\r\n      \r\n  \r\n\r\nconst InnerPropForm = ({ drizzle, drizzleState, prevOrderStatus, props, propAddress, tokenId, assetPrice, userManaBalance, expiresAt, orderId, orderStatus, storedOrderId }) => {\r\n  let web3 = new Web3(Web3.givenProvider);\r\n  const [currentProp, setCurrentProp] = useState(null);\r\n  const listPrice = web3.utils.fromWei(`${assetPrice}`,'ether');\r\n\r\n  //Test network address\r\n  const nftAddress = '0x804516C4c64E3D2a78ef5eAc0E6a57A0b6bB96B3';\r\n           \r\n  useEffect(() => {\r\n    setCurrentProp(propAddress);\r\n  }, [propAddress])\r\n\r\n  const nominateAsset = async (values) => {\r\n    const { text, salePrice } = values;\r\n\r\n    const reSalePrice = web3.utils.toWei(`${salePrice}`,'ether');\r\n  \r\n    const account = drizzleState.accounts['0'];\r\n    const memberBool = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n   \r\n    if(memberBool) {\r\n      const user = await drizzle.contracts.UserStorage.methods.profiles(account).call();\r\n      const { userId } = user;\r\n      const contract = await drizzle.contracts.ProposalController;\r\n    try {\r\n      contract.methods[\"createProposal\"].cacheSend(orderId, userId, expiresAt, assetPrice, reSalePrice, text, tokenId, nftAddress );\r\n \r\n    } catch (err) {\r\n        return toast.error(`Sorry, we couldn't create asset nomination: ${err}`,{ position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n    else {\r\n      return toast.warning( `Join the Consortium and nominate this asset`, { position: toast.POSITION.TOP_RIGHT });\r\n  }\r\n}\r\n\r\nlet yup = require('yup');\r\nconst schema = yup.object({\r\n  text: yup.string()\r\n  .max(100, 'To many characters')\r\n  .required('Required'),\r\n  salePrice: yup.number()\r\n  .typeError(\"Must be a number\")\r\n  .moreThan(listPrice.toString(), 'Must be more than current price.')\r\n  .required('Required'),\r\n  termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\n\r\nif(currentProp === null) {\r\n  return (\r\n    <div className=\"align-items-center\">   \r\n      {currentProp} InnerPropForm 65  \r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n//if(currentProp === '0x0000000000000000000000000000000000000000' || prevOrderStatus === 'cancelled' ) {\r\nif(currentProp === '0x0000000000000000000000000000000000000000' && orderStatus != 'sold') {\r\n  return (   \r\n    <>      \r\n      <div>\r\n        <h6>\r\n          Details&nbsp;&nbsp;\r\n          <small className=\"text-muted\">1st yr. asset for sold at resale price. 2nd yr. at purchase price. If not resold asset awarded through random number generation</small>\r\n        </h6>\r\n      </div>\r\n      <Formik\r\n        initialValues={{\r\n        text: '',\r\n        salePrice: '',\r\n        termsOfService:false,\r\n        }}\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n        nominateAsset(values);\r\n        addReview(values);\r\n        }}\r\n      >\r\n        {({   \r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n                {/* <Form.Label className=\"fw-bolder\">Pitch</Form.Label> */}\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  as=\"textarea\" \r\n                  rows={3}\r\n                  name=\"text\"\r\n                  placeholder='Pitch - 100 character max'\r\n                  value={values.text}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={values.text}\r\n                  isInvalid={touched.text && !!errors.text}\r\n                  />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.text}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                {/* <Form.Label>Resale Price</Form.Label> */}\r\n                <Form.Control\r\n                  type=\"text\" \r\n                  name=\"salePrice\"\r\n                  placeholder=\"Resale Price\"\r\n                  value={values.salePrice}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.salePrice && !!errors.salePrice}\r\n                  isValid={values.salePrice}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">  \r\n                {errors.salePrice}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Group>\r\n              <Form.Check\r\n                required\r\n                name=\"termsOfService\"\r\n                label=\"Agree to terms and conditions\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.termsOfService}\r\n                feedback={errors.termsOfService}\r\n                id=\"validationFormik0\"\r\n              />\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n              <NominationButton props={props} tokenId={tokenId} />\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );   \r\n}        \r\n if(currentProp !== 'undefined'){\r\n    return (\r\n        <div>\r\n          <InitialContributeModal \r\n            propAddress={currentProp} \r\n            userManaBalance={userManaBalance}\r\n            assetPrice={assetPrice} \r\n            drizzleState={drizzleState} \r\n            drizzle={drizzle} \r\n            tokenId={tokenId} \r\n            currentExpiresAt={expiresAt}\r\n            orderStatus={orderStatus}\r\n            orderId={orderId}\r\n            prevOrderStatus={prevOrderStatus}\r\n            storedOrderId={storedOrderId}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <div>InnerPropFor 167</div>\r\n    )\r\n  }\r\n} \r\n\r\nconst mapStateToProps = (state) => ({\r\n  propAddress: state.appReducers.propAddress\r\n})\r\n     \r\nexport default connect(mapStateToProps, null)(InnerPropForm);"]},"metadata":{},"sourceType":"module"}