{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\modals\\\\ContributeInnerModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from \"web3\";\nimport InterMediateForm from '../forms/InterMediateForm';\nimport { Loader } from 'rimble-ui';\n\nconst ContributeInnnerModal = ({\n  props,\n  gotContractBalance,\n  prevOrderStatus,\n  proposalStorageAbi,\n  gotPropContract\n}) => {\n  _s();\n\n  const drizzleState = props.drizzleState,\n        drizzle = props.drizzle,\n        propAddress = props.propAddress,\n        tokenId = props.tokenId,\n        assetPrice = props.assetPrice,\n        orderStatus = props.orderStatus,\n        orderId = props.orderId,\n        storedOrderId = props.storedOrderId; //const [status, setProposalSatus] = useState(null);\n\n  console.log(propAddress);\n  let web3 = new Web3(Web3.givenProvider);\n\n  if (tokenId === null) {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  {\n    propAddress && proposalStorageAbi ? useEffect(() => {\n      fetchProposalAddress();\n    }, [propAddress]) : __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, propAddress, \" ContributeInnerModal 27\", __jsx(Loader, {\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  const fetchProposalAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var proposalAddress, contractConfig, events, proposalContract, contractData, listPrice, balance, expiresAt, depositAmount;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            proposalAddress = \"\".concat(propAddress);\n            contractConfig = {\n              contractName: \"\".concat(propAddress),\n              web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\n            };\n\n            if (!drizzle.contracts[\"\".concat(propAddress)]) {\n              events = ['ContributionSuccess', 'ProposalEvent', 'LogNewProvableQuery', 'RandomFailure'];\n              drizzle.addContract(contractConfig, events);\n            }\n\n            if (!drizzle.contracts[\"\".concat(propAddress)]) {\n              _context.next = 14;\n              break;\n            }\n\n            proposalContract = drizzle.contracts[\"\".concat(propAddress)];\n            _context.next = 7;\n            return proposalContract.methods.proposals(\"\".concat(tokenId)).call();\n\n          case 7:\n            contractData = _context.sent;\n            listPrice = contractData.listPrice, balance = contractData.balance, expiresAt = contractData.expiresAt;\n            _context.next = 11;\n            return proposalContract.methods.depositedAmount(drizzleState.accounts[0]).call();\n\n          case 11:\n            depositAmount = _context.sent;\n            gotContractBalance(balance, depositAmount, listPrice, expiresAt);\n            gotPropContract(proposalContract);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchProposalAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (drizzle.contracts[\"\".concat(propAddress)]) {\n    return __jsx(React.Fragment, null, console.log(prevOrderStatus), __jsx(InterMediateForm, {\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      assetPrice: assetPrice,\n      propAddress: propAddress,\n      tokenId: tokenId,\n      orderStatus: orderStatus,\n      orderId: orderId,\n      storedOrderId: storedOrderId,\n      prevOrderStatus: prevOrderStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return __jsx(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, propAddress, \" ContributeInnerModal 52\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\n_s(ContributeInnnerModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ContributeInnnerModal;\n\nconst mapStateToProps = state => ({\n  proposalStorageAbi: state.appReducers.proposalStorageAbi\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gotContractBalance: (balance, depositAmount, listPrice, expiresAt) => dispatch({\n    type: 'PROPOSAL_BALANCE',\n    balance: \"\".concat(balance),\n    depositAmount: depositAmount,\n    listPrice: listPrice,\n    expiresAt: expiresAt\n  }),\n  gotPropContract: proposalContract => dispatch({\n    type: 'PROPOSAL_STORAGE_CONTRACT',\n    proposalStorage: proposalContract\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeInnnerModal\");","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/modals/ContributeInnerModal.js"],"names":["React","useEffect","useState","connect","Web3","InterMediateForm","Loader","ContributeInnnerModal","props","gotContractBalance","prevOrderStatus","proposalStorageAbi","gotPropContract","drizzleState","drizzle","propAddress","tokenId","assetPrice","orderStatus","orderId","storedOrderId","console","log","web3","givenProvider","fetchProposalAddress","proposalAddress","contractConfig","contractName","web3Contract","eth","Contract","contracts","events","addContract","proposalContract","methods","proposals","call","contractData","listPrice","balance","expiresAt","depositedAmount","accounts","depositAmount","mapStateToProps","state","appReducers","mapDispatchToProps","dispatch","type","proposalStorage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from \"web3\";\r\nimport InterMediateForm from '../forms/InterMediateForm';\r\nimport { Loader } from 'rimble-ui';\r\n\r\nconst ContributeInnnerModal = ({ props, gotContractBalance, prevOrderStatus, proposalStorageAbi, gotPropContract  }) => {\r\n  const { drizzleState, drizzle, propAddress, tokenId, assetPrice, orderStatus, orderId, storedOrderId } = props;\r\n  //const [status, setProposalSatus] = useState(null);\r\n  console.log(propAddress)\r\n  let web3 = new Web3(Web3.givenProvider);\r\n\r\n  if(tokenId === null){\r\n    return(\r\n      <div className=\"mx-auto\">   \r\n        <Loader color=\"#007bff\" size=\"40px\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  {propAddress && proposalStorageAbi ? \r\n    useEffect(() => {\r\n      fetchProposalAddress();\r\n    }, [propAddress])\r\n\r\n  :\r\n    <div className=\"mx-auto\">   \r\n      {propAddress} ContributeInnerModal 27\r\n      <Loader color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  }\r\nconst fetchProposalAddress = async () => {\r\n      let proposalAddress = `${propAddress}`;\r\n\r\n      const contractConfig = {\r\n        contractName: `${propAddress}`,\r\n        web3Contract: new web3.eth.Contract(proposalStorageAbi, proposalAddress)\r\n      };\r\n\r\n      if (!drizzle.contracts[`${propAddress}`]) {\r\n      let events = ['ContributionSuccess','ProposalEvent','LogNewProvableQuery','RandomFailure'] ;  \r\n      drizzle.addContract(contractConfig, events);\r\n      }\r\n\r\n      if(drizzle.contracts[`${propAddress}`]){\r\n        const proposalContract = drizzle.contracts[`${propAddress}`];\r\n        const contractData = await proposalContract.methods.proposals(`${tokenId}`).call();\r\n        const { listPrice, balance, expiresAt } = contractData;\r\n        const depositAmount = await proposalContract.methods.depositedAmount(drizzleState.accounts[0]).call();\r\n        gotContractBalance(balance, depositAmount, listPrice, expiresAt); \r\n        gotPropContract(proposalContract);\r\n    }\r\n  \r\n}\r\n \r\nif (drizzle.contracts[`${propAddress}`]) {\r\n  return ( \r\n        <>{console.log(prevOrderStatus)}\r\n          <InterMediateForm \r\n            drizzle={drizzle} \r\n            drizzleState={drizzleState} \r\n            assetPrice={assetPrice} \r\n            propAddress={propAddress} \r\n            tokenId={tokenId} \r\n            orderStatus={orderStatus} \r\n            orderId={orderId}  \r\n            storedOrderId={storedOrderId}\r\n            prevOrderStatus={prevOrderStatus}\r\n          />\r\n        </>\r\n      );    \r\n  } \r\n\r\n  else {\r\n    return (\r\n      <div className=\"mx-auto\">   \r\n        {propAddress} ContributeInnerModal 52\r\n        <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n}\r\n\r\n  const mapStateToProps = (state) => ({\r\n    proposalStorageAbi: state.appReducers.proposalStorageAbi\r\n  })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  gotContractBalance: (balance, depositAmount, listPrice, expiresAt) => dispatch({ type:'PROPOSAL_BALANCE', balance:`${balance}`, depositAmount: depositAmount, listPrice:listPrice, expiresAt:expiresAt}),\r\n  gotPropContract: (proposalContract) => dispatch({ type:'PROPOSAL_STORAGE_CONTRACT', proposalStorage:proposalContract})\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributeInnnerModal);"]},"metadata":{},"sourceType":"module"}