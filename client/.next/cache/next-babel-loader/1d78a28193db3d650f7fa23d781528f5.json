{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\code\\\\cacp\\\\client\\\\components\\\\forms\\\\InnerPropForm.js\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Col, Button, Row } from \"shards-react\";\nimport { toast } from 'react-toastify';\nimport NominationButton from '../buttons/NominateButton';\nimport { Loader } from 'rimble-ui';\nimport InitialContributeModal from '../modals/InitialContibModal';\nimport Web3 from \"web3\";\nimport Accordion from 'react-bootstrap/Accordion';\n\nconst InnerPropForm = ({\n  drizzle,\n  drizzleState,\n  prevOrderStatus,\n  props,\n  propAddress,\n  tokenId,\n  assetPrice,\n  userManaBalance,\n  expiresAt,\n  orderId,\n  orderStatus,\n  storedOrderId\n}) => {\n  let web3 = new Web3(Web3.givenProvider);\n\n  const _useState = useState(null),\n        currentProp = _useState[0],\n        setCurrentProp = _useState[1];\n\n  const listPrice = web3.utils.fromWei(\"\".concat(assetPrice), 'ether'); //Test network address\n\n  const nftAddress = '0x804516C4c64E3D2a78ef5eAc0E6a57A0b6bB96B3';\n  useEffect(() => {\n    setCurrentProp(propAddress);\n  }, [propAddress]);\n\n  const nominateAsset = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(values) {\n      var salePrice, reSalePrice, account, memberBool, user, userId, contract;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            salePrice = values.salePrice;\n            reSalePrice = web3.utils.toWei(\"\".concat(salePrice), 'ether');\n            account = drizzleState.accounts['0'];\n            _context.next = 5;\n            return drizzle.contracts.UserStorage.methods.addresses(account).call();\n\n          case 5:\n            memberBool = _context.sent;\n\n            if (!memberBool) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 9;\n            return drizzle.contracts.UserStorage.methods.profiles(account).call();\n\n          case 9:\n            user = _context.sent;\n            userId = user.userId;\n            _context.next = 13;\n            return drizzle.contracts.ProposalController;\n\n          case 13:\n            contract = _context.sent;\n            _context.prev = 14;\n            contract.methods[\"createProposal\"].cacheSend(orderId, userId, expiresAt, assetPrice, reSalePrice, tokenId, nftAddress);\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](14);\n            return _context.abrupt(\"return\", toast.error(\"Sorry, we couldn't create asset nomination: \".concat(_context.t0), {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 21:\n            _context.next = 24;\n            break;\n\n          case 23:\n            return _context.abrupt(\"return\", toast.warning(\"Join the Consortium and nominate this asset\", {\n              position: toast.POSITION.TOP_RIGHT\n            }));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[14, 18]]);\n    }));\n\n    return function nominateAsset(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  let yup = require('yup');\n\n  const schema = yup.object({\n    // text: yup.string()\n    // .max(100, 'To many characters')\n    // .required('Required'),\n    salePrice: yup.number().typeError(\"Must be a number\").moreThan(listPrice.toString(), 'Must be more than current price.').required('Required'),\n    termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\n  });\n\n  if (currentProp === null) {\n    return __jsx(\"div\", {\n      className: \"align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, currentProp, \" InnerPropForm 65\", __jsx(Loader, {\n      className: \"mx-auto\",\n      color: \"#007bff\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }));\n  } //if(currentProp === '0x0000000000000000000000000000000000000000' || prevOrderStatus === 'cancelled' ) {\n\n\n  if (currentProp === '0x0000000000000000000000000000000000000000' && orderStatus != 'sold') {\n    return __jsx(React.Fragment, null, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(Accordion, {\n      defaultActiveKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"pr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(Accordion.Toggle, {\n      as: Button,\n      size: \"md\",\n      variant: \"link\",\n      eventKey: \"0\",\n      outline: true,\n      theme: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"DNAP Details\")), __jsx(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __jsx(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \" In the 1st year the asset will go on sale at the resale price. In the 2nd year it will go on sale at the purchase price. If it is not sold by the In the 3rd year the asset will be awarded to an owner through a weighted random number generation.\")))))), __jsx(Formik, {\n      initialValues: {\n        salePrice: '',\n        termsOfService: false\n      },\n      validationSchema: schema,\n      onSubmit: (values, actions) => {\n        nominateAsset(values);\n        addReview(values);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      errors\n    }) => __jsx(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, __jsx(Form.Row, {\n      className: \"mt-3 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, __jsx(Form.Group, {\n      controlId: \"validationFormik02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Control, {\n      size: \"lg\",\n      type: \"text\",\n      name: \"salePrice\",\n      placeholder: \"Resale Price\",\n      value: values.salePrice,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: touched.salePrice && !!errors.salePrice,\n      isValid: values.salePrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, errors.salePrice))), __jsx(Form.Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Check, {\n      required: true,\n      className: \"mb-2 mr-sm-2\",\n      name: \"termsOfService\",\n      label: \"Agree to terms and conditions\",\n      onChange: handleChange,\n      isInvalid: !!errors.termsOfService,\n      feedback: errors.termsOfService,\n      id: \"validationFormik0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }))), __jsx(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, __jsx(NominationButton, {\n      props: props,\n      tokenId: tokenId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n  if (currentProp !== 'undefined') {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, __jsx(InitialContributeModal, {\n      propAddress: currentProp,\n      userManaBalance: userManaBalance,\n      assetPrice: assetPrice,\n      drizzleState: drizzleState,\n      drizzle: drizzle,\n      tokenId: tokenId,\n      currentExpiresAt: expiresAt,\n      orderStatus: orderStatus,\n      orderId: orderId,\n      prevOrderStatus: prevOrderStatus,\n      storedOrderId: storedOrderId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, \"InnerPropFor 167\");\n  }\n};\n\nconst mapStateToProps = state => ({\n  propAddress: state.appReducers.propAddress\n});\n\nexport default connect(mapStateToProps, null)(InnerPropForm);","map":{"version":3,"sources":["C:/Users/Samsung/code/cacp/client/components/forms/InnerPropForm.js"],"names":["React","useState","useEffect","Modal","connect","Form","Formik","Yup","Col","Button","Row","toast","NominationButton","Loader","InitialContributeModal","Web3","Accordion","InnerPropForm","drizzle","drizzleState","prevOrderStatus","props","propAddress","tokenId","assetPrice","userManaBalance","expiresAt","orderId","orderStatus","storedOrderId","web3","givenProvider","currentProp","setCurrentProp","listPrice","utils","fromWei","nftAddress","nominateAsset","values","salePrice","reSalePrice","toWei","account","accounts","contracts","UserStorage","methods","addresses","call","memberBool","profiles","user","userId","ProposalController","contract","cacheSend","error","position","POSITION","TOP_RIGHT","warning","yup","require","schema","object","number","typeError","moreThan","toString","required","termsOfService","bool","oneOf","actions","addReview","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","appReducers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Formik} from 'formik';\r\nimport  * as Yup from 'yup';\r\nimport { Col, Button, Row } from \"shards-react\";\r\nimport { toast } from 'react-toastify';\r\nimport NominationButton from '../buttons/NominateButton';\r\nimport { Loader } from 'rimble-ui';\r\nimport InitialContributeModal from '../modals/InitialContibModal';\r\nimport Web3 from \"web3\";\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\n  \r\n\r\nconst InnerPropForm = ({ drizzle, drizzleState, prevOrderStatus, props, propAddress, tokenId, assetPrice, userManaBalance, expiresAt, orderId, orderStatus, storedOrderId }) => {\r\n  let web3 = new Web3(Web3.givenProvider);\r\n  const [currentProp, setCurrentProp] = useState(null);\r\n  const listPrice = web3.utils.fromWei(`${assetPrice}`,'ether');\r\n\r\n  //Test network address\r\n  const nftAddress = '0x804516C4c64E3D2a78ef5eAc0E6a57A0b6bB96B3';\r\n           \r\n  useEffect(() => {\r\n    setCurrentProp(propAddress);\r\n  }, [propAddress])\r\n\r\n  const nominateAsset = async (values) => {\r\n    const { salePrice } = values;\r\n\r\n    const reSalePrice = web3.utils.toWei(`${salePrice}`,'ether');\r\n  \r\n    const account = drizzleState.accounts['0'];\r\n    const memberBool = await drizzle.contracts.UserStorage.methods.addresses(account).call();\r\n   \r\n    if(memberBool) {\r\n      const user = await drizzle.contracts.UserStorage.methods.profiles(account).call();\r\n      const { userId } = user;\r\n      const contract = await drizzle.contracts.ProposalController;\r\n    try {\r\n      contract.methods[\"createProposal\"].cacheSend(orderId, userId, expiresAt, assetPrice, reSalePrice, tokenId, nftAddress );\r\n \r\n    } catch (err) {\r\n        return toast.error(`Sorry, we couldn't create asset nomination: ${err}`,{ position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n    else {\r\n      return toast.warning( `Join the Consortium and nominate this asset`, { position: toast.POSITION.TOP_RIGHT });\r\n  }\r\n}\r\n\r\nlet yup = require('yup');\r\nconst schema = yup.object({\r\n  // text: yup.string()\r\n  // .max(100, 'To many characters')\r\n  // .required('Required'),\r\n  salePrice: yup.number()\r\n  .typeError(\"Must be a number\")\r\n  .moreThan(listPrice.toString(), 'Must be more than current price.')\r\n  .required('Required'),\r\n  termsOfService: yup.bool().oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\n\r\nif(currentProp === null) {\r\n  return (\r\n    <div className=\"align-items-center\">   \r\n      {currentProp} InnerPropForm 65  \r\n      <Loader className=\"mx-auto\" color=\"#007bff\" size=\"40px\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n//if(currentProp === '0x0000000000000000000000000000000000000000' || prevOrderStatus === 'cancelled' ) {\r\nif(currentProp === '0x0000000000000000000000000000000000000000' && orderStatus != 'sold') {\r\n  return (   \r\n    <>\r\n      <Row>\r\n      <Accordion  defaultActiveKey=\"1\">\r\n            <div className=\"pr-2\">\r\n            <Accordion.Toggle as={Button} size=\"md\" variant=\"link\" eventKey=\"0\" outline theme=\"light\">\r\n            <div>DNAP Details</div>\r\n            </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <div className=\"mb-1\">\r\n                  <small className=\"text-muted\"> In the 1st year the asset will go on sale at the resale price. In the 2nd year it will go on sale at the purchase price. If it is not sold by the In the 3rd year the asset will be awarded to an owner through a weighted random number generation.</small>\r\n                </div>\r\n              </Accordion.Collapse>\r\n            </div> \r\n          </Accordion>\r\n      </Row>\r\n\r\n      <Formik\r\n        initialValues={{\r\n        salePrice: '',\r\n        termsOfService:false,\r\n        }}\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n        nominateAsset(values);\r\n        addReview(values);\r\n        }}\r\n      >\r\n        {({   \r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => (\r\n    \r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row className=\"mt-3 justify-content-center\">\r\n          <Form.Group controlId=\"validationFormik02\">\r\n            <Form.Control\r\n            size=\"lg\"\r\n              type=\"text\" \r\n              name=\"salePrice\"\r\n              placeholder=\"Resale Price\"\r\n              value={values.salePrice}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              isInvalid={touched.salePrice && !!errors.salePrice}\r\n              isValid={values.salePrice}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">  \r\n            {errors.salePrice}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"justify-content-center\">\r\n            <Form.Group>\r\n              <Form.Check\r\n                required\r\n                className=\"mb-2 mr-sm-2\"\r\n                name=\"termsOfService\"\r\n                label=\"Agree to terms and conditions\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.termsOfService}\r\n                feedback={errors.termsOfService}\r\n                id=\"validationFormik0\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Modal.Footer>\r\n            <NominationButton props={props} tokenId={tokenId} />\r\n          </Modal.Footer>\r\n        </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );   \r\n}        \r\n if(currentProp !== 'undefined'){\r\n    return (\r\n        <div>\r\n          <InitialContributeModal \r\n            propAddress={currentProp} \r\n            userManaBalance={userManaBalance}\r\n            assetPrice={assetPrice} \r\n            drizzleState={drizzleState} \r\n            drizzle={drizzle} \r\n            tokenId={tokenId} \r\n            currentExpiresAt={expiresAt}\r\n            orderStatus={orderStatus}\r\n            orderId={orderId}\r\n            prevOrderStatus={prevOrderStatus}\r\n            storedOrderId={storedOrderId}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <div>InnerPropFor 167</div>\r\n    )\r\n  }\r\n} \r\n\r\nconst mapStateToProps = (state) => ({\r\n  propAddress: state.appReducers.propAddress\r\n})\r\n     \r\nexport default connect(mapStateToProps, null)(InnerPropForm);"]},"metadata":{},"sourceType":"module"}